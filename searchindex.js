Search.setIndex({"docnames": ["developer_guides/config", "developer_guides/debugging_tools/benchmarking", "developer_guides/debugging_tools/index", "developer_guides/debugging_tools/local_logger", "developer_guides/debugging_tools/profiling", "developer_guides/new_methods", "developer_guides/pipelines/datamanagers", "developer_guides/pipelines/dataparsers", "developer_guides/pipelines/fields", "developer_guides/pipelines/index", "developer_guides/pipelines/models", "developer_guides/pipelines/pipelines", "developer_guides/viewer/custom_gui", "developer_guides/viewer/index", "developer_guides/viewer/local_viewer", "developer_guides/viewer/viewer_control", "extensions/blender_addon", "extensions/maya_plugin", "extensions/sdfstudio", "extensions/unreal_engine", "index", "nerfology/methods/bionerf", "nerfology/methods/feature_splatting", "nerfology/methods/generfacto", "nerfology/methods/igs2gs", "nerfology/methods/in2n", "nerfology/methods/index", "nerfology/methods/instant_ngp", "nerfology/methods/kplanes", "nerfology/methods/lerf", "nerfology/methods/mipnerf", "nerfology/methods/nerf", "nerfology/methods/nerf2gs2nerf", "nerfology/methods/nerfacto", "nerfology/methods/nerfbusters", "nerfology/methods/nerfplayer", "nerfology/methods/opennerf", "nerfology/methods/pynerf", "nerfology/methods/seathru_nerf", "nerfology/methods/signerf", "nerfology/methods/splat", "nerfology/methods/splatw", "nerfology/methods/tensorf", "nerfology/methods/tetranerf", "nerfology/methods/zipnerf", "nerfology/model_components/index", "nerfology/model_components/visualize_cameras", "nerfology/model_components/visualize_encoders", "nerfology/model_components/visualize_samplers", "nerfology/model_components/visualize_samples", "nerfology/model_components/visualize_spatial_distortions", "quickstart/custom_dataset", "quickstart/data_conventions", "quickstart/existing_dataset", "quickstart/export_geometry", "quickstart/first_nerf", "quickstart/installation", "quickstart/viewer_quickstart", "reference/api/cameras", "reference/api/config", "reference/api/data/datamanagers", "reference/api/data/dataparsers", "reference/api/data/datasets", "reference/api/data/index", "reference/api/data/utils", "reference/api/field_components/embeddings", "reference/api/field_components/encodings", "reference/api/field_components/field_heads", "reference/api/field_components/index", "reference/api/field_components/mlp", "reference/api/field_components/spatial_distortions", "reference/api/fields", "reference/api/index", "reference/api/model_components/index", "reference/api/model_components/losses", "reference/api/model_components/ray_sampler", "reference/api/model_components/renderers", "reference/api/models", "reference/api/optimizers", "reference/api/plugins", "reference/api/utils/colormaps", "reference/api/utils/colors", "reference/api/utils/index", "reference/api/utils/math", "reference/api/utils/tensor_dataclass", "reference/api/viewer", "reference/cli/index", "reference/cli/ns_download_data", "reference/cli/ns_eval", "reference/cli/ns_export", "reference/cli/ns_install_cli", "reference/cli/ns_process_data", "reference/cli/ns_render", "reference/cli/ns_train", "reference/cli/ns_viewer", "reference/contributing"], "filenames": ["developer_guides/config.md", "developer_guides/debugging_tools/benchmarking.md", "developer_guides/debugging_tools/index.rst", "developer_guides/debugging_tools/local_logger.md", "developer_guides/debugging_tools/profiling.md", "developer_guides/new_methods.md", "developer_guides/pipelines/datamanagers.md", "developer_guides/pipelines/dataparsers.md", "developer_guides/pipelines/fields.md", "developer_guides/pipelines/index.rst", "developer_guides/pipelines/models.md", "developer_guides/pipelines/pipelines.md", "developer_guides/viewer/custom_gui.md", "developer_guides/viewer/index.md", "developer_guides/viewer/local_viewer.md", "developer_guides/viewer/viewer_control.md", "extensions/blender_addon.md", "extensions/maya_plugin.md", "extensions/sdfstudio.md", "extensions/unreal_engine.md", "index.md", "nerfology/methods/bionerf.md", "nerfology/methods/feature_splatting.md", "nerfology/methods/generfacto.md", "nerfology/methods/igs2gs.md", "nerfology/methods/in2n.md", "nerfology/methods/index.md", "nerfology/methods/instant_ngp.md", "nerfology/methods/kplanes.md", "nerfology/methods/lerf.md", "nerfology/methods/mipnerf.md", "nerfology/methods/nerf.md", "nerfology/methods/nerf2gs2nerf.md", "nerfology/methods/nerfacto.md", "nerfology/methods/nerfbusters.md", "nerfology/methods/nerfplayer.md", "nerfology/methods/opennerf.md", "nerfology/methods/pynerf.md", "nerfology/methods/seathru_nerf.md", "nerfology/methods/signerf.md", "nerfology/methods/splat.md", "nerfology/methods/splatw.md", "nerfology/methods/tensorf.md", "nerfology/methods/tetranerf.md", "nerfology/methods/zipnerf.md", "nerfology/model_components/index.md", "nerfology/model_components/visualize_cameras.ipynb", "nerfology/model_components/visualize_encoders.ipynb", "nerfology/model_components/visualize_samplers.ipynb", "nerfology/model_components/visualize_samples.ipynb", "nerfology/model_components/visualize_spatial_distortions.ipynb", "quickstart/custom_dataset.md", "quickstart/data_conventions.md", "quickstart/existing_dataset.md", "quickstart/export_geometry.md", "quickstart/first_nerf.md", "quickstart/installation.md", "quickstart/viewer_quickstart.rst", "reference/api/cameras.rst", "reference/api/config.rst", "reference/api/data/datamanagers.rst", "reference/api/data/dataparsers.rst", "reference/api/data/datasets.rst", "reference/api/data/index.rst", "reference/api/data/utils.rst", "reference/api/field_components/embeddings.rst", "reference/api/field_components/encodings.rst", "reference/api/field_components/field_heads.rst", "reference/api/field_components/index.rst", "reference/api/field_components/mlp.rst", "reference/api/field_components/spatial_distortions.rst", "reference/api/fields.rst", "reference/api/index.rst", "reference/api/model_components/index.rst", "reference/api/model_components/losses.rst", "reference/api/model_components/ray_sampler.rst", "reference/api/model_components/renderers.rst", "reference/api/models.rst", "reference/api/optimizers.rst", "reference/api/plugins.rst", "reference/api/utils/colormaps.rst", "reference/api/utils/colors.rst", "reference/api/utils/index.rst", "reference/api/utils/math.rst", "reference/api/utils/tensor_dataclass.rst", "reference/api/viewer.rst", "reference/cli/index.md", "reference/cli/ns_download_data.md", "reference/cli/ns_eval.md", "reference/cli/ns_export.md", "reference/cli/ns_install_cli.md", "reference/cli/ns_process_data.md", "reference/cli/ns_render.md", "reference/cli/ns_train.md", "reference/cli/ns_viewer.md", "reference/contributing.md"], "titles": ["Customizable configs", "Benchmarking workflow", "Debugging tools", "Local writer", "Code profiling support", "Adding a New Method", "DataManagers", "DataParsers", "Fields", "Pipelines overview", "Models", "Pipelines", "Custom GUI", "Viewer", "(Legacy Viewer) Local Server", "Python Viewer Control", "Blender VFX add-on", "Autodesk Maya Plug-in", "SDFStudio", "Exporting to Unreal Engine", "Contents", "BioNeRF", "Feature Splatting", "Generfacto", "Instruct-GS2GS", "Instruct-NeRF2NeRF", "Methods", "Instant-NGP", "K-Planes", "LERF", "Mip-NeRF", "NeRF", "From NeRFs to Gaussian Splats, and Back", "Nerfacto", "Nerfbusters", "NeRFPlayer", "OpenNeRF", "PyNeRF", "SeaThru-NeRF", "SIGNeRF", "Splatfacto", "Splatfacto in the Wild", "TensoRF", "Tetra-NeRF", "Zip-NeRF", "Model components", "Camera Models", "Field Encoders", "Ray Samplers", "Sample Representation", "Spatial Distortions", "Using custom data", "Data conventions", "Using existing data", "Export geometry", "Training your first model", "Installation", "Using the viewer", "Cameras", "Configs", "Datamanagers", "Data Parsers", "Datasets", "Data", "Utils", "Embeddings", "Encodings", "Field Heads", "Field Modules", "MLP", "Spatial Distortions", "Fields", "API", "Model components", "Losses", "Ray Sampler", "Renderers", "Models", "Engine", "Plugins", "Colormaps", "Colors", "Utils", "Math", "TensorDataclass", "Viewer", "CLI", "ns-download-data", "ns-eval", "ns-export", "ns-install-cli", "ns-process-data", "ns-render", "ns-train", "ns-viewer", "Contributing"], "terms": {"our": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 13, 20, 22, 23, 24, 27, 32, 33, 34, 36, 39, 51, 52, 54, 55, 57, 58, 60, 61, 64, 95], "dataclass": [0, 3, 5, 6, 7, 8, 10, 61, 63, 84], "allow": [0, 6, 16, 17, 20, 22, 24, 25, 29, 33, 38, 39, 53, 55, 61, 63, 64, 66, 79, 83, 84, 95], "you": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 31, 32, 33, 37, 38, 39, 40, 41, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 84, 86, 91, 93, 94, 95], "easili": [0, 3, 10, 20, 22, 28, 37], "plug": [0, 7], "differ": [0, 8, 10, 16, 17, 21, 22, 24, 27, 28, 31, 37, 38, 39, 40, 43, 48, 50, 51, 53, 55, 56, 57, 58, 65, 66, 77, 93], "permut": 0, "model": [0, 2, 7, 8, 9, 11, 12, 15, 17, 20, 21, 23, 24, 25, 26, 28, 29, 32, 33, 35, 36, 38, 39, 40, 43, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 64, 71, 72, 74, 75, 78, 83, 86, 93, 95], "dataload": [0, 6, 7, 28, 60, 72, 78], "modul": [0, 4, 6, 8, 10, 11, 12, 14, 15, 20, 21, 58, 60, 65, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79], "etc": [0, 51, 57, 60, 62, 64, 77, 95], "all": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 16, 17, 20, 24, 27, 31, 38, 39, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 74, 75, 77, 78, 79, 83, 84, 85, 86, 93, 94, 95], "paramet": [0, 3, 10, 12, 16, 24, 27, 38, 49, 51, 52, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 93], "type": [0, 3, 4, 5, 6, 7, 8, 9, 10, 16, 28, 29, 31, 37, 46, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 77, 78, 80, 83, 84, 85, 94, 95], "support": [0, 2, 5, 6, 12, 15, 16, 17, 18, 19, 22, 24, 26, 28, 29, 31, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 66, 69, 95], "tyro": 0, "basic": [0, 17, 20, 48, 59, 60, 61, 77, 78], "reusabl": 0, "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 66, 69, 75, 77, 78, 86, 93, 95], "found": [0, 22, 23, 24, 25, 29, 31, 32, 33, 35, 36, 39, 40, 41, 43, 51, 56], "nerfstudio": [0, 1, 3, 4, 6, 7, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 93, 95], "base_config": [0, 3, 59], "py": [0, 3, 4, 5, 17, 26, 32, 40, 51, 54, 56, 58, 61, 64, 74, 83, 86, 95], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 94, 95], "class": [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 20, 36, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85], "bottom": [0, 15, 21, 41, 51, 55, 59], "file": [0, 1, 4, 15, 16, 19, 26, 32, 40, 41, 51, 52, 54, 55, 56, 59, 61, 62, 64, 78, 86, 88, 94, 95], "i": [0, 1, 3, 4, 5, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 74, 75, 76, 77, 78, 83, 84, 85, 93, 94, 95], "upper": [0, 66, 74], "most": [0, 6, 8, 10, 11, 27, 31, 33, 37, 38, 45, 46, 48, 51, 55, 78], "level": [0, 10, 22, 27, 33, 38, 47, 51, 66, 67, 68, 69, 71, 77], "store": [0, 1, 4, 7, 12, 17, 19, 21, 27, 34, 40, 51, 60, 61, 75, 83], "sub": [0, 61], "need": [0, 1, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 24, 29, 31, 32, 33, 36, 39, 41, 46, 48, 51, 55, 56, 57, 58, 60, 61, 66, 67, 77, 95], "get": [0, 11, 14, 16, 17, 20, 24, 32, 38, 43, 45, 51, 53, 55, 56, 58, 60, 64, 66, 69, 77, 85], "start": [0, 1, 8, 10, 13, 14, 15, 16, 17, 20, 24, 25, 39, 45, 46, 48, 49, 50, 51, 53, 55, 56, 58, 72, 74, 77, 78, 83, 94], "train": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 72, 74, 75, 77, 78, 79, 83, 86, 94], "brows": [0, 17], "thi": [0, 1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 70, 71, 74, 75, 76, 77, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95], "read": [0, 12, 17, 39, 50, 55, 58, 61, 62, 64], "attribut": [0, 3, 12, 17, 59, 60, 64, 78], "annot": [0, 1, 61], "what": [0, 1, 9, 12, 17, 20, 31, 56, 64], "ar": [0, 1, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 74, 75, 76, 77, 80, 83, 84, 85, 86, 93, 94, 95], "avail": [0, 1, 12, 13, 17, 26, 39, 51, 55, 56, 59, 66, 69, 79, 93, 94], "each": [0, 1, 6, 8, 10, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 40, 44, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 63, 64, 66, 69, 72, 74, 75, 76, 83, 86, 95], "specifi": [0, 1, 3, 4, 5, 6, 7, 10, 16, 23, 24, 39, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 70, 76, 77, 78, 84, 85, 93, 94], "If": [0, 1, 3, 4, 5, 6, 7, 10, 14, 15, 16, 18, 20, 22, 23, 26, 31, 38, 39, 41, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 76, 78, 80, 85, 86, 93, 94, 95], "interest": [0, 7, 16, 20, 38, 39, 40, 49, 61], "brand": [0, 20], "data": [0, 1, 4, 5, 6, 7, 8, 9, 11, 17, 19, 24, 28, 33, 34, 37, 44, 49, 50, 55, 56, 58, 60, 62, 72, 74, 77, 78, 84, 86, 93], "format": [0, 1, 7, 10, 16, 19, 38, 51, 58, 59, 61, 86, 94, 95], "correspond": [0, 1, 6, 17, 32, 39, 44, 52, 53, 55, 58, 64, 66, 74, 77, 78], "associ": [0, 8, 10, 17, 31, 35, 40, 46, 48, 57, 58, 78], "want": [0, 1, 3, 4, 5, 8, 9, 10, 14, 15, 16, 17, 20, 23, 26, 39, 41, 48, 54, 55, 56, 59, 60, 91, 93, 94, 95], "expos": [0, 85], "configur": [0, 3, 4, 6, 10, 16, 28, 37, 38, 51, 55, 58, 59, 60, 63, 66, 69, 71, 77, 78, 79, 94], "let": [0, 6, 8, 9, 10, 17, 20, 57], "": [0, 1, 4, 6, 8, 9, 10, 11, 12, 13, 16, 17, 20, 21, 24, 26, 27, 31, 36, 40, 41, 44, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 74, 78, 83, 95], "sai": [0, 1, 8, 9, 51, 54], "call": [0, 1, 3, 6, 8, 12, 15, 17, 21, 39, 58, 60, 65, 66, 74, 76, 77, 78, 85], "nerfacto": [0, 1, 4, 6, 10, 17, 19, 20, 26, 27, 32, 35, 39, 40, 51, 52, 53, 54, 55, 56, 57, 72, 77, 93], "extend": [0, 5, 21, 28, 48, 51, 56], "describ": [0, 8, 9, 10, 20, 26, 27, 31, 38, 46, 48, 53, 58, 66, 74, 83], "here": [0, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 38, 39, 40, 41, 43, 48, 51, 52, 53, 54, 55, 56, 60, 61, 64, 74, 83, 86, 95], "befor": [0, 4, 16, 17, 56, 58, 59, 60, 64, 78], "definit": [0, 58], "defin": [0, 1, 3, 4, 6, 12, 15, 24, 36, 48, 49, 50, 52, 56, 59, 60, 61, 64, 67, 83], "actual": [0, 7, 16, 17, 59, 60, 94], "nerfactomodelconfig": [0, 10, 77], "which": [0, 1, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 34, 36, 37, 38, 39, 40, 42, 43, 46, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 71, 75, 76, 77, 78, 83, 85, 94], "point": [0, 5, 8, 10, 15, 16, 17, 31, 32, 35, 36, 37, 38, 40, 41, 43, 48, 50, 52, 53, 58, 59, 61, 63, 64, 66, 71, 75, 77, 85], "nerfactomodel": [0, 10], "make": [0, 1, 4, 6, 7, 10, 15, 16, 24, 31, 33, 38, 43, 46, 48, 51, 53, 56, 57, 60, 64, 91, 92, 94, 95], "sure": [0, 6, 17, 38, 43, 56, 91, 92, 95], "wrap": [0, 3, 59], "_target": [0, 3, 6, 7, 10, 58, 59, 60, 61, 63, 71, 77, 78], "field": [0, 5, 6, 7, 9, 10, 12, 16, 17, 20, 21, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 48, 52, 58, 61, 64, 72, 74, 75, 76, 77, 84, 85], "shown": [0, 7, 27, 32, 57, 79], "below": [0, 3, 7, 9, 17, 23, 38, 48, 50, 51, 53, 54, 55, 56, 57, 64, 95], "enabl": [0, 3, 4, 5, 6, 8, 15, 16, 20, 24, 25, 27, 29, 34, 36, 37, 40, 51, 56, 57, 58, 59, 72], "auto": [0, 51, 59], "complet": [0, 6, 31, 40, 51, 56, 59, 86, 90, 93, 94], "pass": [0, 1, 9, 12, 15, 33, 39, 43, 60, 64, 66, 75, 93, 95], "modelconfig": [0, 10, 72, 77], "default_factori": [0, 5, 6, 7, 10], "lambda": [0, 5, 6, 7, 10, 64, 75, 85], "arg": [0, 6, 7, 8, 10, 11, 55, 56, 58, 61, 70, 75, 76, 78, 93], "instanti": [0, 6, 7, 10, 15, 31, 59, 60, 61, 63, 65, 71, 77, 78], "same": [0, 1, 4, 5, 6, 10, 16, 17, 21, 24, 30, 51, 52, 56, 57, 58, 59, 62, 63, 64, 75, 76, 84], "logic": [0, 6, 95], "appli": [0, 7, 10, 12, 14, 16, 17, 24, 51, 55, 58, 61, 66, 70, 71, 74, 80], "other": [0, 1, 5, 6, 7, 10, 16, 20, 21, 26, 27, 31, 32, 34, 37, 40, 48, 51, 52, 55, 56, 57, 58, 61, 74, 78, 83, 85, 86], "custom": [0, 3, 6, 8, 9, 13, 20, 55, 56, 57, 64, 77, 79, 93, 95], "For": [0, 1, 4, 6, 7, 8, 9, 12, 16, 24, 25, 26, 28, 29, 31, 34, 36, 38, 39, 40, 41, 43, 45, 48, 51, 52, 55, 56, 57, 64, 66, 93, 95], "more": [0, 2, 5, 6, 8, 10, 12, 15, 18, 20, 21, 24, 25, 26, 28, 29, 31, 33, 34, 36, 39, 40, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 63, 64, 66, 74, 80, 83, 86, 91, 95], "exampl": [0, 1, 5, 8, 9, 15, 25, 26, 29, 48, 51, 54, 55, 56, 57, 58, 64, 74, 76, 84, 93], "datapars": [0, 6, 9, 37, 41, 55, 58, 60, 61, 62, 72, 93], "nerfstudio_datapars": [0, 60, 61], "datamanag": [0, 7, 9, 11, 40, 55, 61, 63, 64, 72], "how": [0, 3, 5, 6, 7, 9, 10, 17, 20, 27, 28, 31, 39, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 71, 77, 78, 95], "follow": [0, 1, 5, 6, 8, 9, 12, 13, 16, 17, 19, 21, 22, 23, 24, 26, 27, 31, 32, 33, 38, 39, 41, 43, 44, 49, 50, 51, 52, 54, 55, 56, 57, 58, 70, 85, 95], "pleas": [0, 1, 6, 20, 22, 26, 32, 34, 35, 38, 39, 41, 51, 53, 56, 95], "refer": [0, 12, 16, 17, 20, 26, 40, 51, 63, 78, 95], "pipelin": [0, 2, 5, 6, 12, 15, 20, 23, 27, 32, 40, 43, 54, 55, 64, 72, 78], "overview": [0, 20, 32, 57], "have": [0, 1, 4, 6, 7, 8, 10, 11, 12, 13, 16, 20, 24, 27, 31, 33, 36, 40, 41, 45, 46, 48, 50, 51, 52, 53, 55, 56, 58, 60, 61, 64, 77, 83, 84, 91, 92, 95], "method_config": [0, 5, 79], "where": [0, 1, 5, 7, 8, 9, 13, 14, 16, 17, 20, 24, 27, 28, 32, 34, 36, 38, 39, 48, 49, 50, 51, 52, 55, 56, 58, 60, 61, 62, 66, 71, 74, 76, 77, 78, 83, 95], "implement": [0, 4, 6, 7, 8, 18, 20, 21, 22, 27, 31, 32, 33, 34, 38, 40, 41, 43, 44, 46, 47, 52, 55, 60, 63, 64, 66, 69, 71, 74, 77, 78, 83], "hous": [0, 40], "we": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 70, 76, 77, 78, 86, 93, 95], "construct": [0, 16, 20, 24, 33, 44, 51, 63, 66, 83], "variou": [0, 7, 25, 26, 31, 40, 51, 53, 95], "exist": [0, 20, 22, 33, 34, 38, 39, 40, 50, 51, 56, 57, 60, 65, 71, 75, 86, 95], "default": [0, 1, 3, 4, 7, 14, 16, 17, 23, 28, 32, 33, 37, 40, 51, 52, 53, 55, 56, 57, 58, 59, 61, 64, 67, 70, 71, 75, 80, 85, 88, 90, 93, 94], "instanc": [0, 1, 4, 6, 12, 15, 41, 58, 60, 63, 64], "ha": [0, 9, 11, 16, 17, 24, 25, 27, 31, 32, 33, 48, 51, 52, 57, 59, 60, 61, 63, 71, 75, 94], "an": [0, 1, 4, 6, 7, 9, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 63, 64, 66, 71, 77, 78, 80, 83, 85, 94, 95], "overrid": [0, 5, 66, 69], "optim": [0, 6, 10, 24, 25, 27, 31, 32, 33, 39, 42, 47, 48, 51, 60, 72, 77], "appropri": [0, 51, 53], "method_nam": [0, 1, 3, 5, 26, 78], "vanillapipelineconfig": [0, 78], "eval_num_rays_per_chunk": [0, 72, 77], "1": [0, 1, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 21, 23, 24, 27, 33, 38, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 70, 71, 74, 75, 76, 77, 78, 80, 83, 84, 85, 94], "14": [0, 22, 29, 31, 51, 56, 74], "proposal_network": 0, "adamoptimizerconfig": [0, 72, 78], "lr": [0, 32, 72, 78], "1e": [0, 7, 75, 78, 80, 83], "2": [0, 1, 21, 24, 28, 33, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 60, 61, 63, 64, 66, 69, 70, 71, 75, 77, 84], "ep": [0, 58, 72, 75, 78, 80, 83], "15": [0, 29, 50, 51, 56, 71], "schedul": [0, 27, 32, 58, 72, 75], "none": [0, 6, 7, 8, 10, 12, 15, 46, 47, 48, 49, 50, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 94], "after": [0, 5, 6, 12, 15, 16, 17, 28, 29, 32, 38, 40, 51, 55, 56, 58, 60, 64, 74, 75, 78, 93], "place": [0, 3, 16, 17, 20, 39, 48, 51, 52, 53, 58, 84], "your": [0, 1, 3, 4, 5, 10, 11, 12, 13, 14, 16, 17, 18, 20, 22, 24, 32, 37, 38, 41, 44, 50, 52, 53, 56, 57, 60, 86, 93, 95], "dictionari": [0, 6, 7, 9, 10, 33, 58, 60, 61, 62, 77, 78, 84], "provid": [0, 2, 4, 6, 7, 10, 12, 15, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 39, 40, 41, 43, 51, 52, 55, 56, 58, 59, 61, 66, 75, 76, 77, 78, 85, 86], "descript": [0, 5, 10, 20, 22, 24, 25, 26, 28, 29, 33, 35, 37, 38, 39, 40, 43, 46, 49, 51, 62, 68, 72, 79, 86], "top": [0, 4, 10, 15, 17, 18, 21, 31, 51, 52, 56, 85, 95], "often": [0, 5, 10, 25, 48, 51, 64, 78], "time": [0, 3, 4, 9, 13, 15, 16, 22, 23, 25, 27, 28, 29, 37, 39, 40, 42, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 71, 72, 75, 77, 83], "just": [0, 6, 15, 17, 20, 25, 27, 40, 51, 60], "plai": [0, 7, 16, 55], "without": [0, 3, 12, 29, 36, 39, 41, 55, 57, 59, 76, 94], "one": [0, 12, 15, 17, 20, 21, 25, 33, 34, 38, 39, 42, 47, 51, 52, 53, 57, 58, 64, 66, 75, 78], "do": [0, 5, 7, 11, 15, 16, 17, 20, 21, 23, 26, 28, 31, 34, 36, 38, 39, 40, 48, 51, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 93, 95], "so": [0, 8, 10, 12, 14, 16, 17, 20, 27, 39, 40, 51, 53, 55, 57, 58, 60, 61, 64, 74], "via": [0, 3, 4, 13, 14, 20, 22, 24, 25, 27, 37, 40, 49, 80, 93], "showcas": 0, "some": [0, 3, 4, 6, 7, 8, 12, 20, 24, 25, 27, 31, 40, 48, 50, 51, 53, 55, 56, 57, 58, 61, 63, 77, 88], "us": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 69, 70, 71, 75, 76, 77, 78, 79, 80, 83, 85, 86, 93, 94, 95], "command": [0, 3, 6, 16, 17, 19, 23, 24, 32, 37, 41, 51, 53, 54, 55, 57, 79, 93, 95], "list": [0, 1, 3, 7, 10, 16, 20, 26, 32, 35, 55, 56, 58, 59, 60, 61, 62, 63, 64, 75, 77, 78, 81, 85, 93], "out": [0, 4, 6, 7, 8, 10, 17, 20, 23, 26, 38, 51, 52, 55, 56, 58, 61, 64, 86, 95], "n": [0, 3, 4, 5, 6, 10, 14, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 51, 53, 54, 55, 56, 57, 61, 63, 66, 79, 83, 86, 95], "help": [0, 1, 10, 12, 16, 17, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 38, 39, 41, 48, 51, 54, 55, 61, 64, 71, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94], "chang": [0, 10, 12, 15, 16, 24, 26, 28, 31, 41, 48, 51, 55, 56, 58, 59, 60, 64, 77, 84, 94, 95], "eval": [0, 6, 32, 51, 55, 59, 60, 61, 77, 78, 86, 93], "dataset": [0, 7, 16, 17, 20, 21, 26, 28, 29, 31, 32, 40, 41, 43, 51, 55, 56, 58, 60, 61, 63, 64, 71, 72, 74, 77, 78, 86, 92], "data_path": [0, 32, 51], "viewer": [0, 12, 16, 17, 19, 20, 40, 51, 52, 58, 59, 72, 77, 78, 86], "vi": [0, 1, 4, 14, 19, 46, 49, 50, 55, 57, 59, 78, 80, 94], "option": [0, 1, 5, 7, 8, 10, 12, 16, 17, 23, 31, 38, 40, 48, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 85, 93], "e": [0, 1, 2, 3, 5, 10, 12, 15, 17, 21, 23, 24, 32, 36, 40, 51, 52, 53, 54, 56, 58, 59, 64, 95], "g": [0, 1, 2, 3, 10, 12, 15, 17, 20, 24, 32, 51, 52, 53, 54, 56, 59, 64], "blender": [0, 4, 7, 17, 21, 28, 37, 43, 51, 52, 53, 55, 72, 77, 87], "data_pars": 0, "run": [0, 1, 4, 6, 13, 14, 16, 17, 20, 32, 51, 53, 54, 56, 57, 58, 59, 75, 77, 78, 85, 86, 95], "note": [0, 1, 6, 12, 14, 15, 16, 17, 22, 24, 27, 38, 52, 54, 59, 60, 64, 74, 76, 94], "go": [0, 16, 17, 31, 38, 39, 48, 49, 50, 55], "end": [0, 4, 8, 16, 20, 34, 48, 49, 50, 55, 56, 58, 59, 64, 70, 72, 74, 78, 83], "scale": [0, 7, 16, 24, 25, 32, 33, 37, 40, 47, 48, 51, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 66, 74, 83, 94], "factor": [0, 28, 33, 42, 51, 52, 58, 60, 61, 62, 64, 71, 78], "0": [0, 1, 3, 4, 5, 6, 7, 10, 12, 14, 15, 16, 21, 31, 38, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 74, 75, 76, 77, 78, 80, 83, 84, 85, 94], "5": [0, 12, 24, 27, 48, 50, 52, 58, 61, 64, 66, 74, 76, 77], "easi": [1, 7, 10, 20, 26, 34, 38, 39, 47, 57, 62, 64], "new": [1, 3, 12, 15, 16, 17, 19, 20, 21, 26, 28, 31, 34, 35, 39, 40, 45, 51, 53, 55, 56, 57, 58, 60, 61, 63, 64, 84, 85, 95], "nerf": [1, 6, 7, 8, 10, 11, 13, 14, 17, 19, 20, 21, 23, 25, 26, 27, 28, 29, 33, 36, 37, 39, 40, 41, 42, 45, 46, 48, 51, 52, 53, 55, 56, 60, 66, 72, 74, 75, 83, 86, 93], "against": [1, 40], "standard": [1, 6, 19, 27, 46, 58, 60, 61, 76, 84], "To": [1, 4, 6, 12, 15, 16, 19, 24, 25, 26, 27, 29, 31, 32, 34, 36, 38, 40, 41, 51, 52, 53, 56, 57, 60, 61, 64, 93, 95], "object": [1, 6, 7, 9, 10, 12, 15, 17, 22, 29, 31, 33, 37, 38, 39, 48, 50, 51, 52, 56, 58, 59, 60, 61, 62, 63, 64, 78, 79, 80, 83, 84, 85], "job": [1, 13, 55, 59, 94], "automat": [1, 5, 7, 27, 40, 51, 56, 57, 61, 78, 95], "item": [1, 6, 17], "script": [1, 16, 43, 51, 54, 55, 56, 57, 61, 64, 86, 90, 95], "launch_train_blend": 1, "sh": [1, 8, 51, 56, 66, 71, 76], "m": [1, 16, 21, 43, 51, 55, 56, 66, 83], "v": [1, 53, 56, 58, 74], "gpu_list": 1, "simpli": [1, 3, 10, 12, 26, 57], "replac": [1, 24, 25, 30, 32, 56, 61, 63, 64], "argument": [1, 4, 7, 10, 12, 14, 15, 16, 51, 55, 57, 58, 60, 64, 80, 85, 86, 93], "bracket": 1, "correct": [1, 8, 16, 51, 56, 58, 77, 95], "name": [1, 3, 5, 6, 8, 9, 12, 15, 16, 21, 41, 51, 53, 55, 56, 61, 64, 76, 78, 83, 85, 88], "method": [1, 6, 7, 8, 10, 18, 23, 41, 48, 51, 52, 53, 55, 56, 58, 60, 61, 62, 63, 64, 66, 72, 76, 78, 93, 95], "mipnerf": [1, 30, 37, 50, 70, 74], "singl": [1, 10, 15, 27, 29, 34, 37, 38, 39, 40, 51, 58, 60, 64, 71, 78, 80], "per": [1, 6, 10, 11, 17, 24, 33, 40, 42, 51, 52, 55, 58, 59, 60, 63, 64, 66, 69, 71, 75, 76, 77, 80], "gpu": [1, 6, 26, 31, 38, 40, 56, 59, 60, 64], "anoth": [1, 7, 10, 15, 25, 27, 51], "visual": [1, 36, 39, 47, 50, 56, 57, 77, 80], "than": [1, 8, 22, 24, 25, 27, 33, 36, 40, 51, 55, 58, 66, 80], "wandb": [1, 4, 10, 12, 78], "comet": [1, 10, 12, 78], "tensorboard": [1, 10, 12, 78], "machin": [1, 13, 51, 55, 56, 59, 78], "space": [1, 8, 10, 22, 27, 28, 31, 35, 46, 50, 53, 58, 61, 70, 74, 75, 85], "separ": [1, 17, 25, 35, 38, 57, 60], "3": [1, 4, 7, 8, 14, 16, 20, 21, 27, 28, 31, 32, 38, 43, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 61, 62, 63, 64, 66, 67, 70, 71, 74, 76, 80, 81, 83, 84, 85], "left": [1, 15, 28, 42, 48, 51, 64, 85], "empti": [1, 27, 34, 50], "find": [1, 5, 17, 19, 20, 22, 26, 27, 32, 33, 34, 39, 51, 59, 63, 64, 78, 83, 84, 94, 95], "distribut": [1, 11, 25, 31, 33, 48, 55, 58, 59, 66, 75, 83], "view": [1, 4, 8, 9, 16, 17, 20, 21, 22, 24, 25, 27, 29, 31, 32, 34, 37, 39, 40, 47, 50, 51, 53, 55, 57, 58, 77, 86], "A": [1, 3, 6, 8, 10, 12, 15, 16, 17, 18, 20, 27, 28, 30, 35, 37, 38, 39, 40, 41, 44, 49, 51, 56, 58, 60, 61, 64, 66, 71, 75, 76, 77, 78, 84, 85], "full": [1, 6, 16, 24, 25, 39, 40, 51, 53, 56, 58, 63, 64], "would": [1, 4, 6, 15, 16, 17, 22, 34, 41, 48, 51, 55, 63, 64, 93], "save": [1, 16, 17, 24, 25, 32, 40, 51, 55, 59, 60, 61, 78, 88, 95], "checkpoint": [1, 19, 24, 40, 77, 78, 88, 94], "output": [1, 3, 4, 7, 10, 16, 17, 19, 21, 24, 27, 29, 31, 32, 40, 43, 51, 54, 55, 56, 57, 58, 61, 62, 64, 66, 67, 69, 71, 76, 77, 78, 80, 88, 95], "directori": [1, 7, 16, 24, 32, 51, 56, 61, 78], "experi": [1, 3, 7, 20, 21, 42, 51, 61], "current": [1, 6, 9, 11, 15, 16, 19, 20, 22, 24, 25, 40, 51, 52, 56, 57, 58, 59, 71, 77, 78, 85], "timestamp": [1, 16, 58, 61, 78], "onc": [1, 4, 12, 15, 19, 21, 22, 23, 24, 25, 29, 35, 36, 39, 48, 51, 55], "converg": [1, 24, 25, 58], "test": [1, 6, 7, 20, 34, 37, 41, 51, 55, 56, 59, 60, 61, 77, 78, 84, 95], "launch_eval_blend": 1, "ran": [1, 56], "08": [1, 31, 78], "10": [1, 3, 10, 27, 31, 46, 47, 49, 53, 55, 56, 58, 59, 77, 83], "2022": [1, 18, 20, 56, 74], "instant": [1, 7, 10, 15, 20, 26, 35, 47, 50, 52, 55, 66, 71, 72, 75, 85], "ngp": [1, 7, 10, 20, 26, 35, 47, 50, 52, 55, 66, 71, 72, 75], "By": [1, 3, 4, 24, 25, 33, 39, 55, 93], "blender_chair_2022": 1, "10_172517": 1, "config": [1, 3, 5, 6, 7, 12, 17, 20, 26, 32, 40, 54, 58, 60, 61, 63, 64, 71, 72, 77, 78, 79, 88, 94], "yml": [1, 17, 54, 55], "blender_drums_2022": 1, "abov": [1, 4, 6, 26, 31, 32, 34, 38, 51, 55, 56, 57], "o": [1, 4, 56], "t": [1, 5, 6, 12, 16, 17, 21, 22, 25, 27, 31, 38, 46, 48, 51, 56, 57, 58, 61, 63, 64, 72, 74, 77, 80, 83, 85, 89, 95], "flag": [1, 4, 6, 16, 23, 40, 51, 56, 57, 59, 61, 94], "should": [1, 5, 6, 7, 14, 16, 17, 18, 27, 28, 29, 31, 32, 38, 39, 41, 46, 48, 50, 52, 55, 56, 57, 58, 59, 63, 64, 66, 74, 75, 77, 78, 84, 85, 94], "wa": [1, 6, 12, 14, 16, 17, 23, 31, 38, 39, 40, 47, 50, 51, 53, 56, 57, 61, 64, 70, 76], "c": [1, 12, 38, 51, 56, 61, 64, 84, 95], "base": [1, 6, 7, 8, 12, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 32, 35, 36, 39, 44, 48, 51, 53, 56, 57, 58, 59, 63, 65, 66, 67, 69, 70, 72, 74, 75, 76, 78, 79, 80, 83, 84, 85, 95], "dir": [1, 24, 32, 37, 40, 51, 54, 55], "also": [1, 4, 5, 6, 7, 11, 15, 16, 17, 21, 22, 26, 27, 28, 31, 32, 39, 44, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 79, 84, 85, 86, 91, 93, 95], "identifi": 1, "simultan": [1, 21, 55], "across": [1, 16, 25, 29, 39, 53, 60, 63, 64, 83, 95], "calcul": [1, 9, 16, 17, 27, 32, 33, 38, 49, 51, 55, 58, 61, 66, 74, 76, 77], "psnr": [1, 21, 55, 59, 88], "fp": [1, 16, 17], "stat": [1, 3, 4, 59], "result": [1, 16, 26, 28, 33, 36, 39, 42, 43, 48, 51, 95], "json": [1, 7, 14, 51, 52, 55, 58, 61, 88], "blender_ficus_2022": 1, "sinc": [1, 16, 17, 25, 27, 38, 51, 58, 60, 63, 64], "multipl": [1, 16, 17, 18, 20, 21, 27, 28, 31, 33, 40, 42, 48, 51, 53, 55, 64], "background": [1, 6, 7, 10, 16, 22, 61, 76, 77], "process": [1, 6, 7, 10, 16, 17, 20, 24, 25, 32, 36, 38, 39, 40, 48, 55, 56, 60, 61, 62, 64, 65, 66, 67, 69, 78, 86], "concurr": [1, 42], "termin": [1, 3, 4, 10, 16, 17, 50, 55, 56, 57, 59], "log": [1, 3, 4, 12, 23, 48, 56, 59, 75, 78, 94], "mai": [1, 5, 6, 7, 15, 16, 23, 24, 25, 26, 27, 31, 40, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 91, 95], "messi": 1, "document": [2, 12, 20, 26, 38, 39, 53, 54, 61, 64], "few": [2, 3, 16, 29, 33, 39, 40, 53, 59], "system": [2, 10, 16, 17, 20, 48, 56, 61], "profil": [2, 11, 59, 72], "speed": [2, 27, 33, 40, 51, 57, 59, 60, 64], "As": [2, 6, 20, 26, 48, 95], "grow": [2, 51], "hope": [2, 20, 22, 26], "updat": [2, 10, 11, 12, 26, 27, 32, 39, 56, 64, 75, 85], "extens": [2, 17, 19, 37, 38, 44, 56], "local": [2, 13, 23, 27, 34, 56, 59, 61, 78, 95], "writer": [2, 59], "code": [2, 5, 6, 8, 9, 10, 11, 12, 21, 22, 24, 25, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 56, 58, 59, 60, 61, 63, 64, 65, 78, 83, 86], "benchmark": [2, 55], "workflow": [2, 51, 55, 56], "localwrit": [3, 59], "numer": [3, 12, 75, 80], "addit": [3, 5, 7, 20, 22, 26, 31, 32, 33, 36, 40, 48, 52, 55, 56, 58, 60, 61, 62, 64, 95], "skeleton": 3, "localwriterconfig": [3, 59, 72], "instantiateconfig": [3, 6, 58, 59, 63, 71, 72, 77, 78], "bool": [3, 7, 10, 58, 59, 60, 61, 62, 63, 64, 66, 71, 74, 75, 76, 77, 78, 80, 83, 85], "fals": [3, 10, 12, 15, 16, 32, 40, 47, 48, 58, 59, 60, 61, 62, 63, 64, 66, 71, 75, 77, 78, 80, 85, 94], "stats_to_track": [3, 59, 72], "tupl": [3, 6, 8, 10, 58, 59, 60, 61, 63, 64, 69, 71, 75, 76, 77, 78, 79, 83, 84, 85], "eventnam": [3, 59], "iter_train_tim": [3, 59], "max_log_s": [3, 59, 72], "int": [3, 6, 7, 10, 11, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 83, 84, 85], "edit": [3, 16, 20, 32, 39, 51, 56], "disabl": [3, 4, 15, 40, 48, 58, 59, 77, 78, 85], "logger": [3, 55, 59], "print": [3, 4, 12, 14, 15, 47, 59, 94], "see": [3, 6, 8, 9, 10, 11, 16, 17, 20, 28, 29, 33, 34, 35, 38, 40, 41, 48, 51, 53, 54, 55, 56, 57, 59, 64, 83, 94], "under": [3, 16, 17, 33, 41, 55, 56, 60], "util": [3, 5, 27, 46, 49, 50, 55, 59, 60, 61, 63, 72, 74, 80, 81, 83, 84], "add": [3, 4, 5, 6, 7, 10, 17, 20, 21, 26, 28, 32, 35, 48, 51, 55, 56, 57, 58, 65, 71, 75, 85, 95], "remov": [3, 15, 17, 20, 32, 34, 38, 51, 56, 72, 75, 83, 85], "ani": [3, 4, 5, 6, 7, 9, 12, 15, 17, 20, 27, 31, 34, 47, 51, 54, 57, 58, 59, 60, 61, 62, 64, 65, 75, 77, 78, 84, 85, 95], "enum": [3, 8, 58, 67, 74, 78], "much": [3, 7, 22, 26, 39, 40, 47, 51, 56, 58, 60, 61, 63], "content": [3, 37, 48, 51, 57, 61], "onto": [3, 17, 40, 83], "screen": [3, 15, 51, 59, 85], "onli": [3, 9, 10, 14, 15, 16, 17, 19, 22, 31, 33, 34, 36, 40, 49, 51, 52, 54, 55, 56, 58, 60, 61, 63, 64, 71, 75, 78, 95], "line": [3, 5, 16, 51, 55, 56, 61, 86], "everyth": [3, 46, 50, 55, 56, 59, 60, 77], "delet": [3, 17, 40, 51, 64], "previou": [3, 21, 25, 42, 56, 78], "creat": [3, 5, 7, 9, 10, 12, 15, 17, 20, 26, 27, 28, 32, 33, 41, 48, 51, 55, 58, 61, 64, 76, 77, 84, 95], "track": [3, 4, 12, 16, 55, 75], "rememb": [3, 56], "put": [3, 7, 17, 41, 64], "event": [3, 15, 59, 85], "put_scalar": 3, "from": [3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66, 71, 74, 75, 76, 77, 78, 83, 85, 86], "valu": [3, 7, 8, 9, 10, 12, 16, 24, 47, 48, 50, 51, 52, 56, 58, 59, 61, 64, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 80, 83, 85, 94], "event_storag": 3, "cli": [3, 4, 23, 24, 32, 41, 51, 53, 56, 57, 93], "common": [3, 7, 20, 34, 40, 48, 51, 56, 64, 81], "max": [3, 7, 10, 16, 32, 47, 51, 58, 61, 63, 78, 80, 85, 94], "size": [3, 24, 27, 30, 33, 40, 42, 43, 51, 55, 56, 58, 59, 60, 61, 64, 66, 69, 71, 72, 75, 77, 78, 82, 84, 85], "built": [4, 6, 13, 18, 22, 24, 25, 27, 29, 38, 53, 56], "perform": [4, 21, 22, 24, 25, 27, 34, 48, 58, 64, 66, 76, 78, 95], "capabl": [4, 21, 39, 56], "easier": [4, 43, 53, 80], "debug": [4, 20], "assess": 4, "program": [4, 56, 59], "comput": [4, 6, 8, 9, 15, 16, 17, 21, 29, 31, 34, 36, 46, 48, 49, 51, 54, 55, 56, 58, 59, 61, 64, 66, 71, 74, 75, 76, 77, 80, 83, 88], "averag": [4, 10, 22, 31, 32, 55, 58, 59, 71, 74], "total": [4, 16, 55, 59, 64, 74], "execut": [4, 12, 31, 40], "function": [4, 5, 6, 8, 11, 15, 20, 21, 27, 33, 48, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 74, 75, 76, 77, 78, 80, 83, 85], "time_funct": [4, 11], "decor": [4, 59], "take": [4, 5, 6, 8, 9, 10, 17, 23, 24, 25, 30, 31, 51, 58, 64, 75, 77, 78, 85], "gener": [4, 5, 6, 7, 9, 15, 20, 21, 23, 31, 41, 48, 51, 52, 57, 58, 60, 61, 63, 64, 71, 75, 76, 77, 83, 85, 86, 95], "rai": [4, 6, 8, 9, 10, 11, 12, 15, 16, 25, 27, 28, 29, 31, 32, 34, 38, 40, 43, 44, 45, 46, 49, 50, 52, 55, 59, 60, 63, 64, 71, 72, 73, 74, 76, 77, 78, 80, 83, 85], "given": [4, 7, 16, 24, 25, 27, 32, 43, 44, 46, 48, 55, 58, 61, 64, 75, 77, 78, 85], "pixel": [4, 6, 7, 8, 9, 21, 29, 31, 38, 40, 44, 46, 48, 49, 50, 51, 58, 60, 61, 64, 72, 74, 76, 83, 85], "camera": [4, 6, 7, 9, 21, 24, 27, 31, 32, 33, 34, 37, 39, 40, 45, 48, 49, 50, 51, 55, 59, 60, 61, 62, 63, 64, 72, 74, 77, 85, 89, 92, 94], "indic": [4, 6, 7, 58, 60, 63, 64, 75, 83], "raygener": [4, 7, 64], "might": [4, 17, 36, 56], "its": [4, 12, 16, 17, 27, 28, 32, 37, 38, 40, 44, 55, 56, 64, 93], "forward": [4, 8, 9, 11, 12, 15, 31, 39, 55, 57, 58, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "case": [4, 8, 12, 13, 16, 24, 37, 41, 48, 50, 51, 55, 56, 58, 60, 64, 70, 83], "model_compon": [4, 31, 48, 74, 75, 76], "ray_gener": [4, 7, 64, 72], "nn": [4, 6, 8, 11, 12, 15, 33, 60, 65, 69], "def": [4, 5, 6, 7, 8, 10, 11, 12, 15], "self": [4, 6, 7, 8, 10, 11, 12, 15, 51, 64, 66], "ray_indic": [4, 6, 75, 76], "tensortyp": [4, 7, 8], "num_rai": [4, 50, 58, 76], "raybundl": [4, 6, 7, 9, 10, 15, 48, 58, 60, 61, 64, 72, 75, 77], "altern": [4, 16, 44, 50, 55, 56, 63], "part": [4, 16, 20, 22, 52, 56, 62], "code1": 4, "code2": 4, "At": [4, 10, 16, 25, 27, 51, 55], "block": [4, 21, 95], "tag": [4, 56, 95], "specif": [4, 5, 12, 27, 31, 32, 38, 51, 55, 56, 57, 58, 60, 64, 76, 79], "individu": [4, 24, 39, 58], "measur": [4, 34], "evalu": [4, 8, 11, 31, 53, 59, 60, 64, 71, 75, 77, 86, 94], "memori": [4, 6, 22, 24, 25, 27, 28, 29, 33, 37, 38, 40, 42, 43, 52, 56, 60, 64, 78, 84], "cuda": [4, 27, 31, 33, 37, 40, 43, 44, 51, 59, 64], "kernel": [4, 27], "launch": [4, 20, 56, 57], "consid": [4, 5, 18, 20, 22, 31, 50, 58, 80, 84], "It": [4, 6, 11, 12, 13, 14, 16, 17, 18, 20, 24, 25, 26, 31, 33, 39, 45, 48, 51, 54, 55, 56, 57, 61, 63], "select": [4, 15, 16, 17, 24, 39, 51, 55, 85], "step": [4, 6, 11, 16, 21, 23, 25, 27, 30, 31, 33, 34, 39, 40, 51, 54, 55, 56, 58, 59, 60, 61, 64, 74, 75, 77, 78, 85], "number": [4, 6, 10, 11, 12, 16, 25, 27, 33, 46, 51, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 71, 75, 76, 77, 78, 83, 84, 85, 94], "cuda_launch_block": 4, "trace": [4, 48, 59], "path_to_model_output": 4, "profiler_trac": 4, "load": [4, 6, 7, 9, 24, 32, 40, 41, 54, 55, 56, 60, 61, 64, 77, 78, 88, 94], "googl": [4, 32, 58, 74, 83, 95], "chrome": 4, "entir": [4, 24, 25, 27, 50, 78], "codebas": [4, 5, 14, 20, 26, 52, 95], "instal": [4, 5, 13, 15, 16, 19, 20, 26, 53, 72, 85, 86, 91, 92, 93, 95], "pip": [4, 5, 22, 23, 24, 25, 28, 29, 32, 34, 35, 37, 38, 39, 40, 41, 43, 44, 51, 53, 54, 56, 95], "spy": 4, "either": [4, 6, 15, 16, 40, 51, 55, 56, 64, 66, 74, 76, 83], "flame": 4, "graph": [4, 63, 71], "live": [4, 7, 12, 51, 56], "inhous": 4, "record": [4, 34, 51, 61], "path_to_output_svg": 4, "down": [4, 27, 51, 58, 61], "extra": [4, 6, 31, 56, 58, 64], "aim": [5, 15], "offer": [5, 86], "research": [5, 18, 20, 22, 26, 45, 53, 58, 74, 83], "thei": [5, 9, 15, 19, 24, 27, 31, 37, 56, 61, 64, 68, 80, 83, 84], "develop": [5, 14, 20, 26, 39, 40, 51, 56, 57], "novel": [5, 21, 31, 34, 39, 53], "vision": [5, 22], "user": [5, 6, 12, 15, 16, 17, 20, 23, 24, 26, 39, 40, 56, 60, 64, 78, 85], "establish": 5, "distinct": [5, 52, 71], "repositori": [5, 18, 34, 43, 56, 95], "import": [5, 9, 10, 12, 15, 16, 17, 27, 31, 34, 46, 47, 48, 49, 50, 51, 56], "compon": [5, 6, 7, 8, 9, 10, 20, 21, 24, 25, 28, 31, 33, 35, 42, 49, 56, 58, 60, 66, 72, 80, 95], "cater": 5, "requir": [5, 6, 7, 13, 16, 21, 22, 23, 26, 31, 33, 39, 51, 52, 53, 56, 57, 60, 61, 63, 64, 83, 88, 94], "approach": [5, 20, 27, 32, 36, 38, 39, 44, 51, 83], "featur": [5, 6, 8, 12, 20, 26, 27, 28, 29, 32, 33, 35, 40, 42, 43, 44, 59, 66, 69, 71, 74, 80, 83, 91, 94, 95], "modif": [5, 30, 38, 64, 95], "core": [5, 18, 20, 27, 49, 57], "encourag": [5, 22, 40, 74, 95], "submit": [5, 95], "pr": [5, 95], "benefit": [5, 55], "templat": [5, 32, 41], "minim": [5, 7, 43, 72, 93], "guid": [5, 9, 20, 21, 24, 31, 32, 33, 39, 41, 45, 46, 50, 51, 56, 57], "best": [5, 12, 20, 24, 25, 29, 32, 38, 39, 43, 51, 66], "wai": [5, 12, 16, 19, 22, 27, 31, 33, 46, 51, 55, 56, 58, 60], "learn": [5, 10, 17, 18, 20, 27, 31, 32, 33, 34, 36, 39, 55, 58, 66, 78, 86, 93], "look": [5, 6, 8, 9, 10, 15, 17, 26, 27, 39, 51, 52, 56, 57, 58, 86], "lerf": [5, 6, 20, 22, 26, 36], "good": [5, 15, 16, 22, 25, 29, 31, 38, 39, 43, 48, 51, 56, 83], "project": [5, 8, 18, 20, 24, 25, 29, 31, 34, 36, 40, 46, 51, 56, 58, 66, 78, 83, 85, 86, 95], "recommend": [5, 16, 20, 27, 51, 53, 55, 56, 58, 70, 93], "my_method": 5, "__init__": [5, 6, 12, 15], "my_config": 5, "custom_pipelin": 5, "custom_model": 5, "custom_field": 5, "custom_datamang": 5, "custom_datapars": 5, "pyproject": [5, 54, 86], "toml": [5, 54, 86], "In": [5, 6, 8, 9, 12, 16, 22, 24, 27, 30, 31, 32, 42, 48, 52, 53, 55, 56, 57, 58, 95], "order": [5, 17, 25, 48, 50, 58, 62, 63, 70, 95], "own": [5, 10, 14, 38, 41, 51, 56, 64, 86, 95], "packag": [5, 13, 14, 51, 54, 56, 79, 95], "python": [5, 12, 13, 43, 51, 54, 56, 60, 64, 95], "entrypoint": [5, 79], "them": [5, 9, 16, 26, 28, 37, 39, 40, 41, 46, 51, 53, 55, 56, 58, 95], "first": [5, 15, 21, 22, 23, 24, 25, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 43, 44, 47, 48, 51, 52, 53, 56, 58, 75, 78, 80, 85], "engin": [5, 17, 58, 72], "trainer": [5, 72, 79], "trainerconfig": [5, 72, 78, 79], "plugin": [5, 72], "methodspecif": [5, 72, 79], "mymethod": 5, "my": [5, 12], "Then": [5, 16, 17, 19, 22, 23, 24, 25, 28, 29, 34, 35, 37, 39, 41, 44, 51], "set": [5, 6, 7, 10, 14, 16, 20, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 39, 40, 43, 44, 46, 48, 54, 55, 56, 58, 60, 61, 63, 64, 67, 70, 71, 75, 76, 77, 78, 84, 85, 93], "depend": [5, 7, 21, 22, 23, 24, 25, 28, 29, 31, 34, 35, 37, 38, 39, 43, 44, 53, 55, 61, 64, 77], "pin": [5, 84], "version": [5, 14, 22, 25, 33, 35, 41, 44, 53, 56, 59, 60, 61, 64, 66, 69, 72, 74, 94], "ie": [5, 31, 33, 37, 48, 50, 52, 55, 56, 58, 66, 67, 75, 77], "19": [5, 53, 66, 69, 71, 77], "tool": [5, 26, 31, 51, 56, 95], "setuptool": [5, 24, 56], "includ": [5, 15, 16, 18, 26, 27, 53, 55, 56, 60, 61, 63, 64, 77, 78, 85], "entri": [5, 26, 61], "final": [5, 16, 17, 21, 27, 31, 32, 33, 38, 39, 43, 44, 48, 51, 57, 78], "when": [5, 10, 12, 14, 15, 16, 17, 25, 27, 31, 33, 34, 48, 50, 51, 55, 56, 58, 59, 60, 61, 63, 64, 76, 77, 78, 85, 93, 94, 95], "don": [5, 6, 12, 31, 57, 64, 95], "alwai": [5, 40, 56, 59], "instead": [5, 16, 25, 36, 37, 39, 40, 51, 56, 71, 78, 85], "nerfstudio_method_config": [5, 79], "environ": [5, 32, 41, 51, 61, 79], "variabl": [5, 12, 15, 21, 28, 51, 56, 60, 64, 79], "temporarili": 5, "export": [5, 16, 32, 51, 56, 86], "addition": [5, 16, 40, 51], "accept": [5, 17], "deriv": [5, 21, 40, 58], "mymethodfunc": 5, "return": [5, 6, 7, 8, 10, 11, 15, 33, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85], "mymethodclass": 5, "str": [5, 6, 7, 10, 58, 59, 60, 61, 63, 64, 69, 77, 78, 79, 81, 83, 85], "similar": [5, 15, 16, 22, 24, 31, 36, 48, 51, 52, 56, 66], "dataparser_config": [5, 79], "declar": 5, "registry_datapars": [5, 79], "dataparserspecif": [5, 72, 79], "customdataparserconfig": 5, "mydatapars": 5, "similarli": [5, 16, 56], "nerfstudio_dataparser_config": [5, 79], "my_packag": 5, "abl": [5, 24, 25, 32, 33, 51, 56, 57], "data_dir": [5, 44, 61, 72], "invit": [5, 10], "contribut": [5, 20, 27, 33, 38, 40, 48], "onlin": [5, 40], "inform": [5, 6, 7, 8, 9, 12, 17, 21, 24, 25, 26, 28, 33, 39, 46, 48, 51, 58, 60, 61, 62, 77, 95], "batch": [6, 10, 11, 55, 58, 60, 63, 64, 65, 71, 74, 75, 76, 77, 78, 83, 84], "two": [6, 9, 11, 15, 21, 22, 23, 28, 32, 33, 34, 35, 38, 39, 46, 51, 55, 58, 75, 83], "input": [6, 8, 9, 12, 16, 21, 24, 25, 27, 31, 33, 40, 43, 47, 54, 58, 61, 62, 63, 64, 65, 66, 67, 69, 71, 77, 78, 80, 83, 85, 95], "represent": [6, 16, 17, 20, 22, 30, 32, 33, 35, 36, 39, 40, 43, 45, 51, 58, 61, 71], "viewpoint": [6, 24, 25, 31, 51, 55], "splat": [6, 16, 20, 24, 26, 41, 51, 61, 89], "fullimagedatamanag": 6, "sampl": [6, 8, 9, 10, 25, 27, 28, 29, 30, 33, 34, 37, 38, 43, 45, 50, 51, 55, 58, 60, 61, 63, 64, 66, 70, 71, 72, 74, 75, 76, 77, 78], "vanilladatamanag": [6, 60, 72], "ground": [6, 9, 16, 21, 22, 24, 25, 29, 51, 52, 60, 74, 76, 77, 83], "truth": [6, 9, 21, 24, 25, 60, 74, 76, 77, 83], "contain": [6, 7, 8, 9, 11, 15, 20, 27, 31, 38, 53, 55, 58, 60, 61, 75, 77, 78, 79], "imag": [6, 7, 10, 15, 16, 17, 21, 22, 23, 26, 29, 31, 33, 36, 38, 39, 40, 41, 46, 48, 50, 57, 58, 59, 60, 61, 62, 63, 64, 71, 72, 74, 76, 77, 78, 80, 83, 85, 91, 94], "behavior": [6, 21, 58], "abstract": [6, 7, 60, 64, 66, 70, 71, 75, 77, 78, 85], "manag": [6, 17, 51, 56, 60, 76], "abstractmethod": [6, 7, 8], "next_train": [6, 11, 60, 72], "union": [6, 58, 60, 63, 64, 67, 70, 75, 76, 77, 81, 84], "dict": [6, 7, 8, 9, 10, 11, 48, 58, 60, 61, 62, 63, 64, 66, 69, 71, 74, 77, 78, 79], "next": [6, 10, 11, 15, 16, 20, 21, 31, 60, 64, 95], "next_ev": [6, 60, 72], "next_eval_imag": [6, 60, 72], "index": [6, 26, 27, 47, 56, 58, 62, 64, 65, 75, 76, 77, 84], "cameraraybundl": 6, "raygt": [6, 7, 9, 61], "ve": [6, 13, 20, 26, 60, 86], "paper": [6, 10, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 53, 61, 74, 75, 83], "randomli": [6, 24, 25, 40, 48, 61, 63, 78], "respect": [6, 21, 24, 25, 44, 52, 56, 58, 60, 66], "vanilladatamanagerconfig": [6, 60, 72], "charg": [6, 60], "keep": [6, 16, 20, 28, 58, 59, 60, 75, 79], "hold": [6, 51, 60], "both": [6, 9, 17, 20, 27, 32, 33, 34, 38, 48, 50, 51, 55, 60, 66, 74, 85], "unpack": [6, 60, 64], "iter": [6, 10, 11, 16, 32, 39, 55, 58, 59, 60, 64, 75, 77, 78], "target": [6, 7, 24, 25, 31, 34, 48, 50, 51, 56, 64, 66, 74, 83], "annotateddataparserunion": 6, "blenderdataparserconfig": [6, 60, 61, 72], "train_num_rays_per_batch": [6, 60, 72], "1024": [6, 60, 64, 66, 69, 71], "train_num_images_to_sample_from": [6, 60, 72], "dure": [6, 9, 12, 29, 31, 32, 33, 34, 47, 48, 51, 52, 55, 56, 58, 60, 75, 77, 78], "eval_num_rays_per_batch": [6, 60, 72], "eval_num_images_to_sample_from": [6, 60, 72], "camera_optim": [6, 58, 60, 72, 77], "cameraoptimizerconfig": [6, 58, 60, 72, 77], "pose": [6, 7, 15, 24, 31, 36, 40, 46, 51, 58, 61, 63], "quick": [6, 20], "train_count": [6, 60, 72], "image_batch": [6, 63], "iter_train_image_dataload": 6, "train_pixel_sampl": 6, "ray_bundl": [6, 10, 11, 31, 48, 49, 60, 75, 77], "train_ray_gener": 6, "detail": [6, 20, 22, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 38, 39, 43, 51, 53, 56, 86, 95], "becaus": [6, 7, 17, 23, 27, 33, 40, 41, 51, 60, 83], "howev": [6, 9, 16, 24, 25, 28, 31, 34, 36, 48, 50, 51, 57], "straightforward": 6, "progress": [6, 34, 55, 57], "reli": [6, 8, 12, 29, 31], "modifi": [6, 10, 12, 13, 32, 39, 50, 51, 55, 58, 64, 66], "januari": 6, "2025": 6, "parallelimagedatamanag": 6, "now": [6, 10, 14, 16, 17, 31, 51, 56, 57, 58, 60, 64], "parallel": [6, 16, 51, 52, 55, 64], "avoid": [6, 22, 32, 40, 51, 56, 59, 64, 83, 94], "Of": [6, 64], "error": [6, 33, 56, 61, 64, 72, 78, 95], "veri": [6, 16, 28, 40, 48, 51, 56], "unabl": [6, 14], "fit": [6, 7, 16, 17, 50, 61], "load_from_disk": [6, 64, 72], "processed_data_dir": [6, 24, 51], "splatfacto": [6, 20, 26, 56, 93], "devic": [6, 31, 33, 51, 55, 58, 59, 60, 63, 64, 72, 76, 77, 78, 84], "cache_imag": 6, "mani": [6, 17, 18, 24, 26, 27, 33, 45, 48, 51, 53, 58, 64, 71], "subclass": [6, 60, 66, 77], "like": [6, 8, 15, 17, 21, 22, 26, 31, 36, 37, 39, 40, 48, 51, 55, 57, 60, 64, 84, 93, 95], "custom_ray_processor": [6, 64], "api": [6, 12, 20, 95], "bundl": [6, 15, 40, 58, 60, 77], "interfac": [6, 11, 15, 16, 56, 86, 93], "attach": [6, 60], "otherwis": [6, 10, 16, 48, 58, 61, 76, 83], "main": [6, 8, 11, 25, 27, 37, 54, 56, 61, 90], "naiv": [6, 27, 63], "transfer": [6, 74], "still": [6, 33, 34, 45, 55, 56, 57, 61, 63, 84], "oom": [6, 64], "initi": [6, 7, 20, 31, 32, 33, 36, 40, 47, 48, 51, 58, 59, 61, 65, 66, 69, 71, 78, 84], "someth": [6, 57, 60], "over": [6, 16, 17, 24, 25, 27, 39, 51, 55, 56, 59, 60, 63, 64, 74, 77, 78], "whole": [6, 58], "fulli": [6, 25, 27, 28, 39, 63], "advantag": [6, 31], "insid": [6, 15, 29, 56, 58, 63, 64, 66, 85], "subset": [6, 22, 53, 58, 61], "slow": [6, 51], "pre": [6, 26, 29, 32, 34, 36, 40, 61, 77, 78, 95], "heavi": 6, "member": [6, 65], "picklabl": 6, "lerfdatamanag": 6, "datamanagerconfig": [6, 60, 63, 72], "lerfdatamanagerconfig": 6, "torch": [6, 7, 10, 37, 40, 44, 46, 47, 48, 49, 50, 56, 58, 61, 62, 64, 65, 66, 69, 71, 77, 78, 83, 84], "cpu": [6, 51, 58, 59, 60, 63, 64], "test_mod": [6, 60, 78], "liter": [6, 7, 10, 58, 59, 60, 61, 62, 64, 66, 69, 71, 74, 76, 77, 78, 80, 83, 85], "val": [6, 60, 78], "infer": [6, 9, 10, 25, 31, 48, 60, 71, 78], "world_siz": [6, 60, 72, 78], "local_rank": [6, 60, 72, 78], "kwarg": [6, 58, 59, 60, 61, 63, 64, 70, 75, 76, 77, 78], "super": 6, "clip": [6, 22, 29, 32, 36, 61, 78], "dino": [6, 29, 36], "encod": [6, 20, 21, 30, 33, 36, 45, 50, 58, 68, 69, 70, 71, 72, 83], "image_encod": 6, "baseimageencod": 6, "dino_dataload": 6, "clip_interpol": 6, "assert": 6, "clip_scal": 6, "metadata": [6, 7, 58, 61, 62, 72, 77], "assum": [6, 37, 40, 44, 47, 52, 58, 61, 74, 76, 77], "focal": [6, 16, 17, 46, 52, 58, 61], "length": [6, 16, 17, 24, 32, 46, 49, 50, 52, 58, 60, 61, 63, 64, 70, 74], "width": [6, 15, 46, 47, 51, 52, 58, 63, 64, 69, 71, 72, 85], "fx": [6, 46, 49, 58], "train_dataset": [6, 60, 72], "fy": [6, 46, 49, 58], "height": [6, 15, 46, 47, 48, 51, 52, 58, 63, 64, 72, 85], "ll": [6, 8, 52, 54, 95], "paralleldatamanag": 6, "shift": [6, 63, 74, 83], "popul": [6, 10], "tdataset": [6, 60], "stai": 6, "latent": [6, 60, 77], "further": [6, 16, 21, 29, 31, 33, 36, 42, 55], "dimens": [6, 7, 28, 46, 49, 58, 61, 64, 65, 66, 67, 69, 71, 80, 84, 85], "dataparseroutput": [7, 61, 62, 72], "lightweight": [7, 64, 71], "filenam": [7, 17, 32, 51, 54, 59, 61, 62, 72, 86, 93, 94], "meta": [7, 61], "later": [7, 67], "pytorch": [7, 40, 43, 44, 55, 59, 61, 62, 63, 64, 66], "privat": 7, "_generate_dataparser_output": 7, "image_filenam": [7, 61, 62, 72], "path": [7, 19, 24, 32, 34, 41, 43, 51, 55, 56, 57, 59, 60, 61, 62, 64, 72, 77, 78, 88, 92, 94], "collect": [7, 24, 25, 39, 40, 41, 61, 64, 67, 74, 75, 76], "alpha_color": [7, 61, 72], "color": [7, 8, 10, 21, 31, 32, 39, 40, 48, 49, 50, 61, 71, 72, 74, 76, 77, 80, 82, 85], "scene_box": [7, 10, 61, 63, 72, 77], "scenebox": [7, 58, 61, 63, 72, 77], "scene": [7, 20, 21, 24, 25, 27, 28, 31, 33, 34, 35, 37, 38, 39, 42, 43, 44, 48, 51, 55, 57, 60, 61, 71, 72, 75, 77, 85], "box": [7, 16, 48, 53, 58, 60, 61, 71, 72, 75, 77, 83, 85], "bound": [7, 16, 31, 35, 48, 50, 60, 61, 63, 66, 71, 74, 75, 83, 85], "mask_filenam": [7, 61, 72], "mask": [7, 16, 22, 29, 39, 60, 61, 62, 63, 64, 71, 74, 77, 80, 83], "to_immutable_dict": 7, "Will": [7, 61], "inputdataset": [7, 61, 62, 64, 72], "tensor": [7, 8, 10, 42, 47, 50, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84], "dataparser_transform": [7, 61, 72], "4": [7, 14, 21, 23, 27, 28, 31, 36, 46, 47, 49, 50, 56, 58, 61, 62, 63, 64, 66, 70, 71, 74, 75, 77, 83, 84], "ey": [7, 46, 47, 48, 49, 51], "transform": [7, 16, 17, 52, 58, 61, 62, 71], "dataparser_scal": [7, 61, 72], "float": [7, 10, 50, 51, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 85], "split": [7, 32, 41, 61], "nerfstudiodataparserconfig": [7, 52, 60, 61, 72], "dataparserconfig": [7, 61, 72, 79], "poster": [7, 55], "locat": [7, 8, 17, 32, 33, 39, 46, 50, 55, 56, 61, 71, 74, 75, 78], "scale_factor": [7, 61, 62, 63, 64, 72], "origin": [7, 8, 9, 15, 22, 24, 25, 29, 31, 38, 39, 40, 43, 47, 48, 49, 50, 52, 53, 58, 61, 63, 66, 71, 72, 75, 83, 84, 85], "downscale_factor": [7, 61, 72], "downscal": [7, 61, 72], "chosen": [7, 25, 33, 51, 53, 61], "1600px": [7, 61], "scene_scal": [7, 61, 72], "region": [7, 8, 10, 29, 31, 33, 38, 39, 48, 52, 58, 61, 77], "orientation_method": [7, 61, 72], "pca": [7, 58, 61, 80], "up": [7, 12, 20, 27, 28, 31, 33, 37, 52, 55, 56, 58, 60, 61, 78, 84], "vertic": [7, 16, 27, 43, 51, 58, 61], "orient": [7, 52, 55, 58, 61, 74, 83], "center_method": [7, 58, 61, 72], "focu": [7, 16, 58, 61], "center": [7, 16, 52, 58, 61, 63, 85], "auto_scale_pos": [7, 61, 72], "true": [7, 10, 15, 31, 32, 40, 47, 48, 50, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 71, 75, 76, 77, 78, 80, 83, 85, 94], "whether": [7, 10, 12, 17, 37, 58, 59, 60, 61, 63, 66, 71, 74, 77, 78, 80, 83, 94, 95], "train_split_fract": [7, 61, 72], "9": [7, 36, 53, 55, 61], "fraction": [7, 58, 61], "remain": [7, 32, 33, 48, 52, 57, 61], "depth_unit_scale_factor": [7, 52, 61, 72], "depth": [7, 15, 31, 32, 33, 38, 39, 40, 51, 54, 57, 59, 61, 62, 64, 74, 76, 80, 83, 94], "meter": [7, 51, 61], "001": [7, 32, 47, 58, 61, 66, 69, 77], "millimet": [7, 52, 61], "convers": [7, 17, 32, 61], "datasetpars": [7, 61], "load_from_json": 7, "dataparser_output": [7, 62], "d": [7, 12, 17, 20, 51, 53, 55, 64, 72], "maintain": [7, 24, 25, 27, 40, 42, 64], "form": [7, 17, 20, 62, 64, 83], "These": [7, 9, 25, 27, 31, 33, 36, 39, 40, 48, 49, 50, 52, 54, 64, 77, 83], "supervis": [7, 9, 25, 33, 34, 52, 74], "setup": [7, 34, 56, 59, 60, 72, 78], "get_dataparser_output": [7, 61, 72], "input_dataset": [7, 64], "pull": [7, 10, 26, 56, 95], "parser": [7, 37, 43, 63, 72], "arkitscen": [7, 72], "dycheck": [7, 72], "osr": [7, 53, 72], "nuscen": [7, 55, 72], "phototour": [7, 41, 53, 72, 87], "scannet": [7, 72], "sdfstudio": [7, 53, 62, 72, 87], "sitcoms3d": [7, 53, 72, 87], "sort": [8, 75], "quantiti": [8, 9, 10], "typic": [8, 10, 33, 36, 47, 57], "3d": [8, 12, 15, 20, 22, 23, 24, 25, 29, 31, 34, 39, 40, 41, 42, 46, 51, 55, 57, 58, 61, 66, 83], "direct": [8, 9, 15, 27, 32, 38, 47, 48, 49, 50, 52, 58, 61, 66, 71, 72, 74, 75, 76, 83, 85, 95], "get_dens": [8, 71, 72], "ray_sampl": [8, 31, 48, 49, 71, 74, 75, 76], "raysampl": [8, 58, 71, 72, 74, 75, 76], "num_featur": [8, 71], "get_output": [8, 10, 12, 15, 71, 72, 77], "density_embed": [8, 71], "fieldheadnam": [8, 31, 67, 68, 71, 72, 74, 76], "embed": [8, 10, 20, 21, 29, 37, 66, 68, 71, 72, 77], "condit": [8, 12, 24, 25, 33, 39, 60, 71], "along": [8, 10, 16, 17, 27, 29, 31, 32, 38, 44, 48, 49, 50, 58, 60, 65, 66, 71, 74, 75, 76, 77, 83], "field_output": [8, 31, 74, 76], "ignor": [8, 14, 52, 59, 63, 80, 85, 94], "notic": [8, 10, 24, 46, 52, 93], "everi": [8, 10, 17, 24, 27, 34, 61, 64, 78], "check": [8, 10, 38, 51, 58, 95], "semanticnerffield": [8, 71, 72], "fieldhead": [8, 67, 68, 71, 72], "produc": [8, 21, 23, 25, 31, 33, 39, 46, 58], "dimension": [8, 27, 28, 31, 47, 66], "possibl": [8, 16, 26, 31, 51, 55, 58, 63, 67, 87, 89, 90, 91, 92, 94], "rgb": [8, 16, 27, 31, 32, 38, 47, 52, 64, 67, 72, 76, 77, 80, 81, 85], "uncertainti": [8, 67, 74, 76], "transient_rgb": 8, "transient_dens": 8, "semant": [8, 31, 60, 61, 67, 72, 76], "sometim": [8, 51], "helper": [8, 58, 74, 78, 80, 83], "density_fn": [8, 71, 72, 75], "queri": [8, 17, 27, 28, 33, 34, 43, 50], "rather": [8, 24, 33, 71], "structur": [8, 10, 20, 21, 22, 24, 25, 27, 31, 32, 41, 55, 61, 63, 95], "exactli": 8, "purpos": 8, "mip": [8, 20, 26, 43, 44, 66, 83], "framework": [8, 18, 20, 27, 33, 44], "tensordataclass": [8, 58, 72, 82], "b": [8, 12, 29, 38, 48, 58, 64, 66, 67, 69, 70, 71, 74, 76, 80, 84], "xyz": [8, 32, 58, 63, 64, 72], "coordin": [8, 15, 16, 17, 27, 31, 58, 61, 66, 85], "pixel_area": [8, 48, 50, 58, 72], "area": [8, 27, 35, 36, 49, 58, 77, 95], "distanc": [8, 16, 31, 32, 33, 37, 44, 48, 49, 50, 51, 54, 58, 63, 71, 74, 76, 83], "awai": [8, 34, 37, 40, 52, 56, 58], "work": [9, 10, 11, 16, 20, 21, 22, 27, 29, 31, 33, 36, 40, 42, 51, 54, 55, 56, 58, 77], "figur": [9, 21, 27, 32, 38, 49, 50, 56], "major": [9, 27], "rayoutput": [9, 10], "futur": [9, 40, 51, 60], "goal": [9, 20, 26, 31, 58, 95], "compos": 9, "respons": [9, 11, 21], "loss": [9, 10, 11, 12, 21, 24, 25, 27, 33, 44, 52, 55, 63, 72, 73, 76, 77, 78, 83], "render": [9, 10, 12, 16, 20, 21, 23, 24, 25, 27, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 49, 50, 58, 59, 67, 72, 73, 74, 75, 77, 86, 88, 94], "necessari": [9, 16, 31, 51, 56, 77, 86, 95], "gt": 9, "l2": [9, 58], "section": [9, 10, 16, 20, 24, 25, 31, 32, 39, 43, 51, 57, 83, 86], "perhap": 9, "care": [9, 40, 58], "about": [9, 10, 18, 20, 26, 29, 31, 37, 39, 40, 46, 55, 58, 60, 63, 86, 93], "dynam": [9, 11, 16, 28, 35, 53, 61], "ad": [9, 16, 21, 28, 40, 50, 55, 56, 60, 64, 76], "high": [9, 10, 16, 22, 23, 27, 33, 51, 61, 68, 71], "accomplish": [9, 24, 25, 31, 34, 46], "mix": [9, 24, 25, 26, 74, 78], "match": [9, 16, 27, 48, 51, 52, 58, 74], "through": [9, 15, 16, 20, 21, 24, 25, 27, 28, 31, 33, 41, 52, 57, 85], "come": [9, 10, 21, 32, 53, 55, 56, 58, 61, 64, 74, 95], "soon": [9, 32, 63], "probabl": [10, 35, 46, 48, 75], "think": 10, "phrase": 10, "interchang": 10, "reason": [10, 37, 45], "quit": [10, 45, 94], "verbos": [10, 61, 72], "distil": [10, 22, 25, 29, 34], "succint": 10, "give": [10, 16, 39, 54, 56, 58], "autocomplet": 10, "populate_modul": [10, 72, 77], "sampler": [10, 11, 31, 43, 45, 50, 60, 64, 72, 73, 77], "collid": [10, 77], "metric": [10, 58, 77, 83, 86, 88], "get_param_group": [10, 58, 60, 72, 77], "group": [10, 22, 60, 72, 77, 78, 85], "get_training_callback": [10, 60, 72, 77], "training_callback_attribut": [10, 60, 77], "trainingcallbackattribut": [10, 60, 72, 77, 78], "trainingcallback": [10, 60, 72, 77, 78], "callback": [10, 12, 60, 72, 75, 77, 85], "densiti": [10, 21, 27, 31, 32, 34, 38, 43, 58, 67, 72, 74, 75, 76, 77], "grid": [10, 20, 27, 28, 34, 37, 39, 42, 44, 47, 50, 58, 66, 69, 71, 74, 75, 77], "quanti": 10, "get_metrics_dict": [10, 11, 58, 72, 77], "plot": [10, 48, 55], "get_loss_dict": [10, 11, 58, 72, 77], "metrics_dict": [10, 11, 58, 77], "sum": [10, 48, 64, 66], "get_image_metrics_and_imag": [10, 72, 77], "colormap": [10, 72, 82], "near_plan": [10, 49, 72, 75, 77, 80], "05": [10, 32, 50, 51, 75, 77, 78], "far": [10, 37, 48, 50, 58, 72, 75, 77], "far_plan": [10, 49, 72, 75, 77, 80], "1000": [10, 48, 52, 53, 61, 77, 78], "stop": [10, 24, 50, 58, 59, 77, 78, 94], "background_color": [10, 31, 72, 76, 77], "last_sampl": [10, 76, 77], "random": [10, 25, 51, 59, 64, 66, 75, 76, 77, 83], "num_proposal_samples_per_rai": [10, 75, 77], "64": [10, 27, 51, 55, 56, 66, 69, 71, 75, 77], "propos": [10, 22, 24, 25, 27, 29, 34, 35, 36, 37, 38, 40, 50, 66, 70, 71, 74, 75, 95], "network": [10, 27, 29, 31, 33, 37, 38, 47, 48, 54, 67, 69, 71, 74, 75, 77, 83], "num_nerf_samples_per_rai": [10, 75, 77], "num_proposal_network_iter": [10, 75], "use_same_proposal_network": [10, 77], "ones": [10, 48, 84], "interlevel_loss_mult": [10, 77], "multipli": 10, "distortion_loss_mult": [10, 77], "002": [10, 77], "distort": [10, 31, 45, 51, 52, 58, 68, 71, 72, 74, 77], "use_proposal_weight_ann": [10, 77], "weight": [10, 21, 23, 31, 38, 41, 48, 55, 58, 65, 71, 74, 75, 76, 78], "anneal": [10, 71, 75], "use_average_appearance_embed": [10, 71, 77], "appear": [10, 12, 16, 28, 31, 33, 36, 37, 39, 51, 56, 71, 77], "zero": [10, 47, 52, 66, 71, 74, 77, 78, 80, 83], "proposal_weights_anneal_slop": [10, 77], "slope": 10, "proposal_weights_anneal_max_num_it": [10, 77], "num": [10, 32, 51, 55, 78, 94], "use_single_jitt": [10, 77], "jitter": [10, 75], "There": [10, 11, 16, 21, 28, 37, 51, 52, 58], "lot": [10, 39, 51, 55, 56], "thankfulli": 10, "handl": [10, 12, 27, 64], "show": [10, 25, 27, 29, 34, 36, 38, 46, 48, 49, 50, 51, 61, 87, 88, 89, 90, 91, 92, 94, 95], "furthermor": [10, 42], "static": [10, 12, 28, 31, 33, 35, 58, 60, 61, 63, 75, 95], "favor": 10, "throughout": [10, 16, 27], "begin": [10, 12, 25, 50, 70], "tcnnnerfactofield": 10, "aabb": [10, 58, 63, 71, 72, 83], "spatial_distort": [10, 50, 70, 71], "scene_contract": 10, "num_imag": [10, 63, 71], "num_train_data": [10, 77], "renderer_rgb": [10, 31], "rgbrender": [10, 12, 31, 72, 73, 76], "renderer_accumul": 10, "accumulationrender": [10, 72, 73, 76], "renderer_depth": 10, "depthrender": [10, 72, 73, 76], "understand": [10, 20, 26, 31, 33, 55], "librari": [10, 20, 24, 40, 51], "those": [10, 22, 38, 48, 49, 64, 77], "tutori": [10, 16, 20, 38, 51], "One": [10, 27, 48, 50, 61], "get_train_loss_dict": 11, "feed": [11, 21], "ddp": [11, 55, 59], "get_eval_loss_dict": 11, "simpl": [11, 20, 22, 39, 55, 57, 66], "vanillapipelin": [11, 78], "essenti": [11, 51], "rout": 11, "model_output": 11, "loss_dict": [11, 58], "dynamicbatchpipelin": 11, "instantngp": [11, 61, 72], "choos": [11, 24, 28, 38, 50, 51, 90], "although": [12, 21, 60], "mind": 12, "achiev": [12, 16, 27, 42, 57], "text": [12, 23, 24, 25, 77, 85], "checkbox": [12, 16, 85], "turn": [12, 22, 57, 59, 94], "off": [12, 17, 32, 51, 58, 59, 94], "dropdown": [12, 85, 95], "switch": [12, 16, 57], "between": [12, 20, 25, 27, 31, 32, 37, 38, 40, 47, 49, 51, 55, 58, 59, 61, 63, 66, 74, 75, 78, 83, 90], "viewer_el": [12, 15, 85], "assign": [12, 48, 56], "viewernumb": [12, 72, 85], "myclass": 12, "must": [12, 15, 17, 24, 48, 51, 52, 55, 56, 63, 66, 67, 70, 71, 76, 83, 84, 95], "inherit": [12, 15], "custom_valu": 12, "default_valu": [12, 85], "hierarchi": [12, 30], "recurs": 12, "search": 12, "children": 12, "arrang": [12, 27, 39], "folder": [12, 14, 17, 19, 24, 26, 28, 41, 43, 51, 56, 61], "viewerel": [12, 15, 72, 85], "access": [12, 56, 78], "unless": [12, 46, 66, 69, 84], "current_valu": 12, "regist": [12, 15, 75, 79, 95], "whenev": 12, "on_change_callback": 12, "viewercheckbox": [12, 72, 85], "example_paramet": 12, "custom_checkbox": 12, "cb_hook": [12, 15, 85], "thread": [12, 64, 78], "safeti": [12, 95], "asynchron": [12, 15], "practic": [12, 24, 31, 34], "afterward": 12, "mymodel": [12, 15], "slider": [12, 85], "viewerslid": [12, 72, 85], "min_valu": [12, 85], "max_valu": [12, 85], "slider_v": 12, "could": [12, 32, 51, 56], "unsaf": 12, "write": [12, 16, 17, 58, 64, 77], "conveni": [12, 56], "statement": 12, "x": [12, 16, 31, 46, 48, 49, 50, 52, 55, 58, 61, 63, 64, 66, 70, 71, 75, 83], "state": [12, 15, 77, 78, 85], "while": [12, 14, 15, 21, 22, 24, 25, 33, 39, 42, 51, 55, 56, 57, 59, 94], "unexpect": 12, "side": [12, 50, 63, 70], "effect": [12, 16, 27, 38, 55, 84, 95], "ensur": [12, 15, 16, 26, 39, 51, 56, 95], "action": [12, 95], "safe": [12, 17], "determin": [12, 39, 51, 60, 83], "viewerbutton": [12, 15, 72, 85], "button": [12, 15, 16, 17, 51, 85], "handle_btn": 12, "viewerdropdown": [12, 72, 85], "f": [12, 15, 27, 37, 47, 50, 56, 64, 70], "viewertext": [12, 72, 85], "hello": [12, 57], "world": [12, 15, 16, 24, 25, 27, 37, 46, 48, 51, 55, 58, 61, 62, 78, 85], "viewervec3": [12, 72, 85], "vector": [12, 27, 29, 42, 49, 52, 58, 61, 63, 65, 66, 74, 80, 83, 85], "7": [12, 38, 43, 48, 52, 56, 61], "rgb_render": [12, 76], "viewerrgb": [12, 72, 85], "real": [13, 16, 21, 22, 24, 25, 27, 29, 33, 37, 51, 53, 55, 57, 77], "web": [13, 16, 39, 40, 56, 57], "http": [13, 14, 18, 22, 24, 25, 29, 34, 35, 37, 38, 39, 41, 43, 44, 51, 56, 57, 58, 61, 64, 74, 83], "studio": [13, 14, 56], "connect": [13, 14, 15, 59, 68, 71, 85, 94], "viser": [13, 39], "threej": 13, "reactj": 13, "applic": [13, 22, 34, 53, 61], "client": 13, "websocket": [13, 55, 57, 59, 94], "server": [13, 57, 59, 85, 94, 95], "gui": [13, 15, 57, 85], "control": [13, 20, 25, 39, 56, 57, 85], "legaci": [13, 59, 94], "thank": [13, 22], "author": [13, 18, 20, 22, 27, 29, 36], "contributor": [13, 95], "repo": [13, 20, 28, 52, 54, 56, 61, 86], "made": [13, 95], "brent": [13, 20], "yi": [13, 20], "meshcat": 13, "robin": 13, "deit": 13, "doc": [14, 26, 38, 56, 95], "deprec": [14, 58, 60, 85], "opt": [14, 32], "viewer_legaci": [14, 57, 78, 94], "safari": 14, "cd": [14, 24, 51, 56], "app": [14, 33, 40, 51], "npm": 14, "yarn": 14, "sudo": 14, "apt": [14, 51], "global": [14, 24, 25, 36, 51], "nvm": 14, "instruct": [14, 20, 23, 26, 34, 36, 39, 56], "17": [14, 21, 56], "8": [14, 22, 29, 31, 32, 47, 51, 53, 56, 61, 64, 71], "shell": [14, 56], "v17": 14, "webserv": 14, "port": [14, 55, 56, 57, 59, 60, 94], "4000": [14, 53], "localhost": [14, 57], "websocket_url": 14, "w": [14, 22, 26, 34, 52, 58, 62, 72, 74], "7007": [14, 55, 56, 57, 59, 94], "solut": [14, 34, 56, 83], "cannot": [14, 56, 58, 61, 76, 85, 95], "try": [14, 26, 50, 51, 56], "fov": [15, 16, 17, 51, 85], "crop": [15, 16, 17, 51, 55, 85], "retriev": [15, 60, 64], "listen": [15, 57], "click": [15, 16, 17, 39, 51, 57, 85], "window": [15, 17, 51, 56, 57], "viewercontrol": [15, 72, 85], "within": [15, 16, 17, 29, 36, 38, 50, 53, 56, 63, 64, 65, 72, 75], "viewer_control": 15, "intrins": [15, 21, 46, 58, 60, 61, 64, 85], "extrins": [15, 46, 61], "get_camera": [15, 64, 72, 85], "button_cb": 15, "img": [15, 61], "100": [15, 32, 47, 48, 63, 64, 71], "yet": [15, 85], "camera_extrinsics_matrix": 15, "camera_to_world": [15, 46, 49, 58], "3x4": 15, "generate_rai": [15, 49, 58, 72], "camera_indic": [15, 49, 58, 71, 72], "move": [15, 16, 31, 48, 51, 52, 56, 57, 60, 64, 85], "whatev": 15, "viewer_button": 15, "dummi": 15, "posit": [15, 16, 17, 27, 28, 29, 30, 39, 51, 58, 61, 63, 66, 70, 71, 75, 83, 85], "well": [15, 16, 17, 25, 33, 36, 51, 58, 84, 95], "toward": [15, 16, 25, 38, 74], "aim_at_origin": 15, "mean": [15, 17, 25, 51, 58, 64, 65, 68, 72, 83, 84], "smoothli": 15, "anim": [15, 16, 17, 51, 85], "jump": 15, "instantli": [15, 85], "set_pos": [15, 72, 85], "look_at": [15, 85], "interact": [15, 16, 20, 29, 40], "viewerclick": [15, 72, 85], "viewerrectselect": [15, 72, 85], "drag": [15, 17, 19], "rectangl": [15, 85], "right": [15, 16, 28, 42, 48, 51, 52, 58, 61, 74], "corner": [15, 52, 85], "normal": [15, 25, 29, 31, 32, 38, 54, 58, 60, 61, 62, 63, 67, 71, 72, 74, 76, 80, 82, 83, 85], "opencv": [15, 52, 58, 61, 85], "register_pointer_cb": [15, 72, 85], "unregister_pointer_cb": [15, 72, 85], "longer": [15, 51], "press": [15, 55, 85], "wait": 15, "unregist": 15, "itself": [15, 20], "old": [15, 60], "Be": [15, 17], "warn": [15, 60, 95], "re": [15, 16, 20, 26, 40, 56, 64, 95], "lost": 15, "restor": 15, "removed_cb": [15, 85], "pointer_click_cb": 15, "screen_po": [15, 72, 85], "pointer_rect_cb": 15, "rect": [15, 85], "rectangular": 15, "min_bound": [15, 72, 85], "max_bound": [15, 72, 83, 85], "Or": [15, 51], "becom": [15, 25], "again": [15, 56], "overridden": [15, 63], "pointer_click_removed_cb": 15, "set_dis": [15, 72, 85], "cb": [15, 85], "potenti": [15, 48], "interrupt": 15, "layer": [16, 21, 27, 31, 58, 67, 69, 71], "bake": 16, "mesh": [16, 17, 31, 36, 39, 40], "cloud": [16, 36, 43, 61], "rel": [16, 17, 27, 46, 56, 59, 61, 94], "perspect": [16, 17, 40, 49, 58, 78], "equirectangular": [16, 40, 63], "vr180": 16, "omnidirect": [16, 51], "stereo": [16, 41], "vr": 16, "360": [16, 37, 43, 44, 50, 70, 74], "gaussian": [16, 20, 22, 24, 40, 41, 50, 51, 58, 61, 66, 70, 72, 82, 83, 89], "video": [16, 23, 26, 38, 39, 56, 86, 91], "newer": 16, "download": [16, 17, 19, 23, 28, 43, 51, 53, 55, 56, 86], "prefer": [16, 17, 24, 43], "Ons": 16, "visibl": [16, 17, 31, 34, 57, 74, 85], "properti": [16, 32, 46, 53, 58, 60, 62, 74, 77, 84, 85], "tab": [16, 17, 51, 55, 56, 86, 93], "panel": [16, 55, 57], "qualiti": [16, 22, 23, 25, 27, 29, 33, 34, 38, 39, 42, 43, 48, 51, 54, 59, 94], "clear": [16, 26, 38], "larg": [16, 24, 25, 32, 36, 50, 51, 52, 61], "save_world_fram": 16, "de": [16, 61], "frame": [16, 17, 34, 46, 51, 52, 55, 61, 74], "won": [16, 17, 80], "resiz": [16, 17, 52, 58, 64], "rotat": [16, 17, 22, 32, 46, 58, 61, 63, 83], "hide": [16, 17, 95], "shadow": [16, 17], "catcher": 16, "invis": 16, "cast": [16, 48], "cycl": [16, 57], "ideal": [16, 48], "occlud": [16, 75], "outlin": [16, 56], "verifi": 16, "doe": [16, 33, 34, 41, 48, 51, 56, 59, 61, 63, 64, 66, 78, 94, 95], "expand": [16, 51], "selector": 16, "camera_path_blend": 16, "prompt": [16, 23, 24, 25, 39, 72, 77, 78], "film": 16, "transpar": [16, 22, 31], "align": [16, 29, 36, 51, 52, 58, 61, 63, 71, 75, 95], "textur": [16, 17], "panoram": [16, 51], "panorama": 16, "y": [16, 17, 31, 46, 48, 49, 52, 56, 58, 61, 63, 64, 66, 83], "resolut": [16, 17, 36, 37, 47, 51, 52, 58, 66, 69, 71, 77], "activ": [16, 51, 53, 56, 57, 58, 67, 69, 76], "keyfram": [16, 17], "sequenc": [16, 36, 51, 64, 66], "interpol": [16, 27, 28, 29, 43, 58, 61, 64, 66, 69, 92], "rate": [16, 17, 27, 32, 51, 55, 78], "pivot": 16, "fidel": [16, 71], "too": [16, 27, 39, 51], "convert": [16, 19, 20, 49, 51, 58, 61, 64, 69, 74, 80, 84], "sync": 16, "od": [16, 51], "stereoscopi": [16, 51], "longitud": [16, 51], "min": [16, 29, 47, 48, 51, 80, 85], "90": [16, 51, 56], "mode": [16, 32, 42, 51, 56, 58, 72, 76, 90, 93], "interocular": [16, 51], "064": [16, 51], "checkmark": [16, 95], "spheric": [16, 27, 32, 58, 66, 67, 76], "fishey": [16, 40, 63], "orthograph": [16, 40], "walkthrough": 16, "nerfstudiocamera": 16, "viewport": [16, 17], "except": [16, 63], "durat": 16, "adjust": [16, 17, 27, 51, 52, 58], "reflect": 16, "newli": [16, 39], "affect": [16, 17, 56, 80], "sensor": [16, 46, 51, 61], "accumul": [16, 38, 76, 78, 80], "alpha": [16, 40, 58, 61, 71, 74, 75, 76, 78], "open": [16, 17, 22, 29, 36, 51, 57, 95], "accordingli": [16, 17, 51], "around": [16, 23, 46, 48, 55, 57, 58, 61, 64, 74], "copi": [16, 17, 24, 41, 56, 64, 83], "done": [16, 17, 19, 27, 37, 51, 55, 56], "editor": [16, 51], "rescal": [16, 58, 61, 63, 64, 72], "plane": [16, 20, 26, 48, 52, 58, 66, 75], "repres": [16, 20, 27, 28, 31, 33, 35, 40, 42, 43, 46, 50, 51, 55, 61, 63, 64, 66, 83, 85], "deselect": 16, "renam": 16, "previous": 16, "overwrit": 16, "repeat": [16, 39], "recent": [16, 36, 78], "is_cycl": 16, "earlier": 16, "enter": [16, 29, 56, 57], "manual": [16, 51, 56, 60], "png": [16, 51, 52, 59, 62, 94], "jpg": [16, 51], "mp4": [16, 17, 56], "softwar": [16, 17, 56], "adob": [16, 17], "premier": 16, "pro": [16, 51], "lowest": 16, "present": [16, 34, 39, 44, 58, 61, 64], "filter": [16, 77], "matt": [16, 20], "kei": [16, 17, 27, 28, 45, 55, 64], "luma": [16, 20], "enough": [16, 31, 51, 77], "doesn": [16, 25, 27, 31, 51, 63, 77], "motion": [16, 17, 51], "footag": 16, "cube": [16, 34, 50, 51, 61, 70, 89], "wall": 16, "doorwai": 16, "holdout": 16, "interv": [16, 32, 44, 50, 61, 74], "4x4": [16, 61], "matrix": [16, 17, 42, 52, 58, 61, 62, 63, 66, 80, 83], "obtain": [16, 19, 32, 40, 57, 58, 74, 77], "u": [16, 20, 33, 38, 56, 58, 74, 95], "horizont": [16, 51], "angl": [16, 31, 46, 58, 61, 75], "aspect": [16, 17, 51], "ratio": [16, 17, 51], "matric": [16, 58, 61, 63], "smoothness_valu": 16, "divid": [16, 37], "camera_path": [16, 17, 58], "matrix_to_world": 16, "insert": [16, 39], "link": [17, 32, 55, 77, 84], "combin": [17, 21, 23, 24, 25, 28, 33, 39, 44, 58, 60, 64], "vfx": 17, "composit": [17, 31, 51, 59, 76, 94], "arnold": 17, "redshift": 17, "titl": [17, 18, 20, 22, 29, 36], "nerfplugin_maya": 17, "On": [17, 48], "bar": 17, "shelf": 17, "icon": [17, 57], "pop": 17, "expect": [17, 61, 66, 76, 83], "desir": [17, 46, 55], "usual": [17, 24, 25, 37, 48, 55, 56, 61, 83], "rid": 17, "artifact": [17, 20, 31, 33, 34, 40, 48], "geometri": [17, 31, 34, 36, 40], "outlier": [17, 32, 80], "materi": [17, 21, 31], "map": [17, 27, 29, 39, 54, 56, 58, 61, 62, 64, 66, 69, 71, 74, 77, 78, 83], "drop": 17, "obj": [17, 38, 54], "histori": [17, 59], "hotkei": 17, "6": [17, 39, 43, 46, 47, 52, 55, 58, 61, 64, 66, 83, 84], "toggl": [17, 51, 57], "shade": 17, "displai": [17, 51, 55, 59, 94], "feel": [17, 51], "free": [17, 24, 25, 51], "movement": [17, 51], "finish": [17, 51, 56, 84], "nerf_maya_rend": 17, "OR": [17, 56], "nerfdata": 17, "past": [17, 59], "haven": 17, "alreadi": [17, 32, 39, 58], "hit": 17, "choic": [17, 31, 87, 89, 90, 91, 92, 94], "matter": [17, 27], "24": [17, 22, 66, 84], "aftereffect": 17, "tend": [17, 51, 56], "popular": [17, 86], "design": [17, 31, 40, 55, 60], "three": [17, 25, 29, 32, 35, 37, 40, 43, 58, 66, 80], "thing": [17, 20, 55, 60, 77], "second": [17, 27, 34, 35, 51, 52, 55, 58, 75], "wherea": [17, 50], "z": [17, 31, 44, 49, 52, 58, 61, 63, 66], "pars": [17, 58, 64, 81], "replic": 17, "happi": 17, "rig": 17, "taken": [17, 38, 51, 58, 64], "agora": 17, "pizza": 17, "seagul": 17, "cyru": 17, "vachha": 17, "websit": [18, 21, 22, 24, 25, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44], "implicit": [18, 32], "reconstruct": [18, 24, 25, 31, 33, 36, 42, 46, 48, 50, 61, 64], "unisurf": 18, "volsdf": 18, "neu": [18, 71, 75], "monosdf": [18, 74, 83], "mono": 18, "geo": [18, 71], "acc": 18, "facto": 18, "neuralreconw": 18, "intend": [18, 66], "integr": [18, 20, 26, 30, 39, 47, 56, 66, 71, 95], "improv": [18, 21, 27, 29, 33, 34, 39, 42, 48, 55, 95], "back": [18, 20, 27, 52, 61], "cite": [18, 20, 22], "misc": 18, "yu2022sdfstudio": 18, "yu": 18, "zehao": 18, "chen": 18, "anpei": 18, "antic": 18, "bozidar": 18, "peng": 18, "songyou": 18, "bhattacharyya": 18, "apratim": 18, "niemey": [18, 36], "michael": [18, 36], "tang": 18, "siyu": 18, "sattler": 18, "torsten": 18, "geiger": 18, "andrea": [18, 39], "unifi": [18, 20, 28], "year": [18, 20, 22, 29, 36], "url": [18, 56, 57, 59, 94], "github": [18, 20, 22, 24, 25, 29, 34, 35, 37, 38, 39, 41, 43, 44, 51, 56, 58, 61, 64, 74, 83, 95], "com": [18, 22, 24, 25, 29, 34, 35, 37, 38, 39, 41, 43, 44, 51, 56, 58, 61, 64, 74, 83], "autonomousvis": [18, 83], "fast": [19, 33, 37, 39, 40, 42, 51, 55, 56, 77], "effici": [19, 32, 33, 35, 63], "ckpt": 19, "volinga": 19, "suit": [19, 37, 61], "readi": [19, 38, 53, 56], "simplifi": [20, 54], "interpret": 20, "modular": [20, 26], "With": [20, 24, 27, 30, 34, 51, 66, 74], "friendli": [20, 40], "explor": 20, "technologi": 20, "build": [20, 51, 56], "commun": [20, 56, 95], "upon": 20, "opensourc": 20, "berkelei": 20, "student": 20, "kair": 20, "lab": 20, "ai": [20, 22], "bair": 20, "octob": 20, "commit": [20, 56], "resourc": 20, "date": 20, "season": 20, "veteran": 20, "know": [20, 50, 51], "hard": [20, 51], "onboard": 20, "gen": [20, 23], "request": [20, 26, 39, 95], "spankin": 20, "welcom": [20, 26, 32, 40, 95], "hesit": [20, 95], "reach": [20, 27, 76, 95], "team": [20, 95], "question": [20, 49], "discord": [20, 51, 95], "feedback": 20, "love": 20, "fill": 20, "who": [20, 26, 51], "why": [20, 49, 50], "faster": [20, 22, 23, 27, 39, 40, 43, 51, 58, 74], "togeth": [20, 33, 58, 60, 68, 77], "organ": 20, "great": 20, "tour": 20, "nerfologi": [20, 26, 39], "tech": 20, "educ": 20, "notebook": 20, "walk": [20, 21, 24, 25, 31, 32, 33, 57], "better": [20, 23, 26, 33, 37, 38, 40, 43, 48, 51, 58], "terminologi": 20, "neural": [20, 21, 27, 30, 31, 34, 35, 37, 38, 39, 40, 43, 44, 48], "graphic": [20, 27, 52], "primit": [20, 22, 27], "multiresolut": [20, 27], "hash": [20, 33, 50, 66, 69, 70, 71], "og": 20, "radianc": [20, 21, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 42, 43, 44, 74], "multiscal": [20, 27, 30, 37, 74], "anti": [20, 30, 37, 44], "alias": [20, 30, 37, 44], "tensorf": [20, 26, 66, 72, 74], "tensori": [20, 42], "bionerf": [20, 26], "biolog": [20, 21], "plausibl": [20, 21], "synthesi": [20, 21, 22, 31, 53], "nerf2nerf": [20, 24, 26, 39], "gs2g": [20, 26], "3dg": [20, 22, 24], "signerf": [20, 26], "k": [20, 26, 55, 58, 64, 66, 83], "4d": [20, 35, 42, 66], "languag": [20, 22, 29, 36], "gsplat": [20, 24, 40], "nerfbust": [20, 26, 51], "ghostli": [20, 34], "casual": 20, "captur": [20, 31, 32, 33, 37, 41, 53, 55, 57, 86], "nerfplay": [20, 26], "stream": [20, 35, 61], "channel": [20, 32, 42, 52, 61, 62, 67, 80, 95], "tetra": [20, 26], "tetrahedra": [20, 43], "pynerf": [20, 26], "pyramid": [20, 21, 29, 37, 49], "seathru": [20, 26], "subsea": [20, 38], "zip": [20, 26, 51], "nerftogsandback": [20, 26], "forth": [20, 32], "opennerf": [20, 26], "openset": 20, "segment": [20, 22, 64, 71], "eager": 20, "even": [20, 33, 42, 46, 51, 78], "offici": [20, 21, 28, 32, 38, 41, 43], "join": [20, 95], "acceler": 20, "ruilong": 20, "li": [20, 27], "writeup": [20, 51], "arxiv": [20, 29, 61, 74, 83], "inproceed": [20, 22, 36], "tancik": [20, 29, 31], "matthew": [20, 29], "weber": 20, "ethan": 20, "ng": 20, "evonn": 20, "kerr": [20, 29], "justin": [20, 29], "wang": [20, 22], "terranc": 20, "kristoffersen": 20, "alexand": 20, "austin": 20, "jake": 20, "salahi": 20, "kamyar": 20, "ahuja": 20, "abhik": 20, "mcallist": 20, "david": 20, "kanazawa": [20, 29], "angjoo": [20, 29], "2023": [20, 29, 38, 40, 53], "booktitl": [20, 22, 36], "acm": 20, "siggraph": [20, 40, 53], "confer": [20, 22, 36], "proceed": [20, 56], "seri": [20, 21, 22, 45, 56], "23": [20, 21, 38, 55], "affili": 20, "uc": 20, "jon\u00e1\u0161": 20, "kulh\u00e1nek": 20, "jkulhanek": [20, 43], "czech": 20, "technic": 20, "univers": 20, "pragu": 20, "matia": 20, "turkulainen": 20, "maturk": 20, "eth": 20, "zurich": 20, "ethanweb": [20, 34, 61], "inspir": [21, 27, 29, 39, 75], "mechan": [21, 39], "fuse": [21, 27, 33, 51], "sourc": [21, 25, 40, 51, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85], "thu": [21, 27, 61], "capac": 21, "correl": [21, 31], "mimic": [21, 58], "observ": [21, 36, 39, 55], "cell": [21, 95], "concern": [21, 58], "context": [21, 76], "subsequ": 21, "dens": [21, 29, 31, 33, 41, 48, 51, 61], "volumetr": [21, 29, 31, 32, 40, 43, 49, 76], "consist": [21, 24, 25, 28, 39, 46, 48, 52, 63, 74, 83, 95], "m_": 21, "delta": [21, 58, 72, 75], "m_c": 21, "share": [21, 52, 60, 94], "flow": [21, 27], "oper": [21, 22, 36, 58, 63, 64], "four": [21, 55], "obliter": 21, "trivial": [21, 60], "fist": 21, "signal": [21, 24], "mu": 21, "introduc": [21, 22, 39, 47, 51, 57, 95], "psi": 21, "textit": 21, "tanh": [21, 67], "h": [21, 51, 52, 55, 58, 62, 64, 87, 88, 89, 90, 91, 92, 94], "prime": 21, "_": [21, 74], "_c": [21, 56], "prime_": 21, "prime_c": 21, "volum": [21, 29, 34, 37, 50, 74], "predict": [21, 25, 27, 31, 32, 33, 34, 38, 48, 54, 58, 67, 71, 74, 76, 83], "synthet": [21, 28, 37, 53], "drum": [21, 31], "ficu": [21, 31], "ship": [21, 31, 54], "mic": [21, 31], "chair": [21, 31], "lego": [21, 31, 53, 61], "hotdog": [21, 31], "avg": 21, "25": [21, 31, 55], "66": [21, 55], "29": [21, 31, 55, 56], "74": 21, "56": 21, "57": [21, 31, 55], "33": [21, 31, 78], "38": [21, 55], "34": [21, 31, 55], "63": [21, 55], "31": [21, 31], "82": 21, "37": [21, 55, 56], "45": [21, 53], "ssim": 21, "927": 21, "957": 21, "965": 21, "874": 21, "978": 21, "977": 21, "963": 21, "980": 21, "953": 21, "lpip": [21, 24, 25], "047": 21, "018": 21, "017": 21, "068": 21, "011": 21, "016": 21, "010": 21, "026": 21, "regard": 21, "realist": [21, 24, 25], "llff": [21, 58], "fern": 21, "flower": 21, "fortress": 21, "horn": 21, "leav": 21, "orchid": 21, "room": [21, 50, 51, 53], "rex": 21, "27": [21, 24, 71], "89": [21, 56], "32": [21, 31, 52, 63, 64, 66, 71, 74, 75, 77, 83], "99": [21, 55], "22": [21, 29, 43, 56], "20": [21, 46, 48, 51, 59, 61, 67], "80": [21, 48, 55, 56], "30": [21, 31, 51, 58, 64], "75": [21, 56, 59, 94], "01": [21, 31, 32, 47, 58, 75, 77], "837": 21, "873": 21, "914": 21, "882": 21, "796": 21, "714": 21, "911": 21, "861": 21, "093": 21, "055": 21, "025": 21, "070": 21, "103": 21, "122": 21, "029": 21, "044": 21, "sam": 22, "enhanc": [22, 42, 95], "git": [22, 24, 25, 29, 34, 35, 37, 38, 39, 41, 43, 44, 51, 56], "vuer": 22, "variant": [22, 25, 29, 33, 35, 39, 40, 43], "maskclip": 22, "vit": [22, 29], "l": [22, 27, 29, 48, 51, 57, 64, 74], "336px": 22, "mobilesamv2": 22, "gb": [22, 29, 38], "slightli": 22, "less": [22, 29, 36, 37, 51, 56], "accur": [22, 51], "independ": [22, 27], "raster": [22, 40, 64], "vocabulari": [22, 29, 36], "2d": [22, 24, 25, 36, 40], "directli": [22, 32, 36, 39, 42, 51, 61], "manipul": 22, "compar": [22, 27, 38, 42], "coars": [22, 27, 30, 33, 37, 77], "pool": 22, "refin": [22, 39, 55], "boundari": [22, 29, 61], "eccv": 22, "downstream": [22, 50], "dinov2": 22, "regular": [22, 28, 29, 34, 35, 36, 58], "intern": [22, 36, 46, 51, 58, 74, 83], "explicit": [22, 28, 61, 74], "excess": [22, 31], "hack": [22, 57], "rigid": 22, "floor": [22, 58], "estim": [22, 43, 51, 71, 74, 83], "intuit": 22, "graviti": 22, "translat": [22, 58, 61, 63, 83], "highlight": 22, "yaw": 22, "r": [22, 38, 48, 58, 63, 72, 83], "non": [22, 27, 51, 85], "sand": 22, "melt": 22, "taichi": 22, "mpm": 22, "qiu": 22, "2024": [22, 36], "featuresplat": 22, "driven": 22, "physic": 22, "ri": 22, "zhao": 22, "ge": 22, "yang": 22, "weijia": 22, "zeng": 22, "xiaolong": 22, "european": 22, "latest": [23, 56, 78], "diffus": [23, 24, 25, 34, 39], "stabl": [23, 25, 39, 83], "deepfloyd": 23, "IF": 23, "sign": [23, 54, 71], "licens": [23, 95], "agreement": 23, "card": 23, "huggingfac": 23, "login": 23, "photo": [23, 41, 51], "pineappl": 23, "cach": [23, 40, 56, 60, 62, 64], "hug": 23, "face": [23, 51, 54, 74], "coupl": 23, "minut": [23, 51], "diffusion_model": 23, "stablediffus": [23, 39], "30k": [23, 24], "took": 23, "hour": 23, "ripe": 23, "zoom": 23, "palm": 23, "tree": 23, "light": [23, 41, 51], "grei": 23, "babi": 23, "shark": 23, "cvachha": 24, "upgrad": [24, 40, 56], "igs2g": 24, "15gb": [24, 25], "colmap": [24, 40, 41, 52, 56, 61, 64, 91], "20k": 24, "nerfstudio_model": [24, 55, 78], "seem": [24, 51], "reliabl": 24, "guidanc": [24, 25, 39], "12": [24, 43, 50, 51, 55, 64], "underli": [24, 25, 36, 38, 66], "demonstr": [24, 25, 55], "gradual": [24, 25, 55], "continu": [24, 25, 44, 55], "5k": 24, "unedit": [24, 25], "attempt": [24, 25, 61], "snippet": [24, 25], "him": 24, "marbl": 24, "statu": 24, "pix2pix": 24, "cours": 24, "udpat": 24, "scheme": [24, 27, 31, 35], "sequenti": [24, 39], "span": 24, "holist": 24, "noisi": [24, 48], "nois": [24, 25], "receiv": 24, "propag": 24, "adapt": [24, 38, 58, 83], "among": 24, "amount": [24, 75], "therefor": [24, 27, 38, 48, 51], "retain": 24, "vari": [24, 25, 31, 56], "classifi": [24, 25], "rang": [24, 31, 47, 48, 53, 58, 63, 66, 71], "l1": [24, 74], "maximum": [24, 58, 59, 63, 66, 71, 77, 78, 80, 83, 85, 94], "subject": 24, "decis": [24, 31], "subtl": 24, "extrem": 24, "stage": 24, "page": [24, 25, 26, 29, 31, 34, 36, 56], "ayaanzhaqu": 25, "in2n": 25, "small": [25, 28, 33, 51, 64, 75, 83], "half": [25, 32, 33, 75], "precis": [25, 39, 58, 78], "12gb": [25, 33, 40, 56], "tini": [25, 33], "previs": 25, "10gb": 25, "ok": [25, 29], "prior": [25, 28, 31, 34, 56, 75], "tradition": 25, "strength": [25, 39], "timestep": 25, "slowli": [25, 51], "denois": [25, 34], "until": [25, 95], "been": [25, 27, 51, 60, 63], "importantli": 25, "balanc": [25, 40], "earli": 25, "inconsist": 25, "depict": 25, "evolv": 25, "tradit": [25, 27, 36, 51], "score": [25, 34, 60], "sd": 25, "dreamfus": 25, "discret": 25, "degre": [25, 32, 66, 85], "lead": [25, 29, 33], "higher": [25, 27, 31, 33, 40, 51], "techniqu": [26, 27, 31, 33, 39], "generfacto": 26, "relat": [26, 31], "markdown": 26, "md": 26, "externalmethod": 26, "external_method": 26, "layout": [26, 49, 50, 74], "ect": [26, 55], "treat": [26, 52, 80], "blog": 26, "post": [26, 56], "asset": 26, "host": [26, 56, 57, 59, 94], "elsewher": 26, "break": [27, 56, 95], "pillar": 27, "algorithm": [27, 54, 58], "march": [27, 75, 89], "occup": [27, 34, 37, 75], "smaller": [27, 29, 38, 42], "idea": [27, 38, 48, 56, 60, 83], "behind": [27, 34], "skip": [27, 71, 75, 77], "mark": 27, "bit": [27, 51, 52, 60, 64], "low": [27, 28, 32, 34, 42], "trainabl": 27, "increas": [27, 33, 50, 51, 55, 56, 60, 64], "100x": 27, "nerfacc": 27, "discuss": [27, 31, 32, 33, 95], "bottleneck": [27, 60, 64], "shrunk": 27, "neuron": 27, "10x": 27, "tensorflow": 27, "tinycudann": [27, 56], "speedup": [27, 56], "1000x": 27, "surround": [27, 61], "voxel": [27, 31, 34, 42, 51, 70], "linearli": [27, 75], "concaten": [27, 58], "backpropag": [27, 33], "gradient": [27, 33, 40, 55, 71, 74, 77, 78], "smooth": [27, 44, 54, 57], "collis": 27, "explicitli": [27, 40], "highest": [27, 54], "domin": 27, "tradeoff": [27, 59, 94], "tabl": [27, 47, 53, 56], "harmon": [27, 32, 66, 67, 76], "mlp": [27, 28, 33, 43, 68, 71, 72, 77], "were": 27, "lastli": 27, "cover": [27, 56], "strictli": 27, "known": [27, 31, 48, 56], "hyper": 27, "kplane": 28, "dnerf": [28, 53, 61, 72, 87], "tune": [28, 29, 37, 39, 51], "4gb": 28, "monocular": [28, 61, 74, 83], "5gb": [28, 37], "certain": [28, 56], "usag": [28, 56, 60, 64, 87, 88, 89, 90, 91, 92, 93, 94], "flexibl": [28, 29], "kind": 28, "hybrid": [28, 35], "linear_decod": 28, "decompos": [28, 35], "natur": [29, 36], "kerrj": 29, "big": [29, 33, 38, 40, 55], "openclip": 29, "16": [29, 52, 55, 56, 64, 66, 69, 71, 77], "lite": [29, 38], "nvidia": [29, 55, 56], "2080": 29, "experiment": [29, 38, 51], "fine": [29, 30, 31, 32, 39, 77], "long": [29, 40, 57, 58], "tail": 29, "hierarch": [29, 31], "dff": 29, "qualit": 29, "sensit": 29, "floater": [29, 34], "extract": [29, 32, 36, 51, 54, 58, 61, 71], "relevancy_0": 29, "textbox": 29, "articl": [29, 39], "lerf2023": 29, "kim": 29, "chung": 29, "goldberg": 29, "ken": 29, "journal": 29, "preprint": 29, "2303": 29, "09553": 29, "primari": [30, 93], "pe": 30, "ip": [30, 57], "account": [30, 31, 64], "vanilla": [31, 60, 72, 77], "arriv": 31, "site": 31, "least": [31, 34, 36, 53, 78, 83, 84], "heard": 31, "mildenhal": 31, "srinivasan": 31, "et": [31, 38, 74], "al": [31, 38, 74], "2020": 31, "task": [31, 48, 56], "henc": 31, "debugg": 31, "hand": [31, 34, 48, 51], "broken": 31, "fail": [31, 56], "constant": [31, 37], "exposur": 31, "concret": 31, "opaqu": 31, "vanilla_nerf_field": [31, 71], "nerffield": [31, 71, 72], "field_coars": 31, "position_encod": [31, 71], "pos_enc": 31, "direction_encod": [31, 71], "dir_enc": 31, "field_fin": 31, "trick": [31, 48], "express": [31, 66], "theta": [31, 47], "phi": [31, 47], "being": [31, 37, 56, 57, 60, 64, 66, 76], "field_compon": [31, 47, 50, 65, 66, 67, 69, 70, 71], "nerfencod": [31, 47, 66, 68, 72], "in_dim": [31, 47, 65, 66, 67, 69], "num_frequ": [31, 47, 66], "min_freq_exp": [31, 47, 66], "max_freq_exp": [31, 47, 66], "include_input": [31, 47, 66], "classic": [31, 38, 53, 55, 71], "kajiya": 31, "1984": 31, "happen": [31, 56, 58], "photoshop": 31, "opac": [31, 32, 48, 50, 75, 76, 77], "rend": 31, "white": [31, 52, 61, 76, 77], "get_weight": [31, 58, 72, 76], "strategi": [31, 37, 39, 58, 75], "uniform": [31, 48, 66, 75, 77], "pdf": [31, 74, 75, 83], "evenli": [31, 40], "predefin": [31, 48, 50], "bias": [31, 55, 74], "surfac": [31, 33, 71], "pdfsampler": [31, 48, 72, 73, 75], "uniformsampl": [31, 48, 72, 73, 75], "sampler_uniform": 31, "num_sampl": [31, 48, 49, 50, 58, 63, 71, 74, 75, 76], "num_coarse_sampl": [31, 48, 72, 77], "ray_samples_uniform": 31, "sampler_pdf": 31, "num_importance_sampl": [31, 72, 77], "field_outputs_coars": 31, "weights_coars": 31, "ray_samples_pdf": 31, "unbound": [31, 37, 48, 50, 70, 75], "ndc": 31, "warp": [31, 50, 58, 77], "linear": [31, 48, 58, 64, 66, 69, 71, 78], "dispar": [31, 48, 58, 74, 75], "spatial": [31, 39, 45, 60, 66, 68, 71, 72], "stratifi": [31, 75], "unmodifi": 31, "76": [31, 55], "98": [31, 55], "35": [31, 55], "36": 31, "00": [31, 55], "11": [31, 43, 53, 55, 56, 74], "87": 31, "46": 31, "tf": 31, "91": [31, 55], "13": [31, 64], "18": [31, 53, 55, 71], "62": [31, 55], "28": [31, 55], "65": [31, 55], "54": 31, "04": [31, 56], "jaxnerf": 31, "53": 31, "43": 31, "92": [31, 55], "03": 31, "69": [31, 55], "procedur": [32, 34, 76], "therebi": 32, "drive": [32, 61], "clone": [32, 51, 56, 86], "navig": [32, 51, 55, 56, 57, 93], "nerfsh": 32, "giannini": 32, "hall": 32, "aspen": [32, 55], "wissahickon": 32, "locust": 32, "properli": [32, 50, 56, 95], "valid": [32, 61, 63, 67, 74, 75, 76, 83], "config_loc": 32, "2000000": 32, "open3d": 32, "use_bounding_box": 32, "ply": [32, 40, 43, 51, 54, 61], "reduc": [32, 42, 48, 51, 54, 66, 83], "finetun": 32, "5000": [32, 77, 78], "warmup": [32, 78], "00001": 32, "0000001": 32, "dc": 32, "rest": 32, "0000000001": 32, "splatting_data": 32, "ineffici": [32, 52], "mention": 32, "effort": 32, "mainli": 32, "nerfsh_export": 32, "unchang": [32, 64], "pointcloud": [32, 40, 43, 54, 55, 89], "coeffici": [32, 58, 76], "exclud": 32, "sky": 32, "isotrop": 32, "sparsiti": [32, 51], "neighborhood": 32, "nearest": [32, 66, 69, 83], "neighbor": [32, 49, 74, 83], "th": [32, 43], "quantil": 32, "geometr": [32, 44, 71, 83], "photometr": 32, "grain": 32, "especi": [32, 60], "difficult": [32, 45, 51], "defacto": 33, "6gb": [33, 40], "larger": [33, 38, 43, 47, 51, 55, 95], "slower": [33, 40, 55, 66], "huge": 33, "24gb": 33, "slowest": 33, "act": 33, "publish": [33, 43], "prerequisit": 33, "contract": [33, 37, 70, 71, 77], "uncommon": 33, "acquir": 33, "phone": [33, 40], "record3d": [33, 53, 87, 91], "io": [33, 51, 56, 64, 74], "misalign": 33, "cloudi": 33, "reduct": [33, 74, 80], "sharp": [33, 74], "alloc": [33, 52, 55, 75], "uniformli": [33, 58, 63, 75], "frustum": [33, 34, 44, 48, 50, 58, 59, 71, 72, 83, 94], "themselv": 33, "distant": 33, "nearbi": 33, "consolid": [33, 45, 83], "intersect": [33, 34, 58, 66, 83], "greatli": 33, "varieti": [33, 40], "suffici": [33, 46, 51], "accuraci": 33, "chain": 33, "diminish": 33, "decreas": [33, 40, 60], "simplif": 33, "littl": [33, 49, 60], "impact": 33, "frequenc": [33, 66], "tldr": [34, 56], "clean": [34, 60, 78, 95], "wild": 34, "checkout": [34, 56], "readm": 34, "suffer": 34, "flaw": 34, "outsid": [34, 50, 56], "8th": 34, "hinder": 34, "trajectori": [34, 51, 58], "craft": 34, "nor": 34, "challeng": [34, 36, 50], "succe": 34, "binar": 34, "dsd": 34, "penal": 34, "push": 34, "occupi": 34, "seen": 34, "streamabl": 35, "lsongx": 35, "backbon": 35, "spatiotempor": 35, "accord": [35, 58, 75], "tempor": [35, 77], "characterist": 35, "belong": [35, 75], "categori": 35, "deform": 35, "todo": [35, 64, 65, 68, 72, 77], "unimpl": 35, "vlm": 36, "arbitrari": [36, 48, 58, 60, 80], "concept": [36, 45], "manner": [36, 39], "goe": 36, "beyond": [36, 60], "close": [36, 37, 48, 51, 56, 57, 58, 83], "assumpt": 36, "literatur": 36, "heavili": 36, "influenc": 36, "convolut": 36, "polygon": 36, "inde": 36, "lower": [36, 51, 66, 77], "address": [36, 37, 57, 59, 94], "spirit": 36, "overal": [36, 44, 48], "complex": 36, "architectur": [36, 56], "leverag": [36, 39], "abil": 36, "outperform": 36, "openscen": 36, "miou": 36, "engelmann2024opennerf": 36, "engelmann": 36, "franci": 36, "manhardt": 36, "fabian": 36, "tateno": 36, "keisuk": 36, "pollefei": 36, "marc": 36, "tombari": 36, "federico": 36, "scatter": [37, 48], "hturki": 37, "pyg": 37, "org": [37, 56, 61, 74, 83], "whl": [37, 44, 56], "torch_vers": 37, "html": [37, 44, 95], "multicam": 37, "outdoor": [37, 50], "indoor": [37, 61, 71], "usal": 37, "roughli": 37, "degrad": 37, "blurri": [37, 51], "constrain": 37, "due": [37, 38, 51, 56], "unawar": 37, "finer": 37, "desktop": [38, 56], "laptop": 38, "8gb": 38, "vram": 38, "akerbp": 38, "seathru_nerf": 38, "hyperparamet": 38, "messag": [38, 41, 61, 87, 88, 89, 90, 91, 92, 94], "susbea": 38, "unoffici": [38, 56], "public": [38, 43, 57, 83], "ontop": 38, "differenti": 38, "solid": 38, "medium": 38, "colour": [38, 43], "boldsymbol": 38, "hat": 38, "mathbf": [38, 74], "sum_": 38, "rm": [38, 56], "_i": [38, 74], "med": 38, "cdot": 38, "exp": 38, "sigma": [38, 74], "attn": 38, "t_i": 38, "delta_i": 38, "textrm": 38, "bigg": 38, "j": [38, 40, 66, 95], "_j": 38, "delta_j": 38, "equat": [38, 50, 70, 74], "five": [38, 61], "mathbb": [38, 74], "backscatt": 38, "attenu": 38, "visualis": 38, "levi": 38, "third": [38, 40, 52, 58], "seper": 38, "water": 38, "depthmap": 38, "gif": 38, "compress": [38, 59, 62, 94], "justic": 38, "clariti": 38, "cgtuebingen": 39, "ui": [39, 56], "40min": 39, "signerf_nerfacto": 39, "20min": 39, "hardwar": [39, 56], "preview": [39, 51, 57], "inher": 39, "possess": 39, "insight": 39, "multi": [39, 42, 56, 66, 69, 71, 78], "exploit": 39, "gain": 39, "enforc": [39, 74], "shape": [39, 40, 44, 52, 58, 61, 62, 64, 65, 66, 67, 71, 72, 76, 80, 82, 83, 84], "extern": [39, 46, 51], "explan": [39, 52, 72], "watch": 39, "controlnet": 39, "And": [39, 79], "inpaint": 39, "multiview": 39, "variat": [39, 53, 74], "significantli": [39, 42, 51, 66], "emploi": [39, 48], "occur": [39, 56], "seed": [39, 59, 72], "breakdown": 39, "jan": 39, "nikla": 39, "dihlmann": 39, "engelhardt": 39, "inria": 40, "confus": 40, "drift": [40, 51], "blend": [40, 61, 76], "methodologi": 40, "backend": [40, 56], "compil": [40, 56], "experienc": 40, "issu": [40, 51, 55, 56, 57, 75, 95], "resolv": 40, "sfm": [40, 43], "scanner": 40, "full_images_datamanag": 40, "undistort": [40, 58, 64], "evalaut": 40, "cull": 40, "threshold": [40, 67, 75, 77], "transluc": 40, "15k": 40, "cull_alpha_thresh": 40, "005": 40, "continue_cull_post_densif": 40, "spikei": 40, "physgaussian": 40, "use_scale_regular": 40, "ingest": 40, "parti": 40, "polycam": [40, 91], "playcanva": 40, "supersplat": 40, "webgl": 40, "antimatter15": 40, "spline": [40, 57], "mkkellogg": 40, "plan": 40, "unconstrain": 41, "kevinxu02": 41, "capture_nam": 41, "tsv": 41, "dataset_split": 41, "brandenburg": [41, 61], "gate": [41, 61], "brandenburg_g": 41, "spars": [41, 43, 48, 51], "compact": 42, "rank": [42, 59, 74, 78], "cp": [42, 66], "vm": [42, 66], "decomposit": [42, 66], "footprint": 42, "plenoxel": 42, "plenoctre": 42, "triangul": 43, "optix": 43, "cgal": 43, "cmake": 43, "tetranerf": 43, "process_imag": 43, "18gb": 43, "16gb": 43, "1m": 43, "barycentr": 43, "shallow": 43, "comparison": 43, "tank": 43, "templ": 43, "sulvxiangxin": 44, "zipnerf": 44, "subdirectori": [44, 56], "torch_scatt": 44, "2bcu118": 44, "ingp": 44, "cone": [44, 75, 83], "multisampl": 44, "approxim": [44, 46, 49, 51, 58, 83], "conic": [44, 49, 58, 83], "unlik": [44, 51, 66, 85], "interlevel": 44, "prevent": [44, 48, 56, 64, 75], "nugget": 45, "buri": 45, "academ": 45, "lens": 46, "simplest": 46, "pinhol": [46, 58, 64], "cx": [46, 49, 52, 58], "cy": [46, 49, 52, 58], "collaps": [46, 47, 48, 49, 50, 95], "cameratyp": [46, 49, 58, 72], "plotly_util": [46, 49], "c2w": [46, 49, 58], "camera_typ": [46, 49, 51, 58], "fig": [46, 48, 49, 50], "vis_camera_rai": 46, "edg": [46, 58, 61, 74], "wide": 46, "aren": 46, "caus": [46, 48, 52, 55, 56], "benefici": 46, "k_1": 46, "k_2": 46, "k_3": 46, "k_4": 46, "radial": [46, 52, 58], "p_1": 46, "p_2": 46, "tangenti": [46, 52, 58], "opper": [47, 50], "mediapi": 47, "media": 47, "128": [47, 66, 71, 77], "covariance_magnitud": 47, "x_sampl": 47, "linspac": [47, 48, 49, 50], "stack": [47, 51, 58, 74], "meshgrid": 47, "ij": 47, "dim": [47, 50, 58, 65, 74, 80, 83], "encoded_valu": 47, "show_imag": 47, "moveaxi": 47, "cmap": 47, "plasma": 47, "border": 47, "vmin": 47, "vmax": 47, "covari": [47, 66, 83], "magnitud": [47, 48], "cov": [47, 66, 83], "rffencod": [47, 66, 68, 72], "incod": 47, "num_level": [47, 66, 69, 71, 72, 77], "min_r": [47, 66, 69], "max_r": [47, 66, 69, 71, 72, 77], "log2_hashmap_s": [47, 66, 69, 71, 72, 77], "slice": 47, "fix": [47, 50, 56, 60, 64, 75, 95], "features_per_level": [47, 66, 69, 71, 72, 77], "hashencod": [47, 66, 68, 72], "hash_init_scal": [47, 66, 69], "grid_slic": 47, "encoded_values_slic": 47, "encoded_imag": 47, "detach": 47, "numpi": [47, 64], "0010": 47, "grad_fn": 47, "maxbackward1": 47, "minbackward1": 47, "mostli": 47, "150": 47, "shencod": [47, 66, 68, 72], "pi": [47, 48], "xy": [47, 52, 64], "co": 47, "sin": [47, 48, 83], "aggreg": 48, "parameter": [48, 83], "decid": [48, 58], "unfortun": [48, 51], "cost": [48, 64], "sens": 48, "perturb": 48, "pertub": 48, "statist": 48, "overfit": 48, "round": [48, 58], "histogram": [48, 74], "plotli": [48, 49, 50], "graph_object": [48, 49, 50], "subplot": 48, "make_subplot": 48, "train_stratifi": [48, 75], "lineardisparitysampl": [48, 72, 73, 75], "sqrtsampler": [48, 72, 73, 75], "logsampl": [48, 72, 73, 75], "row": [48, 52, 59, 74, 85], "col": 48, "subplot_titl": 48, "squar": [48, 49, 55, 63, 75, 83], "root": [48, 56, 61, 75], "shared_xax": 48, "shared_yax": 48, "vertical_spac": 48, "enumer": [48, 50], "nears": [48, 58, 72], "generate_ray_sampl": [48, 72, 73, 75], "nbinsx": 48, "50": 48, "append_trac": 48, "update_yax": 48, "title_text": 48, "update_xax": 48, "overlai": 48, "update_layout": 48, "700": [48, 55], "hovermod": 48, "showlegend": 48, "margin": [48, 66], "update_trac": 48, "uniform_sampl": 48, "pdf_sampler": [48, 75], "include_origin": [48, 75], "coarse_ray_sampl": 48, "stuff": 48, "pdf_trace": 48, "samples_trac": 48, "400": 48, "unit": [49, 50, 58], "Not": [49, 58, 66, 69], "alvi": 49, "smith": 49, "dx": 49, "dy": 49, "bin": [49, 50, 56, 58, 74, 75], "get_ray_sampl": [49, 58, 72], "bin_start": [49, 58], "bin_end": [49, 58], "vis_rai": 49, "get_ray_bundle_lin": 49, "teal": 49, "get_frustums_mesh_list": 49, "webdocs_layout": [49, 50], "get_posit": [49, 58, 72], "get_frustum_point": 49, "appoxim": 49, "get_gaussian_blob": [49, 50, 58, 72], "get_gaussian_ellipsoids_list": [49, 50], "flatten": [49, 58, 72, 82, 84], "void": [50, 64], "wish": [50, 55], "emit": 50, "notion": 50, "1km": 50, "ball": 50, "radiu": [50, 58, 63, 70, 72, 74, 83], "leq": [50, 70], "frac": [50, 70], "95": [50, 55], "confid": 50, "multivari": [50, 83], "explain": [50, 52, 55], "sphere": [50, 70, 71], "rand": 50, "randn": 50, "norm": [50, 58, 70, 71, 74, 78], "keepdim": 50, "get_random_color": 50, "idx": [50, 64], "append": [50, 55, 66], "get_spher": 50, "111111": 50, "l_2": 50, "scenecontract": [50, 68, 70, 72], "contracted_gaussian": 50, "l_": 50, "infti": [50, 74], "inf": [50, 60, 61, 64, 70], "get_cub": 50, "side_length": 50, "fun": 51, "lidar": [51, 74], "android": 51, "oak": 51, "glass": 51, "assist": [51, 60], "compat": [51, 52], "ffmpeg": [51, 91, 92], "quickstart": 51, "finicki": 51, "overlap": 51, "suggest": [51, 56, 74], "eval_data_path": 51, "ask": 51, "linux": [51, 56], "conda": [51, 53, 56, 95], "forg": [51, 95], "successfulli": 51, "vkpg": 51, "microsoft": [51, 56], "vcpkg": 51, "bootstrap": 51, "x64": [51, 56], "osx": 51, "bat": [51, 56], "robust": [51, 74], "arkit": 51, "slam": 51, "blur": 51, "shutter": 51, "iphon": [51, 61], "ipad": 51, "tap": 51, "pane": 51, "raw": 51, "output_fil": 51, "menu": 51, "dev": [51, 56, 95], "sent": [51, 64], "email": 51, "unzip": 51, "exr": 51, "downsampl": 51, "sdk": 51, "realsens": 51, "d455": 51, "d435i": 51, "azur": 51, "kinect": 51, "dk": 51, "imu": 51, "tof": 51, "vislam": 51, "pure": 51, "monoton": 51, "narrow": 51, "spectacularai": 51, "preview3d": 51, "key_frame_dist": 51, "5cm": 51, "scan": [51, 61], "trade": 51, "No": [51, 56], "xml": 51, "csv": 51, "odm_report": 51, "odm_orthophoto": 51, "projectaria_tool": 51, "projectaria": 51, "percept": 51, "servic": 51, "mp": [51, 59], "insta360": 51, "equirect": 51, "isn": [51, 58, 85], "troubl": 51, "held": 51, "head": [51, 68, 71, 72], "unwant": 51, "rule": [51, 95], "portion": [51, 57], "person": 51, "obvious": 51, "slight": 51, "180": 51, "deg": 51, "front": [51, 58, 61], "life": 51, "ipd": 51, "viewabl": 51, "unview": 51, "64mm": 51, "4096x2048": 51, "2048x1024": 51, "4096x4096": 51, "2048x2048": 51, "jpeg": [51, 52, 59, 62, 94], "clearer": 51, "1x1x1": 51, "cylind": [51, 83], "render_height": 51, "render_width": 51, "almost": 51, "discern": 51, "headset": 51, "exponenti": [51, 58, 78], "temporari": [51, 56], "stationari": 51, "preliminari": 51, "vr_ipd": 51, "mm": 51, "opengl": [52, 61], "ax": [52, 53, 58, 66], "flip": 52, "axi": [52, 58, 61, 63, 66, 71, 75, 83], "red": 52, "green": [52, 95], "blue": 52, "shoot": 52, "camera_model": 52, "opencv_fishey": 52, "fl_x": 52, "1072": 52, "fl_y": 52, "1068": 52, "1504": 52, "princip": [52, 58], "3008": 52, "2000": [52, 53, 55], "k1": [52, 58], "0312": 52, "k2": [52, 58], "0051": 52, "k3": [52, 58], "0006": 52, "k4": [52, 58], "0001": [52, 77, 83], "fourth": [52, 58], "p1": [52, 58], "47e": 52, "p2": [52, 58], "37e": 52, "1234": 52, "column": [52, 61, 74, 83], "last": [52, 56], "homogen": [52, 58], "file_path": 52, "frame_00001": 52, "transform_matrix": 52, "x0": 52, "y0": 52, "z0": 52, "x1": 52, "y1": [52, 74], "z1": 52, "x2": 52, "y2": 52, "z2": 52, "info": [52, 74, 83], "depth_file_path": 52, "polyform": 52, "unknown": [52, 61], "peopl": 52, "mask_path": 52, "met": 52, "black": [52, 60, 76, 77], "blink": 53, "eyefultow": [53, 87], "awscli": 53, "riverview": 53, "seating_area": 53, "apart": [53, 63], "jpeg_1k": 53, "jpeg_2k": 53, "baselin": 53, "lie": [53, 72], "dramat": 53, "photor": 53, "ldr": 53, "hdr": 53, "hopefulli": 53, "pick": [53, 60, 64], "count": 53, "mill": 53, "bucket": 53, "fall": 53, "though": 53, "condens": 53, "250": 53, "999": 53, "3999": 53, "1999": 53, "7999": 53, "8000": 53, "aw": 53, "truncat": 54, "output_dir": [54, 78], "offlin": 54, "filetyp": 54, "pymeshlab": 54, "xatla": 54, "unwrap": 54, "uv": 54, "webview": 55, "remot": [55, 57], "pretrain": 55, "satisfi": 55, "modal": [55, 61], "kill": [55, 59, 94], "yellow": 55, "power": 55, "minor": 55, "quirk": 55, "subcommand": [55, 57], "alongsid": 55, "stutter": 55, "path_to_config": 55, "_num_rays_per_batch": 55, "8192": 55, "cuda_visible_devic": 55, "4096": [55, 63, 77], "70k": 55, "sec": [55, 59], "v100": [55, 56], "eta": [55, 59], "610": 55, "61": [55, 56], "115": 55, "968": 55, "72": 55, "68": 55, "620": 55, "908": 55, "58": 55, "630": 55, "907": 55, "73": 55, "640": 55, "937": 55, "59": 55, "71": 55, "650": 55, "853": 55, "49": 55, "660": 55, "710": 55, "85": 55, "670": 55, "67": 55, "797": 55, "42": [55, 59], "680": 55, "783": 55, "39": 55, "81": 55, "690": 55, "756": 55, "70": [55, 56], "755": 55, "throughput": 55, "100k": 55, "1910": 55, "79": 55, "623": 55, "104": 55, "1920": 55, "083": 55, "105": 55, "1930": 55, "93": 55, "092": 55, "48": [55, 71, 77], "1940": 55, "94": 55, "364": 55, "21": 55, "1950": 55, "327": 55, "1960": 55, "96": [55, 77], "473": 55, "51": 55, "09": [55, 80], "1970": 55, "97": 55, "334": 55, "26": 55, "1980": 55, "200": 55, "1990": 55, "264": 55, "168": 55, "40": 55, "eventu": 55, "satur": 55, "fragil": 56, "wsl2": 56, "guarante": [56, 95], "caveat": 56, "buildtool": 56, "msvc": 56, "143": 56, "142": 56, "2019": 56, "vcvars64": 56, "x86": 56, "vc": 56, "auxiliari": [56, 60], "older": 56, "vcvarsal": 56, "vcvars_ver": 56, "your_vc": 56, "_compiler_toolset_vers": 56, "toolset": 56, "functorch": 56, "uninstal": [56, 90], "torchvis": 56, "cu118": 56, "toolkit": 56, "label": [56, 61, 64], "cu117": 56, "ninja": 56, "bind": [56, 59, 94], "nvlab": 56, "bash": 56, "zsh": 56, "rerun": [56, 95], "ecosystem": 56, "spin": [56, 58], "quickli": 56, "maco": 56, "curl": 56, "fssl": 56, "fetch": [56, 78], "enviro": 56, "hloc": [56, 91], "straight": [56, 64], "upstream": 56, "releas": 56, "v1": [56, 61], "driver": 56, "ghcr": 56, "dockerfil": 56, "restrict": 56, "cuda_architectur": 56, "geforc": 56, "30xx": 56, "86": 56, "strongli": 56, "id": [56, 61, 64, 72], "abus": 56, "privileg": 56, "workspac": 56, "mount": 56, "home": [56, 61], "your_us": 56, "everytim": 56, "p": 56, "shm": 56, "limit": 56, "mb": 56, "yourself": 56, "besid": 56, "smapl": 56, "backslash": 56, "unix": 56, "frontslash": 56, "escap": 56, "charact": 56, "folder1": 56, "folder2": 56, "quot": 56, "local_fold": 56, "docker_fold": 56, "perman": 56, "destroi": 56, "workdir": 56, "devel": 56, "ubuntu22": 56, "consequ": 56, "ubuntu": 56, "python3": 56, "autom": 56, "discard": 56, "tinycudnn": 56, "52": 56, "ipc": 56, "arch": 56, "h100": 56, "40x0": 56, "30x0": 56, "a100": 56, "20x0": 56, "titan": 56, "10x0": 56, "xp": 56, "9x0": 56, "k80": 56, "importerror": 56, "dll": 56, "_89_c": 56, "mismatch": 56, "runtim": 56, "len": 56, "reinstal": 56, "tcnn_cuda_architectur": 56, "xx": 56, "4090": 56, "detect": [56, 61, 85], "confirm": 56, "v11": 56, "visual_studio_integr": 56, "msbuildextens": 56, "msbuild": 56, "v160": 56, "buildcustom": 56, "profession": 56, "enterpris": 56, "ctype": 56, "contractiontyp": 56, "typeerror": 56, "nonetyp": 56, "callabl": [56, 58, 60, 64, 67, 75, 78, 85], "problem": [56, 58], "cuda_hom": 56, "usr": 56, "ld_library_path": 56, "lib64": 56, "cupti": 56, "session": [56, 57], "browser": 57, "traffic": 57, "secur": 57, "tunnel": 57, "127": 57, "usernam": 57, "vscode": 57, "ti": 57, "collabor": 57, "latenc": 57, "preprocess": 57, "introduct": 57, "batch_c2w": 58, "batch_fx": 58, "batch_fi": 58, "batch_cx": 58, "batch_ci": 58, "batch_w": 58, "batch_h": 58, "distortion_param": [58, 61], "batch_dist_param": 58, "batch_cam_typ": 58, "num_camera": 58, "broadcast": [58, 84], "thin": 58, "prism": 58, "fisheye624": 58, "num_cameras_batch_dim": 58, "coord": 58, "camera_opt_to_camera": 58, "distortion_params_delta": 58, "keep_shap": 58, "disable_distort": 58, "aabb_box": 58, "obb_box": [58, 77], "orientedbox": [58, 63, 72, 77, 83], "_generate_rays_from_coord": 58, "docstr": [58, 95], "deal": [58, 63], "isinst": 58, "noth": [58, 64, 65], "jag": 58, "problemat": 58, "regardless": 58, "prepend": 58, "get_image_coord": [58, 72], "pixel_offset": 58, "offset": [58, 66, 72], "0th": 58, "get_intrinsics_matric": [58, 72], "image_height": [58, 62, 63, 72], "image_width": [58, 62, 63, 72], "is_jag": [58, 72], "rescale_output_resolut": [58, 72], "scaling_factor": 58, "scale_rounding_mod": 58, "to_json": [58, 72], "camera_idx": 58, "max_siz": 58, "base64": 58, "string": [58, 59, 64, 69, 76, 81, 83], "cameraoptim": [58, 72], "non_trainable_camera_indic": 58, "num_non_trainable_camera": 58, "apply_to_camera": [58, 72], "apply_to_raybundl": [58, 72], "param": [58, 60, 61, 62, 64, 72, 74, 75, 78, 83], "get_correction_matric": [58, 72], "param_group": [58, 78], "factori": [58, 59, 60, 61, 63, 71, 74, 77, 78], "so3xr3": 58, "se3": 58, "trans_l2_penalti": [58, 72], "rot_l2_penalti": [58, 72], "optimizerconfig": [58, 72, 78], "schedulerconfig": [58, 72, 78], "penalti": 58, "get_interpolated_camera_path": [58, 72], "order_pos": 58, "get_path_from_json": [58, 72], "get_spiral_path": [58, 72], "radius": 58, "rot": 58, "zrate": 58, "spiral": [58, 92], "radii": [58, 83], "camera_util": 58, "auto_orient_and_center_pos": [58, 72], "num_pos": [58, 61], "smallest": [58, 66, 69], "mobil": 58, "robot": 58, "arrai": [58, 64, 83], "attent": 58, "closest": [58, 80], "optic": 58, "inward": 58, "focus_of_attent": [58, 72], "initial_focu": 58, "get_distortion_param": [58, 72], "get_interpolated_k": [58, 72], "k_a": 58, "k_b": 58, "get_interpolated_pos": [58, 72], "pose_a": 58, "ndarrai": [58, 61, 62, 64], "dtype": [58, 62], "_scalartype_co": 58, "pose_b": 58, "get_interpolated_poses_mani": [58, 72], "steps_per_transit": 58, "transit": 58, "euclidian": 58, "get_interpolated_tim": [58, 72], "time_a": 58, "time_b": 58, "get_ordered_poses_and_k_and_tim": [58, 72], "normalize_with_norm": [58, 72], "quaternion_from_matrix": [58, 72], "isprecis": 58, "quaternion": [58, 61, 83], "quaternion_matrix": [58, 72], "quaternion_slerp": [58, 72], "quat0": 58, "quat1": 58, "shortestpath": 58, "closer": [58, 77], "short": 58, "radial_and_tangential_undistort": [58, 72], "max_iter": 58, "multinerf": [58, 74, 83], "blob": [58, 61, 64, 74, 83], "b02228160d3179300c7d499dca28cb9ca3677f32": [58, 74], "l477": 58, "l509": 58, "epsilon": [58, 78, 80, 83], "rotation_matrix_between": [58, 72], "unit_vector": [58, 72], "euclidean": [58, 83], "np": 58, "viewmatrix": [58, 72], "lookat": 58, "po": [58, 63], "upward": 58, "lie_group": 58, "exp_map_se3": [58, 72], "tangent_vector": 58, "se": 58, "tangent": [58, 83], "exp_map_so3xr3": [58, 72], "product": [58, 66], "datastructur": 58, "guassian": 58, "classmethod": [58, 61, 66, 69, 76], "get_mock_frustum": [58, 72], "placehold": 58, "meaningless": 58, "mass": 58, "get_start_posit": [58, 72], "set_offset": [58, 72], "jaxtyp": [58, 61, 63], "latent_dim": 58, "spacing_start": [58, 72], "spacing_end": [58, 72], "spacing_to_euclidean_fn": [58, 72], "get_row_major_sliced_ray_bundl": [58, 72], "start_idx": 58, "end_idx": 58, "chunk": [58, 59, 77], "set_camera_indic": [58, 72], "camera_index": 58, "get_weights_and_transmittance_from_alpha": [58, 72], "weights_onli": 58, "mayb": [58, 60], "sdf": [58, 72, 75], "transmitt": 58, "relev": [58, 60, 61], "printableconfig": [59, 72, 78], "train_rays_per_sec": 59, "curr_test_psnr": 59, "vis_rays_per_sec": 59, "test_rays_per_sec": 59, "els": 59, "banner_messag": 59, "loggingconfig": [59, 72, 78], "relative_log_dir": [59, 72], "pathlib": [59, 60, 61], "posixpath": [59, 61, 78], "steps_per_log": [59, 72], "max_buffer_s": [59, 72], "local_writ": [59, 72], "occurr": 59, "machineconfig": [59, 72, 78], "num_devic": [59, 72], "num_machin": [59, 72], "machine_rank": [59, 72], "dist_url": [59, 72], "device_typ": [59, 72], "printabl": 59, "viewerconfig": [59, 72, 78], "relative_log_filenam": [59, 72], "viewer_log_filenam": [59, 94], "txt": [59, 94], "websocket_port": [59, 72, 94], "websocket_port_default": [59, 72], "websocket_host": [59, 72], "num_rays_per_chunk": [59, 72], "32768": 59, "max_num_display_imag": [59, 72], "512": [59, 94], "quit_on_train_complet": [59, 72], "image_format": [59, 72], "jpeg_qual": [59, 72], "make_share_url": [59, 72], "camera_frustum_scal": [59, 72], "default_composite_depth": [59, 72], "occlus": [59, 94], "lossi": [59, 94], "lossless": [59, 94], "shareabl": [59, 94], "beta": [59, 63, 67, 71, 76, 94], "lag": [59, 94], "base_datamanag": 60, "monolith": 60, "learnabl": [60, 71], "rational": 60, "paradigm": 60, "learnt": 60, "setup_train": [60, 72], "iter_train": [60, 72], "__iter__": [60, 64, 72], "__next__": [60, 64, 72], "get_train_iter": [60, 72], "setup_ev": [60, 72], "iter_ev": [60, 72], "get_eval_iter": [60, 72], "increment": 60, "eval_count": [60, 72], "eval_dataset": [60, 72], "includes_tim": [60, 61, 72], "blank": 60, "get_datapath": [60, 72], "iterablewrapp": 60, "constructor": [60, 67], "get_eval_rays_per_batch": [60, 72], "get_train_rays_per_batch": [60, 72], "groundtruth": 60, "masks_on_gpu": [60, 72], "images_on_gpu": [60, 72], "expens": [60, 64], "pretti": 60, "jank": 60, "hood": 60, "strung": 60, "create_eval_dataset": [60, 72], "loader": 60, "create_train_dataset": [60, 72], "dataset_typ": [60, 72], "minimal_datapars": [60, 61], "minimaldataparserconfig": [60, 61, 72], "arkitscenes_datapars": [60, 61], "arkitscenesdataparserconfig": [60, 61, 72], "blender_datapars": [60, 61], "instant_ngp_datapars": [60, 61], "instantngpdataparserconfig": [60, 61, 72], "nuscenes_datapars": [60, 61], "nuscenesdataparserconfig": [60, 61, 72], "dnerf_datapars": [60, 61], "dnerfdataparserconfig": [60, 61, 72], "phototourism_datapars": [60, 61], "phototourismdataparserconfig": [60, 61, 72], "dycheck_datapars": [60, 61], "dycheckdataparserconfig": [60, 61, 72], "scannet_datapars": [60, 61], "scannetdataparserconfig": [60, 61, 72], "sdfstudio_datapars": [60, 61], "sdfstudiodataparserconfig": [60, 61, 72], "nerfosr_datapars": [60, 61], "nerfosrdataparserconfig": [60, 61, 72], "sitcoms3d_datapars": [60, 61], "sitcoms3ddataparserconfig": [60, 61, 72], "scannetpp_datapars": 60, "scannetppdataparserconfig": 60, "colmap_datapars": 60, "colmapdataparserconfig": 60, "cache_images_typ": [60, 64, 72], "uint8": [60, 62, 64], "float32": [60, 62, 64], "train_num_times_to_repeat_imag": [60, 72], "eval_num_times_to_repeat_imag": [60, 72], "eval_image_indic": [60, 72], "collate_fn": [60, 64, 72], "nerfstudio_col": [60, 64, 72], "camera_res_scale_factor": [60, 72], "patch_siz": [60, 63, 64, 72], "pixel_sampl": [60, 63, 72], "pixelsamplerconfig": [60, 63, 64, 72], "__post_init__": [60, 72, 82, 84], "extra_map": [60, 64], "collat": [60, 63, 72], "never": [60, 64], "patch": [60, 63, 64], "ram": [60, 62, 64], "infin": [60, 64], "allevi": 60, "base_datapars": 61, "as_dict": [61, 72], "save_dataparser_transform": [61, 72], "transform_poses_to_original_spac": [61, 72], "camera_convent": 61, "convent": 61, "mask_class": [61, 72], "applied_transform": 61, "applied_scal": 61, "3dod": 61, "41069021": 61, "appl": 61, "traj_string_to_matrix": [61, 72], "traj_str": 61, "delimit": 61, "particular": 61, "seven": 61, "radian": 61, "rt": 61, "yenchenlin": 61, "master": 61, "load_blend": 61, "l37": 61, "ply_path": [61, 72], "consum": 61, "rgba": [61, 76, 77], "unus": 61, "ab": [61, 83], "2210": 61, "13445": 61, "process_fram": [61, 72], "frame_nam": 61, "time_id": 61, "mochi": 61, "scene_box_bound": [61, 72], "upscal": [61, 72], "get_focal_length": [61, 72], "rais": 61, "posterv2": 61, "3333": 61, "eval_mod": [61, 72, 93], "eval_interv": [61, 72], "percentag": 61, "nth": 61, "prepar": 61, "minimaldatapars": [61, 72], "nikhil": 61, "lego_test": 61, "minimal_pars": 61, "4dqv": 61, "mpi": 61, "mpg": 61, "nerfosr": [61, 72, 87], "r00tman": 61, "data_loader_split": 61, "255": 61, "stjacob": 61, "use_mask": [61, 72], "get_camera_param": [61, 72], "scene_dir": 61, "mask_color": [61, 72], "load_3d_point": [61, 72], "everywher": 61, "0103": 61, "mnt": 61, "mini": 61, "trainval": 61, "front_left": 61, "front_right": 61, "back_left": 61, "back_right": 61, "mask_dir": [61, 72], "www": 61, "autonom": 61, "cuboid": 61, "process_nuscenes_mask": 61, "percent": 61, "rotation_translation_to_pos": [61, 72], "r_quat": 61, "t_vec": 61, "washington": 61, "edu": 61, "kwea123": 61, "nerf_pl": 61, "nerfw": 61, "nvsmask3d": 61, "scene_exampl": 61, "point_cloud_color": [61, 72], "ply_file_path": [61, 72], "net": 61, "sen": 61, "datapas": 61, "dtu": 61, "scan65": 61, "include_mono_prior": [61, 72], "include_foreground_mask": [61, 72], "skip_every_for_val_split": [61, 72], "auto_ori": 61, "foreground": 61, "longest": [61, 63], "bbox": 61, "human": 61, "tv": 61, "me": 61, "tbbt": 61, "big_living_room": 61, "include_semant": [61, 72], "base_dataset": [62, 64], "cache_compressed_imag": [62, 72], "get_data": [62, 72], "image_idx": [62, 64, 77], "image_typ": [62, 64], "imagedataset": 62, "get_image_float32": [62, 72], "num_channel": 62, "get_image_uint8": [62, 72], "get_metadata": [62, 72], "get_numpy_imag": [62, 72], "sdf_dataset": 62, "sdfdataset": [62, 72], "get_depths_and_norm": [62, 72], "depth_filepath": 62, "normal_filenam": 62, "camtoworld": 62, "semantic_dataset": 62, "semanticdataset": [62, 72], "pairpixelsampl": [63, 72, 74], "pairpixelsamplerconfig": [63, 72], "pixelsampl": [63, 72], "pair": [63, 83], "sample_method": [63, 72], "batch_siz": [63, 64], "num_rays_per_batch": [63, 64, 72], "keep_full_imag": [63, 72], "is_equirectangular": [63, 72], "ignore_mask": [63, 72], "fisheye_crop_radiu": [63, 72], "rejection_sample_mask": [63, 72], "max_num_iter": [63, 72, 78], "reject": [63, 80], "patchpixelsampl": [63, 72], "patchpixelsamplerconfig": [63, 72], "pixel_batch": 63, "set_num_rays_per_batch": [63, 72], "reshap": [63, 72, 82, 84], "correctli": 63, "collate_image_dataset_batch": [63, 72], "collate_image_dataset_batch_list": [63, 72], "intent": 63, "depreci": 63, "viabl": 63, "loop": 63, "rag": 63, "from_param": [63, 72], "rpy": 63, "pt": 63, "boolean": [63, 64, 80], "minimum": [63, 66, 75, 77, 80, 85], "from_camera_pos": [63, 72], "envelop": [63, 74], "get_cent": [63, 72], "get_centered_and_scaled_scene_box": [63, 72], "get_diagonal_length": [63, 72], "diagon": 63, "get_normalized_posit": [63, 72], "1a4d0bad2e90aa65ce997c9d1779518eaed998d5": 64, "read_write_model": 64, "1480": 64, "pycolmap": 64, "colmap_parsing_util": 64, "baseimag": [64, 72], "alia": 64, "cameramodel": [64, 72], "model_id": [64, 72], "model_nam": [64, 72], "num_param": [64, 72], "qvec": 64, "tvec": 64, "camera_id": 64, "point3d_id": 64, "point3d": [64, 72], "image_id": [64, 72], "point2d_idx": [64, 72], "read_cameras_binari": [64, 72], "path_to_model_fil": 64, "src": [64, 74], "cc": 64, "writecamerasbinari": 64, "const": 64, "std": [64, 66], "readcamerasbinari": 64, "read_cameras_text": [64, 72], "writecamerastext": 64, "readcamerastext": 64, "read_images_binari": [64, 72], "readimagesbinari": 64, "writeimagesbinari": 64, "read_images_text": [64, 72], "readimagestext": 64, "writeimagestext": 64, "read_next_byt": [64, 72], "fid": 64, "num_byt": 64, "format_char_sequ": 64, "endian_charact": 64, "byte": 64, "binari": 64, "q": [64, 66], "read_points3d_binari": [64, 72], "readpoints3dbinari": 64, "writepoints3dbinari": 64, "read_points3d_text": [64, 72], "readpoints3dtext": 64, "writepoints3dtext": 64, "write_cameras_binari": [64, 72], "write_cameras_text": [64, 72], "write_images_binari": [64, 72], "write_images_text": [64, 72], "write_next_byt": [64, 72], "pack": [64, 75, 76], "send": 64, "element": [64, 66, 84, 85], "encapsul": 64, "write_points3d_binari": [64, 72], "points3d": 64, "write_points3d_text": [64, 72], "data_util": 64, "get_depth_image_from_path": [64, 72], "filepath": 64, "npy": 64, "get_image_mask_tensor_from_path": [64, 72], "get_semantics_and_mask_tensors_from_path": [64, 72], "mask_indic": 64, "identity_col": [64, 72], "serv": 64, "pickleabl": 64, "pil_to_numpi": [64, 72], "im": 64, "pil": 64, "cachedataload": [64, 72], "num_images_to_sample_from": [64, 72], "num_times_to_repeat_imag": [64, 72], "exclude_batch_keys_from_devic": [64, 72], "num_samples_to_col": 64, "yield": 64, "resampl": 64, "evaldataload": [64, 72], "get_data_from_image_idx": [64, 72], "fixedindicesevaldataload": [64, 72], "image_indic": 64, "imagebatchstream": [64, 72], "sampling_se": 64, "3301": 64, "custom_image_processor": 64, "wrapper": 64, "randindicesevaldataload": [64, 72], "raybatchstream": [64, 72], "staticmethod": 64, "num_image_load_thread": [64, 72], "iterabledataset": 64, "worker": 64, "hasten": 64, "disk": 64, "regener": 64, "partit": 64, "divers": 64, "conserv": 64, "greater": [64, 66], "pixel_sampler_config": [64, 72], "undistort_view": [64, 72], "variable_res_col": [64, 72], "default_col": 64, "cu113": 64, "nerfstudio_collate_err_msg_format": 64, "outer": [64, 72, 73, 74], "exact": 64, "batch_sampl": 64, "v_i": 64, "v_1": 64, "v_2": 64, "namedtupl": 64, "v1_i": 64, "v2_i": 64, "v1_1": 64, "v1_2": 64, "v2_1": 64, "v2_2": 64, "out_dim": [65, 67, 69], "fieldcompon": [65, 66, 67, 69], "build_nn_modul": [65, 66, 68, 69, 72], "in_tensor": [65, 66, 67, 69], "input_dim": [65, 66], "output_dim": [65, 66], "get_tcnn_encoding_config": [66, 68, 72], "tcnn": [66, 69, 71, 77], "ffencod": [66, 68, 72], "basi": [66, 83], "fourier": [66, 83], "expon": 66, "ff": 66, "get_out_dim": [66, 68, 72], "smoothstep": [66, 69, 71, 72], "largest": [66, 69], "fallback": [66, 69], "hashgrid": [66, 69, 71], "growth_factor": 66, "hash_fn": [66, 68, 72], "pytorch_fwd": [66, 68, 69, 72], "ident": [66, 68, 71, 72], "kplanesencod": [66, 68, 72], "num_compon": 66, "init_a": 66, "init_b": 66, "triplaneencod": [66, 68, 72], "elementwis": 66, "integ": 66, "scalar": [66, 74], "wise": 66, "sinusoid": 66, "polyhedronffencod": [66, 68, 72], "basis_shap": [66, 83], "octahedron": [66, 83], "icosahedron": [66, 83], "basis_subdivis": 66, "polyhedron": [66, 83], "nerf360": [66, 83], "tessel": [66, 83], "scalingandoffset": [66, 68, 72], "tensorcpencod": [66, 68, 72], "256": [66, 71, 77], "init_scal": 66, "candecomp": 66, "parfac": 66, "upsample_grid": [66, 68, 72], "upsampl": 66, "underyl": 66, "tensorvmencod": [66, 68, 72], "in_posit": 66, "triplan": 66, "plane_coeff": 66, "stand": 66, "symmetr": [66, 83], "symmetri": [66, 83], "thought": 66, "perpendicular": 66, "decomp": 66, "feature_s": 66, "features": 66, "field_head": [67, 71], "densityfieldhead": [67, 68, 72], "softplu": 67, "field_head_nam": 67, "set_in_dim": [67, 68, 72], "prednormalsfieldhead": [67, 68, 72], "rgbfieldhead": [67, 68, 71, 72], "sigmoid": [67, 76], "shfieldhead": [67, 68, 72], "semanticfieldhead": [67, 68, 72], "num_class": [67, 76], "transientdensityfieldhead": [67, 68, 72], "transient": [67, 71, 77], "transientrgbfieldhead": [67, 68, 72], "uncertaintyfieldhead": [67, 68, 72], "get_tcnn_network_config": [68, 69, 72], "mlpwithhashencod": [68, 69, 72], "activation_to_tcnn_str": [68, 69, 72], "spatialdistort": [68, 70, 71, 72], "perceptron": 69, "num_lay": [69, 71, 72], "layer_width": 69, "skip_connect": [69, 71], "relu": 69, "out_activ": 69, "multilay": 69, "intermedi": 69, "frobeniu": 70, "l_inf": 70, "base_field": 71, "primarili": 71, "compute_norm": 71, "get_norm": [71, 72], "fieldconfig": [71, 72], "get_normalized_direct": [71, 72], "density_field": 71, "hashmlpdensityfield": [71, 72], "hidden_dim": [71, 72, 77], "use_linear": 71, "base_r": [71, 72, 77], "average_init_dens": [71, 77], "hidden": [71, 85, 95], "compound": 71, "nerfacto_field": 71, "nerfactofield": [71, 72], "geo_feat_dim": [71, 72], "2048": [71, 77], "num_layers_color": [71, 72], "num_layers_transi": 71, "hidden_dim_color": [71, 72, 77], "hidden_dim_transi": [71, 77], "appearance_embedding_dim": [71, 72], "transient_embedding_dim": 71, "use_transient_embed": [71, 72, 77], "use_semant": 71, "num_semantic_class": 71, "pass_semantic_gradi": [71, 77], "use_pred_norm": 71, "feat": 71, "hashmap": [71, 77], "nerfw_field": 71, "vanillanerfwfield": [71, 72], "base_mlp_num_lay": 71, "base_mlp_layer_width": 71, "head_mlp_num_lay": 71, "head_mlp_layer_width": 71, "embedding_s": 71, "sdf_field": 71, "learnedvari": [71, 72], "init_v": 71, "varianc": [71, 75, 83], "get_vari": [71, 72], "sdffield": [71, 72], "sdffieldconfig": [71, 72], "return_alpha": 71, "forward_geonetwork": [71, 72], "geo_featur": 71, "geonetwork": 71, "get_alpha": [71, 72], "get_color": [71, 72, 81, 82], "get_sdf": [71, 72], "initialize_geo_lay": [71, 72], "set_cos_anneal_ratio": [71, 72], "use_appearance_embed": [71, 72, 77], "bia": [71, 72], "geometric_init": [71, 72], "inside_outsid": [71, 72], "weight_norm": [71, 72], "use_grid_featur": [71, 72], "divide_factor": [71, 72], "beta_init": [71, 72], "encoding_typ": 71, "period": 71, "tensorf_vm": 71, "use_hash": [71, 72], "init": 71, "revert": 71, "semantic_nerf_field": 71, "tensorf_field": 71, "tensorffield": [71, 72], "feature_encod": 71, "density_encod": 71, "color_encod": 71, "appearance_dim": 71, "use_sh": 71, "sh_level": 71, "bg_color": 71, "use_integrated_encod": 71, "get_outputs_for_camera": [72, 77], "get_outputs_for_camera_ray_bundl": [72, 77], "get_rgba_imag": [72, 77], "load_model": [72, 77], "update_to_step": [72, 77], "collider_param": [72, 77], "enable_collid": [72, 77], "loss_coeffici": [72, 77], "instantngpmodelconfig": [72, 77], "alpha_thr": [72, 75, 77], "cone_angl": [72, 75, 77], "disable_scene_contract": [72, 77], "grid_level": [72, 77], "grid_resolut": [72, 77], "render_step_s": [72, 75, 77], "use_gradient_sc": [72, 77], "ngpmodel": [72, 77], "semanticnerfwmodel": [72, 77], "semanticnerfwmodelconfig": [72, 77], "nerfmodel": [72, 77], "vanillamodelconfig": [72, 77], "enable_temporal_distort": [72, 77], "temporal_distortion_param": [72, 77], "densityfn": [72, 73, 75], "neussampl": [72, 73, 75], "merge_ray_sampl": [72, 73, 75], "rendering_sdf_with_fixed_inv_": [72, 73, 75], "proposalnetworksampl": [72, 73, 75], "set_ann": [72, 73, 75], "step_cb": [72, 73, 75], "spacedsampl": [72, 73, 75], "uniformlindisppiecewisesampl": [72, 73, 75], "volumetricsampl": [72, 73, 75], "get_sigma_fn": [72, 73, 75], "depthlosstyp": [72, 73, 74], "gradientloss": [72, 73, 74], "gradient_loss": [72, 73, 74], "midasmseloss": [72, 73, 74], "scaleandshiftinvariantloss": [72, 73, 74], "prediction_ssi": [72, 73, 74], "depth_loss": [72, 73, 74], "depth_ranking_loss": [72, 73, 74], "distortion_loss": [72, 73, 74], "ds_nerf_depth_loss": [72, 73, 74], "interlevel_loss": [72, 73, 74], "lossfun_distort": [72, 73, 74], "lossfun_out": [72, 73, 74], "monosdf_normal_loss": [72, 73, 74], "nerfstudio_distortion_loss": [72, 73, 74], "orientation_loss": [72, 73, 74], "pred_normal_loss": [72, 73, 74], "ray_samples_to_sdist": [72, 73, 74], "scale_gradients_by_distance_squar": [72, 73, 74], "tv_loss": [72, 73, 74], "urban_radiance_field_depth_loss": [72, 73, 74], "normalsrender": [72, 73, 76], "blend_background": [72, 73, 76], "blend_background_for_loss_comput": [72, 73, 76], "combine_rgb": [72, 73, 76], "get_background_color": [72, 73, 76], "shrender": [72, 73, 76], "semanticrender": [72, 73, 76], "uncertaintyrender": [72, 73, 76], "background_color_override_context": [72, 73, 76], "weight_decai": [72, 78], "max_norm": [72, 78], "load_optim": [72, 78], "load_schedul": [72, 78], "optimizer_scaler_step_al": [72, 78], "optimizer_scaler_step_som": [72, 78], "optimizer_step": [72, 78], "optimizer_step_al": [72, 78], "scheduler_step": [72, 78], "scheduler_step_al": [72, 78], "zero_grad_al": [72, 78], "zero_grad_som": [72, 78], "radamoptimizerconfig": [72, 78], "cosinedecayschedul": [72, 78], "get_schedul": [72, 78], "cosinedecayschedulerconfig": [72, 78], "learning_rate_alpha": [72, 78], "max_step": [72, 78], "warm_up_end": [72, 78], "exponentialdecayschedul": [72, 78], "exponentialdecayschedulerconfig": [72, 78], "lr_final": [72, 78], "lr_pre_warmup": [72, 78], "ramp": [72, 78], "warmup_step": [72, 78], "multistepschedul": [72, 78], "multistepschedulerconfig": [72, 78], "gamma": [72, 78], "mileston": [72, 78], "training_st": [72, 78], "setup_optim": [72, 78], "shutdown": [72, 78], "train_iter": [72, 78], "gradient_accumulation_step": [72, 78], "load_checkpoint": [72, 78], "load_config": [72, 78], "load_dir": [72, 78], "load_step": [72, 78], "log_gradi": [72, 78], "mixed_precis": [72, 78], "save_only_latest_checkpoint": [72, 78], "start_paus": [72, 78], "steps_per_eval_all_imag": [72, 78], "steps_per_eval_batch": [72, 78], "steps_per_eval_imag": [72, 78], "steps_per_sav": [72, 78], "use_grad_scal": [72, 78], "run_callback": [72, 78], "run_callback_at_loc": [72, 78], "grad_scal": [72, 78], "trainingcallbackloc": [72, 78], "registri": 72, "discover_method": [72, 79], "discover_datapars": [72, 79], "math": [72, 82], "columnwise_squared_l2_dist": [72, 82, 83], "compute_3d_gaussian": [72, 82, 83], "conical_frustum_to_gaussian": [72, 82, 83], "cylinder_to_gaussian": [72, 82, 83], "expected_sin": [72, 82, 83], "generate_polyhedron_basi": [72, 82, 83], "intersect_aabb": [72, 82, 83], "intersect_obb": [72, 82, 83], "k_nearest_sklearn": [72, 82, 83], "masked_reduct": [72, 82, 83], "normalized_depth_scale_and_shift": [72, 82, 83], "random_quat_tensor": [72, 82, 83], "safe_norm": [72, 82, 83], "colormapopt": [72, 80, 82], "colormap_max": [72, 80, 82], "colormap_min": [72, 80, 82], "invert": [72, 80, 82], "apply_boolean_colormap": [72, 80, 82], "apply_colormap": [72, 80, 82], "apply_depth_colormap": [72, 80, 82], "apply_float_colormap": [72, 80, 82], "apply_pca_colormap": [72, 80, 82], "broadcast_to": [72, 82, 84], "ndim": [72, 82, 84], "pin_memori": [72, 82, 84], "viewerbuttongroup": [72, 85], "register_click_cb": [72, 85], "set_crop": [72, 85], "set_fov": [72, 85], "unregister_click_cb": [72, 85], "set_opt": [72, 85], "set_hidden": [72, 85], "set_vis": [72, 85], "viewerparamet": [72, 85], "reduction_typ": [74, 83], "invari": 74, "term": 74, "discontinu": 74, "coincid": 74, "1907": 74, "01341": 74, "mult": [74, 83], "reduction_batch_bas": 74, "reduction_image_bas": 74, "mida": 74, "mse": 74, "shot": 74, "cross": 74, "unnorm": 74, "termination_depth": 74, "predicted_depth": 74, "directions_norm": 74, "is_euclidean": 74, "depth_loss_typ": 74, "rendered_depth": 74, "gt_depth": 74, "sparsenerf": 74, "adjac": 74, "weights_list": 74, "ray_samples_list": 74, "mipnerf360": 74, "deng": 74, "kakaobrain": 74, "f61bb8744a5cb4820a4d968fb3bfbed777550f4a": 74, "l515": 74, "train_util": 74, "l133": 74, "l142": 74, "stepfun": 74, "l266": 74, "num_samples_1": 74, "t_env": 74, "w_env": 74, "l136": 74, "l80": 74, "inner": 74, "normal_pr": 74, "normal_gt": 74, "niujinshuchong": 74, "angluar": 74, "eq": 74, "2206": [74, 83], "00665": [74, 83], "mathcal": 74, "iint": 74, "limits_": 74, "d_": 74, "sum_i": 74, "w_i": 74, "s_i": 74, "s_": 74, "viewdir": 74, "ref": 74, "t0_start": 74, "num_samples_0": 74, "t0_end": 74, "t1_start": 74, "t1_end": 74, "l117": 74, "l64": 74, "pred_norm": 74, "unbias": 74, "Near": [74, 75], "scale_gradient_by_distance_squar": 74, "feature_dim": 74, "apchenstu": 74, "4ec894dc1341a2201fe13ae428631b58458f105d": 74, "l139": 74, "urban": 74, "remata": 74, "protocol": 75, "single_jitt": 75, "num_samples_import": 75, "num_samples_outsid": 75, "num_upsample_step": 75, "base_vari": 75, "sdf_fn": 75, "ray_samples_1": 75, "ray_samples_2": 75, "merg": [75, 95], "inv_": 75, "histogram_pad": 75, "update_sch": 75, "initial_sampl": 75, "uniformlindisppiecewis": 75, "spacing_fn": 75, "spacing_fn_inv": 75, "dictat": 75, "invers": 75, "piecewis": [75, 77], "occupancy_grid": 75, "occgridestim": 75, "scene_aabb": 75, "total_sampl": 75, "raymarch": 75, "packed_info": 75, "median": 76, "pred_imag": 76, "pred_accumul": 76, "gt_imag": 76, "bg": 76, "coeff": 76, "base_model": 77, "shouldn": 77, "camera_ray_bundl": 77, "output_nam": 77, "loaded_st": [77, 78], "instant_ngp": 77, "004": 77, "forc": 77, "scaler": [77, 78], "semantic_nerfw": 77, "proposal_update_everi": 77, "proposal_warmup": 77, "num_proposal_iter": 77, "proposal_net_args_list": 77, "proposal_initial_sampl": 77, "orientation_loss_mult": 77, "pred_normal_loss_mult": 77, "predict_norm": 77, "appearance_embed_dim": 77, "semantic_loss_weight": 77, "vanilla_nerf": 77, "adam": 78, "0005": 78, "decai": 78, "radam": 78, "gradscal": 78, "grad": 78, "param_group_nam": 78, "cosin": 78, "lr_init": 78, "lrschedul": 78, "300000": 78, "warmp": 78, "100000": 78, "1000000": 78, "500000": 78, "750000": 78, "900000": 78, "base_pipelin": 78, "experiment_nam": 78, "project_nam": 78, "relative_model_dir": 78, "500": 78, "25000": 78, "experimentconfig": 78, "regimen": 78, "yaml": [78, 88, 94], "paus": 78, "where_to_run": 78, "func": 78, "update_every_num_it": 78, "suppos": 78, "prone": 78, "fairli": 78, "discoveri": 79, "discov": 79, "turbo": 80, "viridi": 80, "magma": 80, "inferno": 80, "cividi": 80, "grai": 80, "true_color": 80, "false_color": 80, "analysi": 80, "colormap_opt": 80, "stabil": 80, "furthest": 80, "pca_mat": 80, "ignore_zero": 80, "principl": 80, "5b4d4f64608ec8077222c52fdf814d40acc10bc1": 83, "geopoli": 83, "sq_dist": 83, "dir_vari": 83, "radius_vari": 83, "x_mean": 83, "x_var": 83, "angular_tessel": 83, "remove_symmetri": 83, "2111": 83, "12077": 83, "base_shap": 83, "op": [83, 84], "redund": 83, "neg": 83, "10000000000": 83, "invalid_valu": 83, "x_min": 83, "y_min": 83, "z_min": 83, "x_max": 83, "y_max": 83, "z_max": 83, "t_max": 83, "t_min": 83, "obb": 83, "extent": 83, "sklearn": 83, "nearestneighbor": 83, "input_tensor": 83, "supplementari": 83, "a2": 83, "solv": 83, "d9619e948bf3d85c6adec1a643f679e2e8e84d4b": 83, "l7": 83, "batch_dim": 83, "divis": 83, "tensor_dataclass": 84, "testtensordataclass": 84, "_shape": 84, "tensordataclasst": 84, "NOT": 84, "deepcopi": 84, "viser_serv": 85, "viserserv": 85, "tstring": 85, "hint": 85, "img_height": 85, "img_width": 85, "client_id": 85, "event_typ": 85, "pointer": 85, "min_point": 85, "max_point": 85, "new_opt": 85, "tvalu": 85, "intorfloat": 85, "picker": 85, "process_data": 86, "download_data": 86, "run_view": 86, "ism": 87, "mill19": 87, "exit": [87, 88, 89, 90, 91, 92, 94], "tsdf": 89, "poisson": 89, "spla": 89, "detector": 91, "matcher": 91, "metashap": 91, "realitycaptur": 91, "odm": 91, "aria": 91, "friend": 93, "your_data": 93, "excit": 95, "famili": 95, "bug": 95, "appreci": 95, "highli": 95, "valuabl": 95, "gladli": 95, "review": 95, "kindli": 95, "lint": 95, "ruff": 95, "pyright": 95, "pytest": 95, "sphinx": 95, "style": 95, "eslint": 95, "hook": 95, "linter": 95, "compli": 95, "pandoc": 95, "header": 95, "build_doc": 95, "autobuild": 95, "incorrect": 95, "_build": 95, "jupyt": 95, "readabl": 95, "output_onli": 95}, "objects": {"nerfstudio.cameras": [[58, 0, 0, "-", "camera_optimizers"], [58, 0, 0, "-", "camera_paths"], [58, 0, 0, "-", "camera_utils"], [58, 0, 0, "-", "cameras"], [58, 0, 0, "-", "lie_groups"], [58, 0, 0, "-", "rays"]], "nerfstudio.cameras.camera_optimizers": [[58, 1, 1, "", "CameraOptimizer"], [58, 1, 1, "", "CameraOptimizerConfig"]], "nerfstudio.cameras.camera_optimizers.CameraOptimizer": [[58, 2, 1, "", "apply_to_camera"], [58, 2, 1, "", "apply_to_raybundle"], [58, 2, 1, "", "forward"], [58, 2, 1, "", "get_correction_matrices"], [58, 2, 1, "", "get_loss_dict"], [58, 2, 1, "", "get_metrics_dict"], [58, 2, 1, "", "get_param_groups"]], "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig": [[58, 3, 1, "", "mode"], [58, 3, 1, "", "optimizer"], [58, 3, 1, "", "rot_l2_penalty"], [58, 3, 1, "", "scheduler"], [58, 3, 1, "", "trans_l2_penalty"]], "nerfstudio.cameras.camera_paths": [[58, 4, 1, "", "get_interpolated_camera_path"], [58, 4, 1, "", "get_path_from_json"], [58, 4, 1, "", "get_spiral_path"]], "nerfstudio.cameras.camera_utils": [[58, 4, 1, "", "auto_orient_and_center_poses"], [58, 4, 1, "", "focus_of_attention"], [58, 4, 1, "", "get_distortion_params"], [58, 4, 1, "", "get_interpolated_k"], [58, 4, 1, "", "get_interpolated_poses"], [58, 4, 1, "", "get_interpolated_poses_many"], [58, 4, 1, "", "get_interpolated_time"], [58, 4, 1, "", "get_ordered_poses_and_k_and_time"], [58, 4, 1, "", "normalize"], [58, 4, 1, "", "normalize_with_norm"], [58, 4, 1, "", "quaternion_from_matrix"], [58, 4, 1, "", "quaternion_matrix"], [58, 4, 1, "", "quaternion_slerp"], [58, 4, 1, "", "radial_and_tangential_undistort"], [58, 4, 1, "", "rotation_matrix_between"], [58, 4, 1, "", "unit_vector"], [58, 4, 1, "", "viewmatrix"]], "nerfstudio.cameras.cameras": [[58, 1, 1, "", "CameraType"], [58, 1, 1, "", "Cameras"]], "nerfstudio.cameras.cameras.Cameras": [[58, 5, 1, "", "device"], [58, 2, 1, "", "generate_rays"], [58, 2, 1, "", "get_image_coords"], [58, 2, 1, "", "get_intrinsics_matrices"], [58, 5, 1, "", "image_height"], [58, 5, 1, "", "image_width"], [58, 5, 1, "", "is_jagged"], [58, 2, 1, "", "rescale_output_resolution"], [58, 2, 1, "", "to_json"]], "nerfstudio.cameras.lie_groups": [[58, 4, 1, "", "exp_map_SE3"], [58, 4, 1, "", "exp_map_SO3xR3"]], "nerfstudio.cameras.rays": [[58, 1, 1, "", "Frustums"], [58, 1, 1, "", "RayBundle"], [58, 1, 1, "", "RaySamples"]], "nerfstudio.cameras.rays.Frustums": [[58, 3, 1, "", "directions"], [58, 3, 1, "", "ends"], [58, 2, 1, "", "get_gaussian_blob"], [58, 2, 1, "", "get_mock_frustum"], [58, 2, 1, "", "get_positions"], [58, 2, 1, "", "get_start_positions"], [58, 3, 1, "", "offsets"], [58, 3, 1, "", "origins"], [58, 3, 1, "", "pixel_area"], [58, 2, 1, "", "set_offsets"], [58, 3, 1, "", "starts"]], "nerfstudio.cameras.rays.RayBundle": [[58, 3, 1, "", "camera_indices"], [58, 3, 1, "", "directions"], [58, 3, 1, "", "fars"], [58, 2, 1, "", "get_ray_samples"], [58, 2, 1, "", "get_row_major_sliced_ray_bundle"], [58, 3, 1, "", "metadata"], [58, 3, 1, "", "nears"], [58, 3, 1, "", "origins"], [58, 3, 1, "", "pixel_area"], [58, 2, 1, "", "sample"], [58, 2, 1, "", "set_camera_indices"], [58, 3, 1, "", "times"]], "nerfstudio.cameras.rays.RaySamples": [[58, 3, 1, "", "camera_indices"], [58, 3, 1, "", "deltas"], [58, 3, 1, "", "frustums"], [58, 2, 1, "", "get_weights"], [58, 2, 1, "", "get_weights_and_transmittance_from_alphas"], [58, 3, 1, "", "metadata"], [58, 3, 1, "", "spacing_ends"], [58, 3, 1, "", "spacing_starts"], [58, 3, 1, "", "spacing_to_euclidean_fn"], [58, 3, 1, "", "times"]], "nerfstudio.configs": [[59, 0, 0, "-", "base_config"]], "nerfstudio.configs.base_config": [[59, 1, 1, "", "InstantiateConfig"], [59, 1, 1, "", "LocalWriterConfig"], [59, 1, 1, "", "LoggingConfig"], [59, 1, 1, "", "MachineConfig"], [59, 1, 1, "", "PrintableConfig"], [59, 1, 1, "", "ViewerConfig"]], "nerfstudio.configs.base_config.InstantiateConfig": [[59, 2, 1, "", "setup"]], "nerfstudio.configs.base_config.LocalWriterConfig": [[59, 3, 1, "", "enable"], [59, 3, 1, "", "max_log_size"], [59, 2, 1, "", "setup"], [59, 3, 1, "", "stats_to_track"]], "nerfstudio.configs.base_config.LoggingConfig": [[59, 3, 1, "", "local_writer"], [59, 3, 1, "", "max_buffer_size"], [59, 3, 1, "", "profiler"], [59, 3, 1, "", "relative_log_dir"], [59, 3, 1, "", "steps_per_log"]], "nerfstudio.configs.base_config.MachineConfig": [[59, 3, 1, "", "device_type"], [59, 3, 1, "", "dist_url"], [59, 3, 1, "", "machine_rank"], [59, 3, 1, "", "num_devices"], [59, 3, 1, "", "num_machines"], [59, 3, 1, "", "seed"]], "nerfstudio.configs.base_config.ViewerConfig": [[59, 3, 1, "", "camera_frustum_scale"], [59, 3, 1, "", "default_composite_depth"], [59, 3, 1, "", "image_format"], [59, 3, 1, "", "jpeg_quality"], [59, 3, 1, "", "make_share_url"], [59, 3, 1, "", "max_num_display_images"], [59, 3, 1, "", "num_rays_per_chunk"], [59, 3, 1, "", "quit_on_train_completion"], [59, 3, 1, "", "relative_log_filename"], [59, 3, 1, "", "websocket_host"], [59, 3, 1, "", "websocket_port"], [59, 3, 1, "", "websocket_port_default"]], "nerfstudio.data.datamanagers": [[60, 0, 0, "-", "base_datamanager"]], "nerfstudio.data.datamanagers.base_datamanager": [[60, 1, 1, "", "DataManager"], [60, 1, 1, "", "DataManagerConfig"], [60, 1, 1, "", "VanillaDataManager"], [60, 1, 1, "", "VanillaDataManagerConfig"]], "nerfstudio.data.datamanagers.base_datamanager.DataManager": [[60, 3, 1, "", "eval_count"], [60, 3, 1, "", "eval_dataset"], [60, 2, 1, "", "forward"], [60, 2, 1, "", "get_datapath"], [60, 2, 1, "", "get_eval_iterable"], [60, 2, 1, "", "get_eval_rays_per_batch"], [60, 2, 1, "", "get_param_groups"], [60, 2, 1, "", "get_train_iterable"], [60, 2, 1, "", "get_train_rays_per_batch"], [60, 2, 1, "", "get_training_callbacks"], [60, 3, 1, "", "includes_time"], [60, 2, 1, "", "iter_eval"], [60, 2, 1, "", "iter_train"], [60, 2, 1, "", "next_eval"], [60, 2, 1, "", "next_eval_image"], [60, 2, 1, "", "next_train"], [60, 2, 1, "", "setup_eval"], [60, 2, 1, "", "setup_train"], [60, 3, 1, "", "train_count"], [60, 3, 1, "", "train_dataset"]], "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig": [[60, 3, 1, "", "data"], [60, 3, 1, "", "images_on_gpu"], [60, 3, 1, "", "masks_on_gpu"]], "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager": [[60, 2, 1, "", "create_eval_dataset"], [60, 2, 1, "", "create_train_dataset"], [60, 5, 1, "", "dataset_type"], [60, 2, 1, "", "get_datapath"], [60, 2, 1, "", "get_eval_rays_per_batch"], [60, 2, 1, "", "get_param_groups"], [60, 2, 1, "", "get_train_rays_per_batch"], [60, 2, 1, "", "next_eval"], [60, 2, 1, "", "next_eval_image"], [60, 2, 1, "", "next_train"], [60, 2, 1, "", "setup_eval"], [60, 2, 1, "", "setup_train"]], "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig": [[60, 2, 1, "", "__post_init__"], [60, 3, 1, "", "cache_images_type"], [60, 3, 1, "", "camera_optimizer"], [60, 3, 1, "", "camera_res_scale_factor"], [60, 2, 1, "", "collate_fn"], [60, 3, 1, "", "dataparser"], [60, 3, 1, "", "eval_image_indices"], [60, 3, 1, "", "eval_num_images_to_sample_from"], [60, 3, 1, "", "eval_num_rays_per_batch"], [60, 3, 1, "", "eval_num_times_to_repeat_images"], [60, 3, 1, "", "patch_size"], [60, 3, 1, "", "pixel_sampler"], [60, 3, 1, "", "train_num_images_to_sample_from"], [60, 3, 1, "", "train_num_rays_per_batch"], [60, 3, 1, "", "train_num_times_to_repeat_images"]], "nerfstudio.data.dataparsers": [[61, 0, 0, "-", "arkitscenes_dataparser"], [61, 0, 0, "-", "base_dataparser"], [61, 0, 0, "-", "blender_dataparser"], [61, 0, 0, "-", "dnerf_dataparser"], [61, 0, 0, "-", "dycheck_dataparser"], [61, 0, 0, "-", "instant_ngp_dataparser"], [61, 0, 0, "-", "minimal_dataparser"], [61, 0, 0, "-", "nerfosr_dataparser"], [61, 0, 0, "-", "nerfstudio_dataparser"], [61, 0, 0, "-", "nuscenes_dataparser"], [61, 0, 0, "-", "phototourism_dataparser"], [61, 0, 0, "-", "scannet_dataparser"], [61, 0, 0, "-", "sdfstudio_dataparser"], [61, 0, 0, "-", "sitcoms3d_dataparser"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser": [[61, 1, 1, "", "ARKitScenes"], [61, 1, 1, "", "ARKitScenesDataParserConfig"], [61, 4, 1, "", "traj_string_to_matrix"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig": [[61, 3, 1, "", "auto_scale_poses"], [61, 3, 1, "", "center_method"], [61, 3, 1, "", "data"], [61, 3, 1, "", "depth_unit_scale_factor"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.base_dataparser": [[61, 1, 1, "", "DataParser"], [61, 1, 1, "", "DataParserConfig"], [61, 1, 1, "", "DataparserOutputs"], [61, 1, 1, "", "Semantics"], [61, 4, 1, "", "transform_poses_to_original_space"]], "nerfstudio.data.dataparsers.base_dataparser.DataParser": [[61, 3, 1, "", "config"], [61, 2, 1, "", "get_dataparser_outputs"], [61, 3, 1, "", "includes_time"]], "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig": [[61, 3, 1, "", "data"]], "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs": [[61, 3, 1, "", "alpha_color"], [61, 2, 1, "", "as_dict"], [61, 3, 1, "", "cameras"], [61, 3, 1, "", "dataparser_scale"], [61, 3, 1, "", "dataparser_transform"], [61, 3, 1, "", "image_filenames"], [61, 3, 1, "", "mask_filenames"], [61, 3, 1, "", "metadata"], [61, 2, 1, "", "save_dataparser_transform"], [61, 3, 1, "", "scene_box"], [61, 2, 1, "", "transform_poses_to_original_space"]], "nerfstudio.data.dataparsers.base_dataparser.Semantics": [[61, 3, 1, "", "classes"], [61, 3, 1, "", "colors"], [61, 3, 1, "", "filenames"], [61, 3, 1, "", "mask_classes"]], "nerfstudio.data.dataparsers.blender_dataparser": [[61, 1, 1, "", "Blender"], [61, 1, 1, "", "BlenderDataParserConfig"]], "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig": [[61, 3, 1, "", "alpha_color"], [61, 3, 1, "", "data"], [61, 3, 1, "", "ply_path"], [61, 3, 1, "", "scale_factor"]], "nerfstudio.data.dataparsers.dnerf_dataparser": [[61, 1, 1, "", "DNeRF"], [61, 1, 1, "", "DNeRFDataParserConfig"]], "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig": [[61, 3, 1, "", "alpha_color"], [61, 3, 1, "", "data"], [61, 3, 1, "", "scale_factor"]], "nerfstudio.data.dataparsers.dycheck_dataparser": [[61, 1, 1, "", "Dycheck"], [61, 1, 1, "", "DycheckDataParserConfig"], [61, 4, 1, "", "downscale"], [61, 4, 1, "", "rescale"], [61, 4, 1, "", "upscale"]], "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck": [[61, 2, 1, "", "process_frames"]], "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig": [[61, 3, 1, "", "alpha_color"], [61, 3, 1, "", "data"], [61, 3, 1, "", "downscale_factor"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene_box_bound"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser": [[61, 1, 1, "", "InstantNGP"], [61, 1, 1, "", "InstantNGPDataParserConfig"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP": [[61, 2, 1, "", "get_focal_lengths"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig": [[61, 3, 1, "", "data"], [61, 3, 1, "", "eval_interval"], [61, 3, 1, "", "eval_mode"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.minimal_dataparser": [[61, 1, 1, "", "MinimalDataParser"], [61, 1, 1, "", "MinimalDataParserConfig"]], "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig": [[61, 3, 1, "", "data"]], "nerfstudio.data.dataparsers.nerfosr_dataparser": [[61, 1, 1, "", "NeRFOSR"], [61, 1, 1, "", "NeRFOSRDataParserConfig"], [61, 4, 1, "", "get_camera_params"]], "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig": [[61, 3, 1, "", "auto_scale_poses"], [61, 3, 1, "", "center_method"], [61, 3, 1, "", "data"], [61, 3, 1, "", "orientation_method"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "use_masks"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser": [[61, 1, 1, "", "Nerfstudio"], [61, 1, 1, "", "NerfstudioDataParserConfig"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig": [[61, 3, 1, "", "auto_scale_poses"], [61, 3, 1, "", "center_method"], [61, 3, 1, "", "data"], [61, 3, 1, "", "depth_unit_scale_factor"], [61, 3, 1, "", "downscale_factor"], [61, 3, 1, "", "eval_interval"], [61, 3, 1, "", "eval_mode"], [61, 3, 1, "", "load_3D_points"], [61, 3, 1, "", "mask_color"], [61, 3, 1, "", "orientation_method"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.nuscenes_dataparser": [[61, 1, 1, "", "NuScenes"], [61, 1, 1, "", "NuScenesDataParserConfig"], [61, 4, 1, "", "rotation_translation_to_pose"]], "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig": [[61, 3, 1, "", "cameras"], [61, 3, 1, "", "data"], [61, 3, 1, "", "data_dir"], [61, 3, 1, "", "mask_dir"], [61, 3, 1, "", "train_split_fraction"], [61, 3, 1, "", "verbose"], [61, 3, 1, "", "version"]], "nerfstudio.data.dataparsers.phototourism_dataparser": [[61, 1, 1, "", "Phototourism"], [61, 1, 1, "", "PhototourismDataParserConfig"]], "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig": [[61, 3, 1, "", "alpha_color"], [61, 3, 1, "", "auto_scale_poses"], [61, 3, 1, "", "center_method"], [61, 3, 1, "", "data"], [61, 3, 1, "", "orientation_method"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.scannet_dataparser": [[61, 1, 1, "", "ScanNet"], [61, 1, 1, "", "ScanNetDataParserConfig"]], "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig": [[61, 3, 1, "", "auto_scale_poses"], [61, 3, 1, "", "center_method"], [61, 3, 1, "", "data"], [61, 3, 1, "", "depth_unit_scale_factor"], [61, 3, 1, "", "load_3D_points"], [61, 3, 1, "", "ply_file_path"], [61, 3, 1, "", "point_cloud_color"], [61, 3, 1, "", "scale_factor"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "train_split_fraction"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser": [[61, 1, 1, "", "SDFStudio"], [61, 1, 1, "", "SDFStudioDataParserConfig"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig": [[61, 3, 1, "", "data"], [61, 3, 1, "", "depth_unit_scale_factor"], [61, 3, 1, "", "include_foreground_mask"], [61, 3, 1, "", "include_mono_prior"], [61, 3, 1, "", "scene_scale"], [61, 3, 1, "", "skip_every_for_val_split"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser": [[61, 1, 1, "", "Sitcoms3D"], [61, 1, 1, "", "Sitcoms3DDataParserConfig"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig": [[61, 3, 1, "", "data"], [61, 3, 1, "", "include_semantics"], [61, 3, 1, "", "scene_scale"]], "nerfstudio.data.datasets": [[62, 0, 0, "-", "base_dataset"], [62, 0, 0, "-", "sdf_dataset"], [62, 0, 0, "-", "semantic_dataset"]], "nerfstudio.data.datasets.base_dataset": [[62, 1, 1, "", "InputDataset"]], "nerfstudio.data.datasets.base_dataset.InputDataset": [[62, 3, 1, "", "cache_compressed_images"], [62, 2, 1, "", "get_data"], [62, 2, 1, "", "get_image_float32"], [62, 2, 1, "", "get_image_uint8"], [62, 2, 1, "", "get_metadata"], [62, 2, 1, "", "get_numpy_image"], [62, 5, 1, "", "image_filenames"]], "nerfstudio.data.datasets.sdf_dataset": [[62, 1, 1, "", "SDFDataset"]], "nerfstudio.data.datasets.sdf_dataset.SDFDataset": [[62, 2, 1, "", "get_depths_and_normals"], [62, 2, 1, "", "get_metadata"]], "nerfstudio.data.datasets.semantic_dataset": [[62, 1, 1, "", "SemanticDataset"]], "nerfstudio.data.datasets.semantic_dataset.SemanticDataset": [[62, 2, 1, "", "get_metadata"]], "nerfstudio.data": [[63, 0, 0, "-", "pixel_samplers"], [63, 0, 0, "-", "scene_box"]], "nerfstudio.data.pixel_samplers": [[63, 1, 1, "", "PairPixelSampler"], [63, 1, 1, "", "PairPixelSamplerConfig"], [63, 1, 1, "", "PatchPixelSampler"], [63, 1, 1, "", "PatchPixelSamplerConfig"], [63, 1, 1, "", "PixelSampler"], [63, 1, 1, "", "PixelSamplerConfig"]], "nerfstudio.data.pixel_samplers.PairPixelSampler": [[63, 2, 1, "", "sample_method"]], "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig": [[63, 3, 1, "", "max_num_iterations"], [63, 3, 1, "", "radius"], [63, 3, 1, "", "rejection_sample_mask"]], "nerfstudio.data.pixel_samplers.PatchPixelSampler": [[63, 2, 1, "", "sample_method"], [63, 2, 1, "", "set_num_rays_per_batch"]], "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig": [[63, 3, 1, "", "max_num_iterations"], [63, 3, 1, "", "patch_size"], [63, 3, 1, "", "rejection_sample_mask"]], "nerfstudio.data.pixel_samplers.PixelSampler": [[63, 2, 1, "", "collate_image_dataset_batch"], [63, 2, 1, "", "collate_image_dataset_batch_list"], [63, 2, 1, "", "rejection_sample_mask"], [63, 2, 1, "", "sample"], [63, 2, 1, "", "sample_method"], [63, 2, 1, "", "set_num_rays_per_batch"]], "nerfstudio.data.pixel_samplers.PixelSamplerConfig": [[63, 3, 1, "", "fisheye_crop_radius"], [63, 3, 1, "", "ignore_mask"], [63, 3, 1, "", "is_equirectangular"], [63, 3, 1, "", "keep_full_image"], [63, 3, 1, "", "max_num_iterations"], [63, 3, 1, "", "num_rays_per_batch"], [63, 3, 1, "", "rejection_sample_mask"]], "nerfstudio.data.scene_box": [[63, 1, 1, "", "OrientedBox"], [63, 1, 1, "", "SceneBox"]], "nerfstudio.data.scene_box.OrientedBox": [[63, 3, 1, "", "R"], [63, 3, 1, "", "S"], [63, 3, 1, "", "T"], [63, 2, 1, "", "from_params"], [63, 2, 1, "", "within"]], "nerfstudio.data.scene_box.SceneBox": [[63, 3, 1, "", "aabb"], [63, 2, 1, "", "from_camera_poses"], [63, 2, 1, "", "get_center"], [63, 2, 1, "", "get_centered_and_scaled_scene_box"], [63, 2, 1, "", "get_diagonal_length"], [63, 2, 1, "", "get_normalized_positions"], [63, 2, 1, "", "within"]], "nerfstudio.data.utils": [[64, 0, 0, "-", "colmap_parsing_utils"], [64, 0, 0, "-", "data_utils"], [64, 0, 0, "-", "dataloaders"], [64, 0, 0, "-", "nerfstudio_collate"]], "nerfstudio.data.utils.colmap_parsing_utils": [[64, 3, 1, "", "BaseImage"], [64, 1, 1, "", "Camera"], [64, 1, 1, "", "CameraModel"], [64, 1, 1, "", "Image"], [64, 1, 1, "", "Point3D"], [64, 4, 1, "", "read_cameras_binary"], [64, 4, 1, "", "read_cameras_text"], [64, 4, 1, "", "read_images_binary"], [64, 4, 1, "", "read_images_text"], [64, 4, 1, "", "read_next_bytes"], [64, 4, 1, "", "read_points3D_binary"], [64, 4, 1, "", "read_points3D_text"], [64, 4, 1, "", "write_cameras_binary"], [64, 4, 1, "", "write_cameras_text"], [64, 4, 1, "", "write_images_binary"], [64, 4, 1, "", "write_images_text"], [64, 4, 1, "", "write_next_bytes"], [64, 4, 1, "", "write_points3D_binary"], [64, 4, 1, "", "write_points3D_text"]], "nerfstudio.data.utils.colmap_parsing_utils.Camera": [[64, 3, 1, "", "height"], [64, 3, 1, "", "id"], [64, 3, 1, "", "model"], [64, 3, 1, "", "params"], [64, 3, 1, "", "width"]], "nerfstudio.data.utils.colmap_parsing_utils.CameraModel": [[64, 3, 1, "", "model_id"], [64, 3, 1, "", "model_name"], [64, 3, 1, "", "num_params"]], "nerfstudio.data.utils.colmap_parsing_utils.Point3D": [[64, 3, 1, "", "error"], [64, 3, 1, "", "id"], [64, 3, 1, "", "image_ids"], [64, 3, 1, "", "point2D_idxs"], [64, 3, 1, "", "rgb"], [64, 3, 1, "", "xyz"]], "nerfstudio.data.utils.data_utils": [[64, 4, 1, "", "get_depth_image_from_path"], [64, 4, 1, "", "get_image_mask_tensor_from_path"], [64, 4, 1, "", "get_semantics_and_mask_tensors_from_path"], [64, 4, 1, "", "identity_collate"], [64, 4, 1, "", "pil_to_numpy"]], "nerfstudio.data.utils.dataloaders": [[64, 1, 1, "", "CacheDataloader"], [64, 1, 1, "", "EvalDataloader"], [64, 1, 1, "", "FixedIndicesEvalDataloader"], [64, 1, 1, "", "ImageBatchStream"], [64, 1, 1, "", "RandIndicesEvalDataloader"], [64, 1, 1, "", "RayBatchStream"], [64, 4, 1, "", "undistort_view"], [64, 4, 1, "", "variable_res_collate"]], "nerfstudio.data.utils.dataloaders.EvalDataloader": [[64, 2, 1, "", "__iter__"], [64, 2, 1, "", "__next__"], [64, 2, 1, "", "get_camera"], [64, 2, 1, "", "get_data_from_image_idx"]], "nerfstudio.data.utils.dataloaders.RayBatchStream": [[64, 2, 1, "", "__iter__"], [64, 3, 1, "", "collate_fn"], [64, 3, 1, "", "device"], [64, 3, 1, "", "exclude_batch_keys_from_device"], [64, 3, 1, "", "load_from_disk"], [64, 3, 1, "", "num_image_load_threads"], [64, 3, 1, "", "num_images_to_sample_from"], [64, 3, 1, "", "num_rays_per_batch"], [64, 3, 1, "", "num_times_to_repeat_images"], [64, 3, 1, "", "patch_size"], [64, 3, 1, "", "pixel_sampler_config"], [64, 3, 1, "", "ray_generator"]], "nerfstudio.data.utils.nerfstudio_collate": [[64, 4, 1, "", "nerfstudio_collate"]], "nerfstudio.engine": [[78, 0, 0, "-", "callbacks"], [78, 0, 0, "-", "optimizers"], [78, 0, 0, "-", "schedulers"], [78, 0, 0, "-", "trainer"]], "nerfstudio.engine.callbacks": [[78, 1, 1, "", "TrainingCallback"], [78, 1, 1, "", "TrainingCallbackAttributes"], [78, 1, 1, "", "TrainingCallbackLocation"]], "nerfstudio.engine.callbacks.TrainingCallback": [[78, 2, 1, "", "run_callback"], [78, 2, 1, "", "run_callback_at_location"]], "nerfstudio.engine.callbacks.TrainingCallbackAttributes": [[78, 3, 1, "", "grad_scaler"], [78, 3, 1, "", "optimizers"], [78, 3, 1, "", "pipeline"], [78, 3, 1, "", "trainer"]], "nerfstudio.engine.optimizers": [[78, 1, 1, "", "AdamOptimizerConfig"], [78, 1, 1, "", "OptimizerConfig"], [78, 1, 1, "", "Optimizers"], [78, 1, 1, "", "RAdamOptimizerConfig"]], "nerfstudio.engine.optimizers.AdamOptimizerConfig": [[78, 3, 1, "", "weight_decay"]], "nerfstudio.engine.optimizers.OptimizerConfig": [[78, 3, 1, "", "eps"], [78, 3, 1, "", "lr"], [78, 3, 1, "", "max_norm"], [78, 2, 1, "", "setup"]], "nerfstudio.engine.optimizers.Optimizers": [[78, 2, 1, "", "load_optimizers"], [78, 2, 1, "", "load_schedulers"], [78, 2, 1, "", "optimizer_scaler_step_all"], [78, 2, 1, "", "optimizer_scaler_step_some"], [78, 2, 1, "", "optimizer_step"], [78, 2, 1, "", "optimizer_step_all"], [78, 2, 1, "", "scheduler_step"], [78, 2, 1, "", "scheduler_step_all"], [78, 2, 1, "", "zero_grad_all"], [78, 2, 1, "", "zero_grad_some"]], "nerfstudio.engine.optimizers.RAdamOptimizerConfig": [[78, 3, 1, "", "weight_decay"]], "nerfstudio.engine.schedulers": [[78, 1, 1, "", "CosineDecayScheduler"], [78, 1, 1, "", "CosineDecaySchedulerConfig"], [78, 1, 1, "", "ExponentialDecayScheduler"], [78, 1, 1, "", "ExponentialDecaySchedulerConfig"], [78, 1, 1, "", "MultiStepScheduler"], [78, 1, 1, "", "MultiStepSchedulerConfig"], [78, 1, 1, "", "Scheduler"], [78, 1, 1, "", "SchedulerConfig"]], "nerfstudio.engine.schedulers.CosineDecayScheduler": [[78, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig": [[78, 3, 1, "", "learning_rate_alpha"], [78, 3, 1, "", "max_steps"], [78, 3, 1, "", "warm_up_end"]], "nerfstudio.engine.schedulers.ExponentialDecayScheduler": [[78, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig": [[78, 3, 1, "", "lr_final"], [78, 3, 1, "", "lr_pre_warmup"], [78, 3, 1, "", "max_steps"], [78, 3, 1, "", "ramp"], [78, 3, 1, "", "warmup_steps"]], "nerfstudio.engine.schedulers.MultiStepScheduler": [[78, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.schedulers.MultiStepSchedulerConfig": [[78, 3, 1, "", "gamma"], [78, 3, 1, "", "max_steps"], [78, 3, 1, "", "milestones"]], "nerfstudio.engine.schedulers.Scheduler": [[78, 2, 1, "", "get_scheduler"]], "nerfstudio.engine.trainer": [[78, 1, 1, "", "Trainer"], [78, 1, 1, "", "TrainerConfig"]], "nerfstudio.engine.trainer.Trainer": [[78, 3, 1, "", "callbacks"], [78, 3, 1, "", "config"], [78, 3, 1, "", "device"], [78, 3, 1, "", "local_rank"], [78, 3, 1, "", "optimizers"], [78, 3, 1, "", "pipeline"], [78, 2, 1, "", "setup"], [78, 2, 1, "", "setup_optimizers"], [78, 2, 1, "", "shutdown"], [78, 2, 1, "", "train"], [78, 2, 1, "", "train_iteration"], [78, 3, 1, "", "training_state"], [78, 3, 1, "", "world_size"]], "nerfstudio.engine.trainer.TrainerConfig": [[78, 3, 1, "", "gradient_accumulation_steps"], [78, 3, 1, "", "load_checkpoint"], [78, 3, 1, "", "load_config"], [78, 3, 1, "", "load_dir"], [78, 3, 1, "", "load_step"], [78, 3, 1, "", "log_gradients"], [78, 3, 1, "", "max_num_iterations"], [78, 3, 1, "", "mixed_precision"], [78, 3, 1, "", "save_only_latest_checkpoint"], [78, 3, 1, "", "start_paused"], [78, 3, 1, "", "steps_per_eval_all_images"], [78, 3, 1, "", "steps_per_eval_batch"], [78, 3, 1, "", "steps_per_eval_image"], [78, 3, 1, "", "steps_per_save"], [78, 3, 1, "", "use_grad_scaler"]], "nerfstudio.field_components": [[65, 0, 0, "-", "embedding"], [66, 0, 0, "-", "encodings"], [67, 0, 0, "-", "field_heads"], [69, 0, 0, "-", "mlp"], [70, 0, 0, "-", "spatial_distortions"]], "nerfstudio.field_components.embedding": [[65, 1, 1, "", "Embedding"]], "nerfstudio.field_components.embedding.Embedding": [[65, 2, 1, "", "build_nn_modules"], [65, 2, 1, "", "forward"], [65, 2, 1, "", "mean"]], "nerfstudio.field_components.encodings": [[66, 1, 1, "", "Encoding"], [66, 1, 1, "", "FFEncoding"], [66, 1, 1, "", "HashEncoding"], [66, 1, 1, "", "Identity"], [66, 1, 1, "", "KPlanesEncoding"], [66, 1, 1, "", "NeRFEncoding"], [66, 1, 1, "", "PolyhedronFFEncoding"], [66, 1, 1, "", "RFFEncoding"], [66, 1, 1, "", "SHEncoding"], [66, 1, 1, "", "ScalingAndOffset"], [66, 1, 1, "", "TensorCPEncoding"], [66, 1, 1, "", "TensorVMEncoding"], [66, 1, 1, "", "TriplaneEncoding"]], "nerfstudio.field_components.encodings.Encoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_tcnn_encoding_config"]], "nerfstudio.field_components.encodings.FFEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.HashEncoding": [[66, 2, 1, "", "build_nn_modules"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "get_tcnn_encoding_config"], [66, 2, 1, "", "hash_fn"], [66, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.Identity": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.KPlanesEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.NeRFEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "get_tcnn_encoding_config"], [66, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.SHEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "get_tcnn_encoding_config"], [66, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.encodings.ScalingAndOffset": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"]], "nerfstudio.field_components.encodings.TensorCPEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.encodings.TensorVMEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.encodings.TriplaneEncoding": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "get_out_dim"], [66, 2, 1, "", "upsample_grid"]], "nerfstudio.field_components.field_heads": [[67, 1, 1, "", "DensityFieldHead"], [67, 1, 1, "", "FieldHead"], [67, 1, 1, "", "FieldHeadNames"], [67, 1, 1, "", "PredNormalsFieldHead"], [67, 1, 1, "", "RGBFieldHead"], [67, 1, 1, "", "SHFieldHead"], [67, 1, 1, "", "SemanticFieldHead"], [67, 1, 1, "", "TransientDensityFieldHead"], [67, 1, 1, "", "TransientRGBFieldHead"], [67, 1, 1, "", "UncertaintyFieldHead"]], "nerfstudio.field_components.field_heads.FieldHead": [[67, 2, 1, "", "forward"], [67, 2, 1, "", "set_in_dim"]], "nerfstudio.field_components.field_heads.PredNormalsFieldHead": [[67, 2, 1, "", "forward"]], "nerfstudio.field_components.mlp": [[69, 1, 1, "", "MLP"], [69, 1, 1, "", "MLPWithHashEncoding"], [69, 4, 1, "", "activation_to_tcnn_string"]], "nerfstudio.field_components.mlp.MLP": [[69, 2, 1, "", "build_nn_modules"], [69, 2, 1, "", "forward"], [69, 2, 1, "", "get_tcnn_network_config"], [69, 2, 1, "", "pytorch_fwd"]], "nerfstudio.field_components.mlp.MLPWithHashEncoding": [[69, 2, 1, "", "build_nn_modules"], [69, 2, 1, "", "forward"]], "nerfstudio.field_components.spatial_distortions": [[70, 1, 1, "", "SceneContraction"], [70, 1, 1, "", "SpatialDistortion"]], "nerfstudio.field_components.spatial_distortions.SceneContraction": [[70, 2, 1, "", "forward"]], "nerfstudio.field_components.spatial_distortions.SpatialDistortion": [[70, 2, 1, "", "forward"]], "nerfstudio.fields": [[71, 0, 0, "-", "base_field"], [71, 0, 0, "-", "density_fields"], [71, 0, 0, "-", "nerfacto_field"], [71, 0, 0, "-", "nerfw_field"], [71, 0, 0, "-", "sdf_field"], [71, 0, 0, "-", "semantic_nerf_field"], [71, 0, 0, "-", "tensorf_field"], [71, 0, 0, "-", "vanilla_nerf_field"]], "nerfstudio.fields.base_field": [[71, 1, 1, "", "Field"], [71, 1, 1, "", "FieldConfig"], [71, 4, 1, "", "get_normalized_directions"]], "nerfstudio.fields.base_field.Field": [[71, 2, 1, "", "density_fn"], [71, 2, 1, "", "forward"], [71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_normals"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.density_fields": [[71, 1, 1, "", "HashMLPDensityField"]], "nerfstudio.fields.density_fields.HashMLPDensityField": [[71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.nerfacto_field": [[71, 1, 1, "", "NerfactoField"]], "nerfstudio.fields.nerfacto_field.NerfactoField": [[71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.nerfw_field": [[71, 1, 1, "", "VanillaNerfWField"]], "nerfstudio.fields.nerfw_field.VanillaNerfWField": [[71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.sdf_field": [[71, 1, 1, "", "LearnedVariance"], [71, 1, 1, "", "SDFField"], [71, 1, 1, "", "SDFFieldConfig"]], "nerfstudio.fields.sdf_field.LearnedVariance": [[71, 2, 1, "", "forward"], [71, 2, 1, "", "get_variance"]], "nerfstudio.fields.sdf_field.SDFField": [[71, 2, 1, "", "forward"], [71, 2, 1, "", "forward_geonetwork"], [71, 2, 1, "", "get_alpha"], [71, 2, 1, "", "get_colors"], [71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"], [71, 2, 1, "", "get_sdf"], [71, 2, 1, "", "initialize_geo_layers"], [71, 2, 1, "", "set_cos_anneal_ratio"]], "nerfstudio.fields.sdf_field.SDFFieldConfig": [[71, 3, 1, "", "appearance_embedding_dim"], [71, 3, 1, "", "base_res"], [71, 3, 1, "", "beta_init"], [71, 3, 1, "", "bias"], [71, 3, 1, "", "divide_factor"], [71, 3, 1, "", "features_per_level"], [71, 3, 1, "", "geo_feat_dim"], [71, 3, 1, "", "geometric_init"], [71, 3, 1, "", "hidden_dim"], [71, 3, 1, "", "hidden_dim_color"], [71, 3, 1, "", "inside_outside"], [71, 3, 1, "", "log2_hashmap_size"], [71, 3, 1, "", "max_res"], [71, 3, 1, "", "num_layers"], [71, 3, 1, "", "num_layers_color"], [71, 3, 1, "", "num_levels"], [71, 3, 1, "", "smoothstep"], [71, 3, 1, "", "use_appearance_embedding"], [71, 3, 1, "", "use_grid_feature"], [71, 3, 1, "", "use_hash"], [71, 3, 1, "", "weight_norm"]], "nerfstudio.fields.semantic_nerf_field": [[71, 1, 1, "", "SemanticNerfField"]], "nerfstudio.fields.semantic_nerf_field.SemanticNerfField": [[71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.tensorf_field": [[71, 1, 1, "", "TensoRFField"]], "nerfstudio.fields.tensorf_field.TensoRFField": [[71, 2, 1, "", "forward"], [71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.fields.vanilla_nerf_field": [[71, 1, 1, "", "NeRFField"]], "nerfstudio.fields.vanilla_nerf_field.NeRFField": [[71, 2, 1, "", "get_density"], [71, 2, 1, "", "get_outputs"]], "nerfstudio.model_components": [[74, 0, 0, "-", "losses"], [75, 0, 0, "-", "ray_samplers"], [76, 0, 0, "-", "renderers"]], "nerfstudio.model_components.losses": [[74, 1, 1, "", "DepthLossType"], [74, 1, 1, "", "GradientLoss"], [74, 1, 1, "", "MiDaSMSELoss"], [74, 1, 1, "", "ScaleAndShiftInvariantLoss"], [74, 4, 1, "", "depth_loss"], [74, 4, 1, "", "depth_ranking_loss"], [74, 4, 1, "", "distortion_loss"], [74, 4, 1, "", "ds_nerf_depth_loss"], [74, 4, 1, "", "interlevel_loss"], [74, 4, 1, "", "lossfun_distortion"], [74, 4, 1, "", "lossfun_outer"], [74, 4, 1, "", "monosdf_normal_loss"], [74, 4, 1, "", "nerfstudio_distortion_loss"], [74, 4, 1, "", "orientation_loss"], [74, 4, 1, "", "outer"], [74, 4, 1, "", "pred_normal_loss"], [74, 4, 1, "", "ray_samples_to_sdist"], [74, 4, 1, "", "scale_gradients_by_distance_squared"], [74, 4, 1, "", "tv_loss"], [74, 4, 1, "", "urban_radiance_field_depth_loss"]], "nerfstudio.model_components.losses.GradientLoss": [[74, 2, 1, "", "forward"], [74, 2, 1, "", "gradient_loss"]], "nerfstudio.model_components.losses.MiDaSMSELoss": [[74, 2, 1, "", "forward"]], "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss": [[74, 2, 1, "", "forward"], [74, 5, 1, "", "prediction_ssi"]], "nerfstudio.model_components.ray_samplers": [[75, 1, 1, "", "DensityFn"], [75, 1, 1, "", "LinearDisparitySampler"], [75, 1, 1, "", "LogSampler"], [75, 1, 1, "", "NeuSSampler"], [75, 1, 1, "", "PDFSampler"], [75, 1, 1, "", "ProposalNetworkSampler"], [75, 1, 1, "", "Sampler"], [75, 1, 1, "", "SpacedSampler"], [75, 1, 1, "", "SqrtSampler"], [75, 1, 1, "", "UniformLinDispPiecewiseSampler"], [75, 1, 1, "", "UniformSampler"], [75, 1, 1, "", "VolumetricSampler"]], "nerfstudio.model_components.ray_samplers.NeuSSampler": [[75, 2, 1, "", "generate_ray_samples"], [75, 2, 1, "", "merge_ray_samples"], [75, 2, 1, "", "rendering_sdf_with_fixed_inv_s"]], "nerfstudio.model_components.ray_samplers.PDFSampler": [[75, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler": [[75, 2, 1, "", "generate_ray_samples"], [75, 2, 1, "", "set_anneal"], [75, 2, 1, "", "step_cb"]], "nerfstudio.model_components.ray_samplers.Sampler": [[75, 2, 1, "", "forward"], [75, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.SpacedSampler": [[75, 2, 1, "", "generate_ray_samples"]], "nerfstudio.model_components.ray_samplers.VolumetricSampler": [[75, 2, 1, "", "forward"], [75, 2, 1, "", "generate_ray_samples"], [75, 2, 1, "", "get_sigma_fn"]], "nerfstudio.model_components.renderers": [[76, 1, 1, "", "AccumulationRenderer"], [76, 1, 1, "", "DepthRenderer"], [76, 1, 1, "", "NormalsRenderer"], [76, 1, 1, "", "RGBRenderer"], [76, 1, 1, "", "SHRenderer"], [76, 1, 1, "", "SemanticRenderer"], [76, 1, 1, "", "UncertaintyRenderer"], [76, 4, 1, "", "background_color_override_context"]], "nerfstudio.model_components.renderers.AccumulationRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.DepthRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.NormalsRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.RGBRenderer": [[76, 2, 1, "", "blend_background"], [76, 2, 1, "", "blend_background_for_loss_computation"], [76, 2, 1, "", "combine_rgb"], [76, 2, 1, "", "forward"], [76, 2, 1, "", "get_background_color"]], "nerfstudio.model_components.renderers.SHRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.SemanticRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.model_components.renderers.UncertaintyRenderer": [[76, 2, 1, "", "forward"]], "nerfstudio.models": [[77, 0, 0, "-", "base_model"], [77, 0, 0, "-", "instant_ngp"], [77, 0, 0, "-", "semantic_nerfw"], [77, 0, 0, "-", "vanilla_nerf"]], "nerfstudio.models.base_model": [[77, 1, 1, "", "Model"], [77, 1, 1, "", "ModelConfig"]], "nerfstudio.models.base_model.Model": [[77, 5, 1, "", "device"], [77, 2, 1, "", "forward"], [77, 2, 1, "", "get_image_metrics_and_images"], [77, 2, 1, "", "get_loss_dict"], [77, 2, 1, "", "get_metrics_dict"], [77, 2, 1, "", "get_outputs"], [77, 2, 1, "", "get_outputs_for_camera"], [77, 2, 1, "", "get_outputs_for_camera_ray_bundle"], [77, 2, 1, "", "get_param_groups"], [77, 2, 1, "", "get_rgba_image"], [77, 2, 1, "", "get_training_callbacks"], [77, 2, 1, "", "load_model"], [77, 2, 1, "", "populate_modules"], [77, 2, 1, "", "update_to_step"]], "nerfstudio.models.base_model.ModelConfig": [[77, 3, 1, "", "collider_params"], [77, 3, 1, "", "enable_collider"], [77, 3, 1, "", "eval_num_rays_per_chunk"], [77, 3, 1, "", "loss_coefficients"], [77, 3, 1, "", "prompt"]], "nerfstudio.models.instant_ngp": [[77, 1, 1, "", "InstantNGPModelConfig"], [77, 1, 1, "", "NGPModel"]], "nerfstudio.models.instant_ngp.InstantNGPModelConfig": [[77, 3, 1, "", "alpha_thre"], [77, 3, 1, "", "background_color"], [77, 3, 1, "", "collider_params"], [77, 3, 1, "", "cone_angle"], [77, 3, 1, "", "disable_scene_contraction"], [77, 3, 1, "", "enable_collider"], [77, 3, 1, "", "far_plane"], [77, 3, 1, "", "grid_levels"], [77, 3, 1, "", "grid_resolution"], [77, 3, 1, "", "log2_hashmap_size"], [77, 3, 1, "", "max_res"], [77, 3, 1, "", "near_plane"], [77, 3, 1, "", "render_step_size"], [77, 3, 1, "", "use_appearance_embedding"], [77, 3, 1, "", "use_gradient_scaling"]], "nerfstudio.models.instant_ngp.NGPModel": [[77, 2, 1, "", "get_image_metrics_and_images"], [77, 2, 1, "", "get_loss_dict"], [77, 2, 1, "", "get_metrics_dict"], [77, 2, 1, "", "get_outputs"], [77, 2, 1, "", "get_param_groups"], [77, 2, 1, "", "get_training_callbacks"], [77, 2, 1, "", "populate_modules"]], "nerfstudio.models.semantic_nerfw": [[77, 1, 1, "", "SemanticNerfWModel"], [77, 1, 1, "", "SemanticNerfWModelConfig"]], "nerfstudio.models.semantic_nerfw.SemanticNerfWModel": [[77, 2, 1, "", "get_image_metrics_and_images"], [77, 2, 1, "", "get_loss_dict"], [77, 2, 1, "", "get_metrics_dict"], [77, 2, 1, "", "get_outputs"], [77, 2, 1, "", "get_param_groups"], [77, 2, 1, "", "get_training_callbacks"], [77, 2, 1, "", "populate_modules"]], "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig": [[77, 3, 1, "", "use_transient_embedding"]], "nerfstudio.models.vanilla_nerf": [[77, 1, 1, "", "NeRFModel"], [77, 1, 1, "", "VanillaModelConfig"]], "nerfstudio.models.vanilla_nerf.NeRFModel": [[77, 2, 1, "", "get_image_metrics_and_images"], [77, 2, 1, "", "get_loss_dict"], [77, 2, 1, "", "get_outputs"], [77, 2, 1, "", "get_param_groups"], [77, 2, 1, "", "populate_modules"]], "nerfstudio.models.vanilla_nerf.VanillaModelConfig": [[77, 3, 1, "", "background_color"], [77, 3, 1, "", "enable_temporal_distortion"], [77, 3, 1, "", "num_coarse_samples"], [77, 3, 1, "", "num_importance_samples"], [77, 3, 1, "", "temporal_distortion_params"], [77, 3, 1, "", "use_gradient_scaling"]], "nerfstudio.plugins": [[79, 0, 0, "-", "registry"], [79, 0, 0, "-", "registry_dataparser"], [79, 0, 0, "-", "types"]], "nerfstudio.plugins.registry": [[79, 4, 1, "", "discover_methods"]], "nerfstudio.plugins.registry_dataparser": [[79, 1, 1, "", "DataParserSpecification"], [79, 4, 1, "", "discover_dataparsers"]], "nerfstudio.plugins.registry_dataparser.DataParserSpecification": [[79, 3, 1, "", "config"], [79, 3, 1, "", "description"]], "nerfstudio.plugins.types": [[79, 1, 1, "", "MethodSpecification"]], "nerfstudio.plugins.types.MethodSpecification": [[79, 3, 1, "", "config"], [79, 3, 1, "", "description"]], "nerfstudio.utils": [[80, 0, 0, "-", "colormaps"], [81, 0, 0, "-", "colors"], [83, 0, 0, "-", "math"], [84, 0, 0, "-", "tensor_dataclass"]], "nerfstudio.utils.colormaps": [[80, 1, 1, "", "ColormapOptions"], [80, 4, 1, "", "apply_boolean_colormap"], [80, 4, 1, "", "apply_colormap"], [80, 4, 1, "", "apply_depth_colormap"], [80, 4, 1, "", "apply_float_colormap"], [80, 4, 1, "", "apply_pca_colormap"]], "nerfstudio.utils.colormaps.ColormapOptions": [[80, 3, 1, "", "colormap"], [80, 3, 1, "", "colormap_max"], [80, 3, 1, "", "colormap_min"], [80, 3, 1, "", "invert"], [80, 3, 1, "", "normalize"]], "nerfstudio.utils.colors": [[81, 4, 1, "", "get_color"]], "nerfstudio.utils.math": [[83, 1, 1, "", "Gaussians"], [83, 4, 1, "", "columnwise_squared_l2_distance"], [83, 4, 1, "", "compute_3d_gaussian"], [83, 4, 1, "", "conical_frustum_to_gaussian"], [83, 4, 1, "", "cylinder_to_gaussian"], [83, 4, 1, "", "expected_sin"], [83, 4, 1, "", "generate_polyhedron_basis"], [83, 4, 1, "", "intersect_aabb"], [83, 4, 1, "", "intersect_obb"], [83, 4, 1, "", "k_nearest_sklearn"], [83, 4, 1, "", "masked_reduction"], [83, 4, 1, "", "normalized_depth_scale_and_shift"], [83, 4, 1, "", "random_quat_tensor"], [83, 4, 1, "", "safe_normalize"]], "nerfstudio.utils.tensor_dataclass": [[84, 1, 1, "", "TensorDataclass"]], "nerfstudio.utils.tensor_dataclass.TensorDataclass": [[84, 2, 1, "", "__post_init__"], [84, 2, 1, "", "broadcast_to"], [84, 2, 1, "", "flatten"], [84, 5, 1, "", "ndim"], [84, 2, 1, "", "pin_memory"], [84, 2, 1, "", "reshape"], [84, 5, 1, "", "shape"], [84, 5, 1, "", "size"], [84, 2, 1, "", "to"]], "nerfstudio.viewer": [[85, 0, 0, "-", "viewer_elements"]], "nerfstudio.viewer.viewer_elements": [[85, 1, 1, "", "ViewerButton"], [85, 1, 1, "", "ViewerButtonGroup"], [85, 1, 1, "", "ViewerCheckbox"], [85, 1, 1, "", "ViewerClick"], [85, 1, 1, "", "ViewerControl"], [85, 1, 1, "", "ViewerDropdown"], [85, 1, 1, "", "ViewerElement"], [85, 1, 1, "", "ViewerNumber"], [85, 1, 1, "", "ViewerParameter"], [85, 1, 1, "", "ViewerRGB"], [85, 1, 1, "", "ViewerRectSelect"], [85, 1, 1, "", "ViewerSlider"], [85, 1, 1, "", "ViewerText"], [85, 1, 1, "", "ViewerVec3"]], "nerfstudio.viewer.viewer_elements.ViewerButton": [[85, 2, 1, "", "install"]], "nerfstudio.viewer.viewer_elements.ViewerButtonGroup": [[85, 2, 1, "", "install"]], "nerfstudio.viewer.viewer_elements.ViewerClick": [[85, 3, 1, "", "direction"], [85, 3, 1, "", "origin"], [85, 3, 1, "", "screen_pos"]], "nerfstudio.viewer.viewer_elements.ViewerControl": [[85, 2, 1, "", "get_camera"], [85, 2, 1, "", "register_click_cb"], [85, 2, 1, "", "register_pointer_cb"], [85, 2, 1, "", "set_crop"], [85, 2, 1, "", "set_fov"], [85, 2, 1, "", "set_pose"], [85, 2, 1, "", "unregister_click_cb"], [85, 2, 1, "", "unregister_pointer_cb"]], "nerfstudio.viewer.viewer_elements.ViewerDropdown": [[85, 2, 1, "", "set_options"]], "nerfstudio.viewer.viewer_elements.ViewerElement": [[85, 2, 1, "", "install"], [85, 2, 1, "", "remove"], [85, 2, 1, "", "set_disabled"], [85, 2, 1, "", "set_hidden"], [85, 2, 1, "", "set_visible"]], "nerfstudio.viewer.viewer_elements.ViewerParameter": [[85, 2, 1, "", "install"], [85, 5, 1, "", "value"]], "nerfstudio.viewer.viewer_elements.ViewerRectSelect": [[85, 3, 1, "", "max_bounds"], [85, 3, 1, "", "min_bounds"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"customiz": 0, "config": [0, 10, 55, 59], "base": [0, 60, 61, 62, 64, 71, 77], "compon": [0, 45, 73], "creat": [0, 6, 11, 16, 56, 57], "new": [0, 5, 6, 32], "tip": [0, 1, 3, 4, 51, 95], "see": 0, "also": 0, "updat": [0, 21, 24, 25], "method": [0, 5, 11, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 54, 79], "modifi": 0, "from": [0, 16, 17, 32, 55], "cli": [0, 55, 86, 90], "benchmark": [1, 31], "workflow": 1, "launch": [1, 14], "train": [1, 7, 32, 51, 55, 93], "blender": [1, 16, 31, 61], "dataset": [1, 6, 24, 25, 34, 52, 53, 62], "evalu": [1, 34, 51, 55], "model": [1, 5, 10, 18, 19, 27, 30, 31, 34, 42, 44, 45, 46, 55, 73, 77], "warn": [1, 12, 52], "debug": 2, "tool": 2, "local": [3, 14, 57], "writer": 3, "code": [4, 95], "profil": 4, "support": [4, 20], "In": 4, "hous": 4, "pytorch": [4, 56], "pyspi": 4, "attent": [4, 95], "ad": [5, 12, 26, 51, 95], "file": [5, 17], "structur": 5, "regist": 5, "custom": [5, 11, 12, 43, 51], "nerfstudio": [5, 16, 17, 18, 32, 41, 55, 56, 61, 64], "datapars": [5, 7, 79], "run": [5, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 55], "nerf": [5, 9, 16, 30, 31, 32, 34, 38, 43, 44, 47, 54, 61, 71, 77], "studio": 5, "document": [5, 95], "datamanag": [6, 60], "what": [6, 7, 8, 10, 11], "i": [6, 7, 8, 10, 11], "exampl": [6, 7, 12, 16, 23, 38, 53], "your": [6, 19, 26, 51, 55], "own": [6, 26], "disk": 6, "cach": 6, "larg": 6, "migrat": 6, "eval": [7, 88], "logic": 7, "includ": [7, 20], "field": [8, 31, 33, 47, 67, 68, 71], "separ": [8, 51], "densiti": [8, 33, 71], "output": 8, "us": [8, 51, 53, 56, 57], "frustum": [8, 49], "instead": 8, "posit": [8, 21, 31, 47], "pipelin": [9, 11, 21, 24, 25, 31, 33, 39], "overview": [9, 16, 17, 18, 19, 21, 24, 25, 27, 30, 31, 33, 34, 35, 36, 39, 42, 44, 48, 95], "note": [9, 11, 26, 28, 51, 55, 56, 57, 91, 92, 95], "why": 9, "implement": [9, 10, 11, 16, 17, 24, 26], "paper": 9, "function": 10, "python": [10, 15], "vanilla": [11, 71], "gui": 12, "an": [12, 54, 56, 57], "element": 12, "viewer": [13, 14, 15, 55, 57, 85, 94], "acknowledg": 13, "refer": [13, 22, 39], "legaci": [14, 57], "server": 14, "instal": [14, 21, 22, 23, 24, 25, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 51, 56, 90], "depend": [14, 32, 41, 54, 56], "web": 14, "client": 14, "faq": [14, 40, 56], "engin": [14, 19, 51, 78], "node": 14, "incompat": 14, "control": 15, "usag": 15, "get": [15, 57], "camera": [15, 16, 17, 46, 52, 57, 58], "matrix": 15, "set": [15, 17, 51], "properti": 15, "scene": [15, 16, 17, 22, 32, 36, 50, 53, 63], "pointer": 15, "callback": [15, 78], "thread": 15, "safeti": 15, "vfx": 16, "add": 16, "setup": [16, 51], "instruct": [16, 24, 25, 51], "gener": [16, 17, 39, 55], "json": [16, 17], "path": [16, 17, 58], "addit": [16, 51], "detail": [16, 40], "composit": 16, "object": 16, "environ": [16, 56], "autodesk": 17, "maya": 17, "plug": 17, "load": 17, "plugin": [17, 79], "up": [17, 51], "export": [17, 19, 40, 54, 55, 89], "render": [17, 31, 32, 36, 51, 55, 57, 76, 92], "bring": 17, "togeth": 17, "credit": 17, "sdfstudio": [18, 61], "surfac": [18, 54], "citat": [18, 20], "unreal": 19, "nvol": 19, "content": 20, "third": 20, "parti": 20, "quicklink": 20, "sponsor": 20, "built": 20, "On": 20, "contributor": 20, "maintain": [20, 95], "bionerf": 21, "featur": [21, 22, 36, 47], "extract": 21, "cognit": 21, "filter": 21, "memori": 21, "contextu": 21, "infer": 21, "result": [21, 23, 24, 25, 29, 34, 38, 55], "splat": [22, 32, 40], "comput": 22, "joint": 22, "supervis": [22, 29], "edit": [22, 24, 25], "generfacto": 23, "gs2g": 24, "how": [24, 25], "work": [24, 25, 39], "imag": [24, 25, 32, 51, 52, 53, 56], "instructpix2pix": [24, 25], "iter": [24, 25], "nerf2nerf": 25, "instant": [27, 61, 77], "ngp": [27, 61, 77], "multi": [27, 29, 55], "resolut": [27, 53], "hash": [27, 47], "encod": [27, 31, 47, 66], "k": 28, "plane": 28, "lerf": 29, "scale": 29, "optim": [29, 58, 78], "visual": [29, 32, 55], "relev": 29, "text": 29, "queri": 29, "mip": 30, "assumpt": 31, "represent": [31, 49], "sampl": [31, 48, 49], "synthet": 31, "gaussian": [32, 49], "back": 32, "0": 32, "1": [32, 41, 54], "repositori": [32, 41], "2": [32, 41, 54], "check": [32, 41], "download": [32, 41, 87], "data": [32, 40, 41, 43, 51, 52, 53, 61, 63, 64, 87, 91], "nerfg": 32, "sh": 32, "convert": 32, "guassian": 32, "fintun": 32, "gsnerf": 32, "modif": 32, "extend": 32, "nerfacto": [33, 71], "tldr": 33, "pose": 33, "refin": 33, "piecewis": 33, "sampler": [33, 48, 63, 75], "propos": 33, "nerfbust": 34, "abstract": 34, "casual": 34, "captur": [34, 51], "video": [34, 51, 55, 57], "visibiltii": 34, "loss": [34, 74], "preview": 34, "nerfplay": 35, "opennerf": 36, "openset": 36, "3d": [36, 49], "neural": 36, "segment": 36, "pixel": [36, 52, 63], "wise": 36, "novel": 36, "view": [36, 52], "zero": 36, "shot": 36, "semant": [36, 62, 71, 77], "replica": 36, "bibtex": 36, "pynerf": 37, "seathru": 38, "requir": [38, 95], "signerf": 39, "interfac": 39, "sheet": 39, "relat": 39, "author": 39, "splatfacto": [40, 41], "qualiti": 40, "regular": 40, "wild": 41, "3": 41, "splafacto": 41, "w": [41, 71, 77], "tensorf": [42, 71], "tetra": 43, "exist": [43, 53, 54, 55], "checkpoint": [43, 55], "predict": 43, "zip": 44, "perspect": 46, "fishey": 46, "equirectangular": [46, 51], "spheric": [46, 47], "distort": [46, 50, 70], "paramet": 46, "random": 47, "fourier": 47, "rff": 47, "harmon": 47, "rai": [48, 58, 75], "stratifi": 48, "hierarch": 48, "space": [48, 52], "pdf": 48, "repres": 49, "point": [49, 51, 54, 55], "spatial": [50, 70], "contract": 50, "befor": 50, "after": 50, "process": [51, 91], "colmap": 51, "polycam": 51, "kiri": 51, "record3d": 51, "cloud": [51, 54, 55], "spectacular": 51, "ai": 51, "metashap": 51, "realitycaptur": 51, "odm": 51, "aria": 51, "360": 51, "vr": 51, "omni": 51, "direct": 51, "stereo": 51, "vr180": 51, "convent": 52, "coordin": 52, "world": 52, "format": 52, "intrins": 52, "extrins": 52, "depth": 52, "mask": 52, "summari": 53, "size": 53, "number": 53, "rgb": 53, "max": 53, "width": 53, "height": 53, "ey": 53, "tower": 53, "geometri": 54, "mesh": 54, "tsdf": 54, "fusion": 54, "poisson": 54, "reconstruct": 54, "other": 54, "textur": 54, "first": 55, "resum": 55, "intro": 55, "comet": 55, "tensorboard": 55, "wandb": 55, "gpu": 55, "prerequisit": 56, "tini": 56, "cuda": 56, "nn": 56, "pixi": 56, "environmn": 56, "docker": 56, "interact": 56, "contain": 56, "call": 56, "command": [56, 86], "directli": 56, "connect": 57, "access": 57, "machin": 57, "over": 57, "ssh": 57, "via": 57, "share": 57, "link": 57, "tutori": 57, "start": 57, "basic": 57, "trajectori": 57, "util": [58, 64, 82], "lie": 58, "group": 58, "parser": 61, "arkitscen": 61, "d": 61, "dycheck": 61, "minim": 61, "osr": 61, "nuscen": 61, "phototour": 61, "scannet": 61, "sitcoms3d": 61, "sdf": [62, 71], "box": 63, "dataload": 64, "collat": 64, "embed": 65, "head": 67, "modul": 68, "mlp": 69, "api": 72, "schedul": 78, "trainer": 78, "registri": 79, "type": 79, "colormap": 80, "color": 81, "math": 83, "tensordataclass": 84, "n": [87, 88, 89, 90, 91, 92, 93, 94], "option": [87, 88, 89, 90, 91, 92, 94], "subcommand": [87, 89, 91, 92], "contribut": 95, "commit": 95, "build": 95, "auto": 95, "notebook": 95}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Customizable configs": [[0, "customizable-configs"]], "Base components": [[0, "base-components"]], "Creating new configs": [[0, "creating-new-configs"]], "Tip": [[0, null], [1, null], [3, null], [4, null], [51, null], [95, null], [95, null]], "See Also": [[0, null]], "Updating method configs": [[0, "updating-method-configs"]], "Modifying from CLI": [[0, "modifying-from-cli"]], "Benchmarking workflow": [[1, "benchmarking-workflow"]], "Launching training on Blender dataset": [[1, "launching-training-on-blender-dataset"]], "Evaluating trained Blender models": [[1, "evaluating-trained-blender-models"]], "Warning": [[1, null], [12, null], [52, null]], "Debugging tools": [[2, "debugging-tools"]], "Local writer": [[3, "local-writer"]], "Code profiling support": [[4, "code-profiling-support"]], "In-house profiler": [[4, "in-house-profiler"]], "Profiling with PyTorch profiler": [[4, "profiling-with-pytorch-profiler"]], "Profiling with PySpy": [[4, "profiling-with-pyspy"]], "Attention": [[4, null], [95, null]], "Adding a New Method": [[5, "adding-a-new-method"]], "File Structure": [[5, "file-structure"]], "Registering custom model with nerfstudio": [[5, "registering-custom-model-with-nerfstudio"]], "Registering custom dataparser with nerfstudio": [[5, "registering-custom-dataparser-with-nerfstudio"]], "Running custom method": [[5, "running-custom-method"]], "Adding to the nerf.studio documentation": [[5, "adding-to-the-nerf-studio-documentation"]], "DataManagers": [[6, "datamanagers"]], "What is a DataManager?": [[6, "what-is-a-datamanager"]], "Example": [[6, "example"], [7, "example"], [53, "example"]], "Creating Your Own": [[6, "creating-your-own"]], "Disk Caching for Large Datasets": [[6, "disk-caching-for-large-datasets"]], "Migrating Your DataManager to the new DataManager": [[6, "migrating-your-datamanager-to-the-new-datamanager"]], "DataParsers": [[7, "dataparsers"]], "What is a DataParser?": [[7, "what-is-a-dataparser"]], "Train and Eval Logic": [[7, "train-and-eval-logic"]], "Included DataParsers": [[7, "included-dataparsers"]], "Fields": [[8, "fields"], [71, "fields"]], "What is a Field?": [[8, "what-is-a-field"]], "Separate density and outputs": [[8, "separate-density-and-outputs"]], "Using Frustums instead of positions": [[8, "using-frustums-instead-of-positions"]], "Pipelines overview": [[9, "pipelines-overview"]], "Note": [[9, null], [11, null], [26, null], [28, null], [51, null], [51, null], [51, null], [51, null], [55, null], [56, null], [56, null], [56, null], [56, "note"], [57, null], [91, null], [92, null], [95, null]], "Why Pipelines?": [[9, "why-pipelines"]], "Implementing NeRF Papers": [[9, "implementing-nerf-papers"]], "Models": [[10, "models"], [77, "models"]], "What is a Model?": [[10, "what-is-a-model"]], "Functions to Implement": [[10, "functions-to-implement"]], "Pythonic Configs with Models": [[10, "pythonic-configs-with-models"]], "Implementing a Model": [[10, "implementing-a-model"]], "Pipelines": [[11, "pipelines"]], "What is a Pipeline?": [[11, "what-is-a-pipeline"]], "Vanilla Implementation": [[11, "vanilla-implementation"]], "Creating Custom Methods": [[11, "creating-custom-methods"]], "Custom GUI": [[12, "custom-gui"]], "Adding an Element": [[12, "adding-an-element"]], "Example Elements": [[12, "example-elements"]], "Viewer": [[13, "viewer"], [85, "viewer"]], "Acknowledgements and references": [[13, "acknowledgements-and-references"]], "(Legacy Viewer) Local Server": [[14, "legacy-viewer-local-server"]], "Installing Dependencies": [[14, "installing-dependencies"]], "Launch the web client": [[14, "launch-the-web-client"]], "FAQ": [[14, "faq"], [40, "faq"]], "Engine node incompatible": [[14, "engine-node-incompatible"]], "Python Viewer Control": [[15, "python-viewer-control"]], "Usage": [[15, "usage"]], "Get Camera Matrix": [[15, "get-camera-matrix"]], "Set Camera Properties": [[15, "set-camera-properties"]], "Scene Pointer Callbacks": [[15, "scene-pointer-callbacks"]], "Thread safety": [[15, "thread-safety"]], "Blender VFX add-on": [[16, "blender-vfx-add-on"]], "Overview": [[16, "overview"], [17, "overview"], [18, "overview"], [19, "overview"], [21, "overview"], [24, "overview"], [25, "overview"], [27, "overview"], [30, "overview"], [33, "overview"], [36, "overview"], [39, "overview"], [42, "overview"], [44, "overview"], [48, "overview"], [95, "overview"]], "Add-on Setup Instructions": [[16, "add-on-setup-instructions"]], "Scene Setup": [[16, "scene-setup"]], "Generate Nerfstudio JSON Camera Path from Blender Camera": [[16, "generate-nerfstudio-json-camera-path-from-blender-camera"]], "Examples": [[16, "examples"], [16, "id3"]], "Additional details": [[16, "additional-details"], [16, "id1"]], "Create Blender Camera from Nerfstudio JSON Camera Path": [[16, "create-blender-camera-from-nerfstudio-json-camera-path"]], "Compositing NeRF Objects in NeRF Environments": [[16, "compositing-nerf-objects-in-nerf-environments"]], "Additional Details": [[16, "id2"]], "Implementation Details": [[16, "implementation-details"]], "Autodesk Maya Plug-in": [[17, "autodesk-maya-plug-in"]], "Loading the plugin": [[17, "loading-the-plugin"]], "Setting up the scene": [[17, "setting-up-the-scene"]], "Exporting a camera path from Maya into Nerfstudio": [[17, "exporting-a-camera-path-from-maya-into-nerfstudio"]], "Generating the JSON File": [[17, "generating-the-json-file"]], "Rendering in Nerfstudio": [[17, "rendering-in-nerfstudio"]], "Exporting a camera path from Nerfstudio into Maya": [[17, "exporting-a-camera-path-from-nerfstudio-into-maya"]], "Bringing it together!": [[17, "bringing-it-together"]], "Implementation": [[17, "implementation"]], "Credits": [[17, "credits"]], "SDFStudio": [[18, "sdfstudio"], [61, "sdfstudio"]], "Surface models in nerfstudio": [[18, "surface-models-in-nerfstudio"]], "Citation": [[18, "citation"], [20, "citation"]], "Exporting to Unreal Engine": [[19, "exporting-to-unreal-engine"]], "Exporting your model to NVOL": [[19, "exporting-your-model-to-nvol"]], "Contents": [[20, "contents"]], "Supported Methods": [[20, "supported-methods"]], "Included Methods": [[20, "included-methods"]], "Third-party Methods": [[20, "third-party-methods"]], "Quicklinks": [[20, "quicklinks"]], "Sponsors": [[20, "sponsors"]], "Built On": [[20, "built-on"]], "Contributors": [[20, "contributors"]], "Maintainers": [[20, "maintainers"]], "BioNeRF": [[21, "bionerf"]], "Installation": [[21, "installation"], [22, "installation"], [23, "installation"], [24, "installation"], [25, "installation"], [28, "installation"], [29, "installation"], [32, "installation"], [34, "installation"], [35, "installation"], [36, "installation"], [37, "installation"], [38, "installation"], [39, "installation"], [40, "installation"], [41, "installation"], [43, "installation"], [44, "installation"], [56, "installation"]], "Running BioNeRF": [[21, "running-bionerf"]], "Method": [[21, "method"], [22, "method"], [24, "method"], [25, "method"], [27, "method"], [28, "method"], [29, "method"], [32, "method"], [33, "method"], [36, "method"], [37, "method"], [38, "method"], [39, "method"], [43, "method"]], "Pipeline": [[21, "pipeline"], [24, "pipeline"], [25, "pipeline"], [31, "pipeline"], [33, "pipeline"], [39, "pipeline"]], "Positional Feature Extraction": [[21, "positional-feature-extraction"]], "Cognitive Filtering": [[21, "cognitive-filtering"]], "Memory Updating": [[21, "memory-updating"]], "Contextual Inference": [[21, "contextual-inference"]], "Results": [[21, "results"], [24, "results"], [25, "results"], [29, "results"]], "Feature Splatting": [[22, "feature-splatting"]], "Running Feature Splatting": [[22, "running-feature-splatting"]], "Reference feature computation and joint supervision": [[22, "reference-feature-computation-and-joint-supervision"]], "Scene Editing": [[22, "scene-editing"]], "Generfacto": [[23, "generfacto"]], "Running Generfacto": [[23, "running-generfacto"]], "Example Results": [[23, "example-results"]], "Instruct-GS2GS": [[24, "instruct-gs2gs"]], "Running Instruct-GS2GS": [[24, "running-instruct-gs2gs"]], "How it Works": [[24, "how-it-works"], [25, "how-it-works"]], "Editing Images with InstructPix2Pix": [[24, "editing-images-with-instructpix2pix"], [25, "editing-images-with-instructpix2pix"]], "Iterative Dataset Update and Implementation": [[24, "iterative-dataset-update-and-implementation"]], "Instruct-NeRF2NeRF": [[25, "instruct-nerf2nerf"]], "Running Instruct-NeRF2NeRF": [[25, "running-instruct-nerf2nerf"]], "Iterative Dataset Update": [[25, "iterative-dataset-update"]], "Methods": [[26, "methods"]], "Running a method": [[26, "running-a-method"]], "Implemented Methods": [[26, "implemented-methods"]], "Adding Your Own Method": [[26, "adding-your-own-method"]], "Instant-NGP": [[27, "instant-ngp"], [61, "instant-ngp"]], "Running the Model": [[27, "running-the-model"]], "Multi-Resolution Hash Encoding": [[27, "multi-resolution-hash-encoding"]], "K-Planes": [[28, "k-planes"]], "Running K-Planes": [[28, "running-k-planes"]], "LERF": [[29, "lerf"]], "Running LERF": [[29, "running-lerf"]], "Multi-scale supervision": [[29, "multi-scale-supervision"]], "LERF Optimization": [[29, "lerf-optimization"]], "Visualizing relevancy for text queries": [[29, "visualizing-relevancy-for-text-queries"]], "Mip-NeRF": [[30, "mip-nerf"]], "Running Model": [[30, "running-model"], [42, "running-model"], [44, "running-model"]], "NeRF": [[31, "nerf"], [77, "nerf"]], "Running the model": [[31, "running-the-model"]], "Method overview": [[31, "method-overview"]], "Assumptions": [[31, null]], "Field representation": [[31, "field-representation"]], "Positional encoding": [[31, "positional-encoding"]], "Rendering": [[31, "rendering"]], "Sampling": [[31, "sampling"]], "Benchmarks": [[31, "benchmarks"]], "Blender synthetic": [[31, "blender-synthetic"]], "From NeRFs to Gaussian Splats, and Back": [[32, "from-nerfs-to-gaussian-splats-and-back"]], "0. Install Nerfstudio dependencies": [[32, "install-nerfstudio-dependencies"]], "1. Install the repository": [[32, "install-the-repository"]], "2. Check installation": [[32, "check-installation"]], "Downloading data": [[32, "downloading-data"], [41, "downloading-data"]], "NeRFGS: NeRFs to Gaussian Splats": [[32, "nerfgs-nerfs-to-gaussian-splats"]], "Training NeRF-SH": [[32, "training-nerf-sh"]], "NeRFGS: Converting NeRF-SH to Guassian splats": [[32, "nerfgs-converting-nerf-sh-to-guassian-splats"]], "Visualize converted Gaussian splats": [[32, "visualize-converted-gaussian-splats"]], "Fintuned NeRFGS": [[32, "fintuned-nerfgs"]], "GSNeRF: Gaussian Splats to NeRFs": [[32, "gsnerf-gaussian-splats-to-nerfs"]], "Scene modification": [[32, "scene-modification"]], "Rendering new training images": [[32, "rendering-new-training-images"]], "GSNeRF: Training on new training images": [[32, "gsnerf-training-on-new-training-images"]], "Extending the method": [[32, "extending-the-method"]], "NeRF-SH": [[32, "nerf-sh"]], "NeRFGS": [[32, "nerfgs"]], "GSNeRF": [[32, "gsnerf"]], "Nerfacto": [[33, "nerfacto"], [71, "nerfacto"]], "Running the Method": [[33, "running-the-method"], [34, "running-the-method"], [40, "running-the-method"]], "TLDR": [[33, null]], "Pose Refinement": [[33, "pose-refinement"]], "Piecewise Sampler": [[33, "piecewise-sampler"]], "Proposal Sampler": [[33, "proposal-sampler"]], "Density Field": [[33, "density-field"]], "Nerfacto Field": [[33, "nerfacto-field"]], "Nerfbusters": [[34, "nerfbusters"]], "Abstract": [[34, "abstract"]], "NeRF evaluation for casually captured videos": [[34, "nerf-evaluation-for-casually-captured-videos"]], "Model Overview": [[34, "model-overview"]], "Visibiltiy Loss": [[34, "visibiltiy-loss"]], "Results and dataset preview": [[34, "results-and-dataset-preview"]], "NeRFPlayer": [[35, "nerfplayer"]], "Running NeRFPlayer": [[35, "running-nerfplayer"]], "Method Overview": [[35, "method-overview"]], "OpenNeRF": [[36, "opennerf"]], "OpenSet 3D Neural Scene Segmentation with Pixel-wise Features and Rendered Novel Views": [[36, "openset-3d-neural-scene-segmentation-with-pixel-wise-features-and-rendered-novel-views"]], "Running OpenNeRF": [[36, "running-opennerf"]], "Zero-Shot 3D Semantic Segmentation on Replica": [[36, "zero-shot-3d-semantic-segmentation-on-replica"]], "BibTeX": [[36, "bibtex"]], "PyNeRF": [[37, "pynerf"]], "Running PyNeRF": [[37, "running-pynerf"]], "SeaThru-NeRF": [[38, "seathru-nerf"]], "Requirements": [[38, "requirements"], [95, "requirements"]], "Running SeaThru-NeRF": [[38, "running-seathru-nerf"]], "Example results": [[38, "example-results"]], "SIGNeRF": [[39, "signerf"]], "Running SIGNeRF": [[39, "running-signerf"]], "Interface": [[39, "interface"]], "Reference Sheet Generation": [[39, "reference-sheet-generation"]], "Related Work": [[39, "related-work"]], "Authors": [[39, "authors"]], "Splatfacto": [[40, "splatfacto"]], "Data": [[40, "data"], [63, "data"], [64, "data"]], "Quality and Regularization": [[40, "quality-and-regularization"]], "Details": [[40, "details"]], "Exporting splats": [[40, "exporting-splats"]], "Splatfacto in the Wild": [[41, "splatfacto-in-the-wild"]], "1. Install Nerfstudio dependencies": [[41, "install-nerfstudio-dependencies"]], "2. Install the repository": [[41, "install-the-repository"]], "3. Check installation": [[41, "check-installation"]], "Running Splafacto-w": [[41, "running-splafacto-w"]], "TensoRF": [[42, "tensorf"], [71, "tensorf"]], "Tetra-NeRF": [[43, "tetra-nerf"]], "Running Tetra-NeRF on custom data": [[43, "running-tetra-nerf-on-custom-data"]], "Existing checkpoints and predictions": [[43, "existing-checkpoints-and-predictions"]], "Zip-NeRF": [[44, "zip-nerf"]], "Model components": [[45, "model-components"], [73, "model-components"]], "Camera Models": [[46, "camera-models"]], "Perspective Camera Model": [[46, "perspective-camera-model"]], "Fisheye Camera Model": [[46, "fisheye-camera-model"]], "Equirectangular/Spherical Camera Model": [[46, "equirectangular-spherical-camera-model"]], "Distortion Parameters": [[46, "distortion-parameters"]], "Field Encoders": [[47, "field-encoders"]], "NeRF Positional Encoding": [[47, "nerf-positional-encoding"]], "Random Fourier Feature (RFF) Encoding": [[47, "random-fourier-feature-rff-encoding"]], "Hash Encoding": [[47, "hash-encoding"]], "Spherical Harmonic Encoding": [[47, "spherical-harmonic-encoding"]], "Ray Samplers": [[48, "ray-samplers"]], "Stratified Sampling": [[48, "stratified-sampling"]], "Hierarchical Sampling": [[48, "hierarchical-sampling"]], "Spaced Samplers": [[48, "spaced-samplers"]], "PDF Sampler": [[48, "pdf-sampler"]], "Sample Representation": [[49, "sample-representation"]], "3D Frustum": [[49, "d-frustum"]], "Representing Frustums as Points": [[49, "representing-frustums-as-points"]], "Representing Frustums as Gaussians": [[49, "representing-frustums-as-gaussians"]], "Spatial Distortions": [[50, "spatial-distortions"], [70, "spatial-distortions"]], "Scene Contraction": [[50, "scene-contraction"]], "Before Contraction": [[50, "before-contraction"]], "After Contraction": [[50, "after-contraction"]], "Using custom data": [[51, "using-custom-data"]], "Images or Video": [[51, "images-or-video"]], "Processing Data": [[51, "processing-data"]], "Training on your data": [[51, "training-on-your-data"]], "Training and evaluation on separate data": [[51, "training-and-evaluation-on-separate-data"]], "Installing COLMAP": [[51, "installing-colmap"]], "Polycam Capture": [[51, "polycam-capture"]], "Setting up Polycam": [[51, "setting-up-polycam"]], "Process data": [[51, "process-data"], [51, "id1"]], "KIRI Engine Capture": [[51, "kiri-engine-capture"]], "Setting up KIRI Engine": [[51, "setting-up-kiri-engine"]], "Record3D Capture": [[51, "record3d-capture"]], "Adding a Point Cloud": [[51, "adding-a-point-cloud"]], "Spectacular AI": [[51, "spectacular-ai"]], "Metashape": [[51, "metashape"]], "RealityCapture": [[51, "realitycapture"]], "ODM": [[51, "odm"]], "Aria": [[51, "aria"]], "360 Data (Equirectangular)": [[51, "data-equirectangular"]], "Images": [[51, "images"]], "Videos": [[51, "videos"]], "\ud83e\udd7d Render VR Video": [[51, "render-vr-video"]], "Omni-directional Stereo (360 VR)": [[51, "omni-directional-stereo-360-vr"]], "VR180": [[51, "vr180"]], "Setup instructions": [[51, "setup-instructions"]], "Additional Notes": [[51, "additional-notes"]], "Data conventions": [[52, "data-conventions"]], "Coordinate conventions": [[52, "coordinate-conventions"]], "Camera/view space": [[52, "camera-view-space"]], "World space": [[52, "world-space"]], "Pixel coordinates": [[52, "pixel-coordinates"]], "Dataset format": [[52, "dataset-format"]], "Camera intrinsics": [[52, "camera-intrinsics"]], "Camera extrinsics": [[52, "camera-extrinsics"]], "Depth images": [[52, "depth-images"]], "Masks": [[52, "masks"]], "Using existing data": [[53, "using-existing-data"]], "Dataset Summary": [[53, "dataset-summary"]], "Scene Size: Number of RGB Images": [[53, "scene-size-number-of-rgb-images"]], "Scene RGB Resolutions: max(width, height)": [[53, "scene-rgb-resolutions-max-width-height"]], "Eyeful Tower": [[53, "eyeful-tower"]], "Export geometry": [[54, "export-geometry"]], "Exporting a mesh": [[54, "exporting-a-mesh"]], "1. TSDF Fusion": [[54, "tsdf-fusion"]], "2. Poisson surface reconstruction": [[54, "poisson-surface-reconstruction"]], "Exporting a point cloud": [[54, "exporting-a-point-cloud"]], "Other exporting methods": [[54, "other-exporting-methods"]], "Texturing an existing mesh with NeRF": [[54, "texturing-an-existing-mesh-with-nerf"]], "Dependencies": [[54, "dependencies"], [56, "dependencies"]], "Training your first model": [[55, "training-your-first-model"]], "Train and run viewer": [[55, "train-and-run-viewer"]], "Resume from checkpoint": [[55, "resume-from-checkpoint"]], "Visualize existing run": [[55, "visualize-existing-run"]], "Exporting Results": [[55, "exporting-results"]], "Render Video": [[55, "render-video"]], "Generate Point Cloud": [[55, "generate-point-cloud"]], "Intro to nerfstudio CLI and Configs": [[55, "intro-to-nerfstudio-cli-and-configs"]], "Comet / Tensorboard / WandB / Viewer": [[55, "comet-tensorboard-wandb-viewer"]], "Evaluating Runs": [[55, "evaluating-runs"]], "Multi-GPU Training": [[55, "multi-gpu-training"]], "Prerequisites": [[56, "prerequisites"], [56, "id2"], [56, "id3"]], "Create environment": [[56, "create-environment"]], "PyTorch": [[56, "pytorch"]], "Install tiny-cuda-nn": [[56, "install-tiny-cuda-nn"]], "Installing nerfstudio": [[56, "installing-nerfstudio"]], "Using Pixi": [[56, "using-pixi"]], "Install Pixi Environmnent": [[56, "install-pixi-environmnent"]], "Use docker image": [[56, "use-docker-image"]], "Using an interactive container": [[56, "using-an-interactive-container"]], "Call nerfstudio commands directly": [[56, "call-nerfstudio-commands-directly"]], "Installation FAQ": [[56, "installation-faq"]], "Using the viewer": [[57, "using-the-viewer"]], "Connecting to the viewer": [[57, "connecting-to-the-viewer"]], "Accessing on a local machine": [[57, "accessing-on-a-local-machine"]], "Accessing over an SSH connection": [[57, "accessing-over-an-ssh-connection"]], "Accessing via a share link": [[57, "accessing-via-a-share-link"]], "Legacy viewer tutorial video": [[57, "legacy-viewer-tutorial-video"]], "Getting started": [[57, "getting-started"]], "Viewer basics": [[57, "viewer-basics"]], "Creating camera trajectories": [[57, "creating-camera-trajectories"]], "Rendering a video": [[57, "rendering-a-video"]], "Cameras": [[58, "cameras"], [58, "id2"]], "Camera Optimizers": [[58, "camera-optimizers"]], "Camera Paths": [[58, "camera-paths"]], "Camera Utils": [[58, "camera-utils"]], "Lie Groups": [[58, "lie-groups"]], "Rays": [[58, "rays"]], "Configs": [[59, "configs"]], "Datamanagers": [[60, "datamanagers"]], "Base": [[60, "base"], [62, "base"], [64, "base"], [71, "base"], [77, "base"]], "Data Parsers": [[61, "data-parsers"]], "Base Data Parser": [[61, "base-data-parser"]], "ARKitScenes": [[61, "arkitscenes"]], "Blender": [[61, "blender"]], "D-NeRF": [[61, "d-nerf"]], "dycheck": [[61, "dycheck"]], "Minimal": [[61, "minimal"]], "NeRF-OSR": [[61, "nerf-osr"]], "Nerfstudio": [[61, "nerfstudio"]], "nuScenes": [[61, "nuscenes"]], "Phototourism": [[61, "phototourism"]], "ScanNet": [[61, "scannet"]], "sitcoms3D": [[61, "sitcoms3d"]], "Datasets": [[62, "datasets"]], "SDF Dataset": [[62, "sdf-dataset"]], "Semantic Dataset": [[62, "semantic-dataset"]], "Pixel Samplers": [[63, "pixel-samplers"]], "Scene Box": [[63, "scene-box"]], "Utils": [[64, "utils"], [82, "utils"]], "Dataloader": [[64, "dataloader"]], "Nerfstudio Collate": [[64, "nerfstudio-collate"]], "Embeddings": [[65, "embeddings"]], "Encodings": [[66, "encodings"]], "Field Heads": [[67, "field-heads"]], "Field Modules": [[68, "field-modules"]], "MLP": [[69, "mlp"]], "Density": [[71, "density"]], "Nerf-W": [[71, "nerf-w"]], "SDF": [[71, "sdf"]], "Semantic NeRF": [[71, "semantic-nerf"]], "Vanilla NeRF": [[71, "vanilla-nerf"]], "API": [[72, "api"]], "Losses": [[74, "losses"]], "Ray Sampler": [[75, "ray-sampler"]], "Renderers": [[76, "renderers"]], "Instant NGP": [[77, "instant-ngp"]], "Semantic NeRF-W": [[77, "semantic-nerf-w"]], "Engine": [[78, "engine"]], "Optimizers": [[78, "optimizers"]], "Schedulers": [[78, "schedulers"]], "Trainer": [[78, "trainer"]], "Callbacks": [[78, "callbacks"]], "Plugins": [[79, "plugins"]], "Method Registry": [[79, "method-registry"]], "DataParser Registry": [[79, "dataparser-registry"]], "Types": [[79, "types"]], "Colormaps": [[80, "colormaps"]], "Colors": [[81, "colors"]], "Math": [[83, "math"]], "TensorDataclass": [[84, "tensordataclass"]], "CLI": [[86, "cli"]], "Commands": [[86, "commands"]], "ns-download-data": [[87, "ns-download-data"]], "options": [[87, "options"], [88, "options"], [89, "options"], [90, "options"], [91, "options"], [92, "options"], [94, "options"]], "subcommands": [[87, "subcommands"], [89, "subcommands"], [91, "subcommands"], [92, "subcommands"]], "ns-eval": [[88, "ns-eval"]], "ns-export": [[89, "ns-export"]], "ns-install-cli": [[90, "ns-install-cli"]], "ns-process-data": [[91, "ns-process-data"]], "ns-render": [[92, "ns-render"]], "ns-train": [[93, "ns-train"]], "ns-viewer": [[94, "ns-viewer"]], "viewer options": [[94, "viewer options"]], "Contributing": [[95, "contributing"]], "Committing code": [[95, "committing-code"]], "Maintaining documentation": [[95, "maintaining-documentation"]], "Building": [[95, "building"]], "Auto build": [[95, "auto-build"]], "Adding notebooks": [[95, "adding-notebooks"]]}, "indexentries": {"cameraoptimizer (class in nerfstudio.cameras.camera_optimizers)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer"]], "cameraoptimizerconfig (class in nerfstudio.cameras.camera_optimizers)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig"]], "cameratype (class in nerfstudio.cameras.cameras)": [[58, "nerfstudio.cameras.cameras.CameraType"]], "cameras (class in nerfstudio.cameras.cameras)": [[58, "nerfstudio.cameras.cameras.Cameras"]], "frustums (class in nerfstudio.cameras.rays)": [[58, "nerfstudio.cameras.rays.Frustums"]], "raybundle (class in nerfstudio.cameras.rays)": [[58, "nerfstudio.cameras.rays.RayBundle"]], "raysamples (class in nerfstudio.cameras.rays)": [[58, "nerfstudio.cameras.rays.RaySamples"]], "apply_to_camera() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.apply_to_camera"]], "apply_to_raybundle() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.apply_to_raybundle"]], "auto_orient_and_center_poses() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.auto_orient_and_center_poses"]], "camera_indices (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.camera_indices"]], "camera_indices (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.camera_indices"]], "deltas (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.deltas"]], "device (nerfstudio.cameras.cameras.cameras property)": [[58, "nerfstudio.cameras.cameras.Cameras.device"]], "directions (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.directions"]], "directions (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.directions"]], "ends (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.ends"]], "exp_map_se3() (in module nerfstudio.cameras.lie_groups)": [[58, "nerfstudio.cameras.lie_groups.exp_map_SE3"]], "exp_map_so3xr3() (in module nerfstudio.cameras.lie_groups)": [[58, "nerfstudio.cameras.lie_groups.exp_map_SO3xR3"]], "fars (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.fars"]], "focus_of_attention() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.focus_of_attention"]], "forward() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.forward"]], "frustums (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.frustums"]], "generate_rays() (nerfstudio.cameras.cameras.cameras method)": [[58, "nerfstudio.cameras.cameras.Cameras.generate_rays"]], "get_correction_matrices() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_correction_matrices"]], "get_distortion_params() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_distortion_params"]], "get_gaussian_blob() (nerfstudio.cameras.rays.frustums method)": [[58, "nerfstudio.cameras.rays.Frustums.get_gaussian_blob"]], "get_image_coords() (nerfstudio.cameras.cameras.cameras method)": [[58, "nerfstudio.cameras.cameras.Cameras.get_image_coords"]], "get_interpolated_camera_path() (in module nerfstudio.cameras.camera_paths)": [[58, "nerfstudio.cameras.camera_paths.get_interpolated_camera_path"]], "get_interpolated_k() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_interpolated_k"]], "get_interpolated_poses() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_interpolated_poses"]], "get_interpolated_poses_many() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_interpolated_poses_many"]], "get_interpolated_time() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_interpolated_time"]], "get_intrinsics_matrices() (nerfstudio.cameras.cameras.cameras method)": [[58, "nerfstudio.cameras.cameras.Cameras.get_intrinsics_matrices"]], "get_loss_dict() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_loss_dict"]], "get_metrics_dict() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_metrics_dict"]], "get_mock_frustum() (nerfstudio.cameras.rays.frustums class method)": [[58, "nerfstudio.cameras.rays.Frustums.get_mock_frustum"]], "get_ordered_poses_and_k_and_time() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.get_ordered_poses_and_k_and_time"]], "get_param_groups() (nerfstudio.cameras.camera_optimizers.cameraoptimizer method)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizer.get_param_groups"]], "get_path_from_json() (in module nerfstudio.cameras.camera_paths)": [[58, "nerfstudio.cameras.camera_paths.get_path_from_json"]], "get_positions() (nerfstudio.cameras.rays.frustums method)": [[58, "nerfstudio.cameras.rays.Frustums.get_positions"]], "get_ray_samples() (nerfstudio.cameras.rays.raybundle method)": [[58, "nerfstudio.cameras.rays.RayBundle.get_ray_samples"]], "get_row_major_sliced_ray_bundle() (nerfstudio.cameras.rays.raybundle method)": [[58, "nerfstudio.cameras.rays.RayBundle.get_row_major_sliced_ray_bundle"]], "get_spiral_path() (in module nerfstudio.cameras.camera_paths)": [[58, "nerfstudio.cameras.camera_paths.get_spiral_path"]], "get_start_positions() (nerfstudio.cameras.rays.frustums method)": [[58, "nerfstudio.cameras.rays.Frustums.get_start_positions"]], "get_weights() (nerfstudio.cameras.rays.raysamples method)": [[58, "nerfstudio.cameras.rays.RaySamples.get_weights"]], "get_weights_and_transmittance_from_alphas() (nerfstudio.cameras.rays.raysamples static method)": [[58, "nerfstudio.cameras.rays.RaySamples.get_weights_and_transmittance_from_alphas"]], "image_height (nerfstudio.cameras.cameras.cameras property)": [[58, "nerfstudio.cameras.cameras.Cameras.image_height"]], "image_width (nerfstudio.cameras.cameras.cameras property)": [[58, "nerfstudio.cameras.cameras.Cameras.image_width"]], "is_jagged (nerfstudio.cameras.cameras.cameras property)": [[58, "nerfstudio.cameras.cameras.Cameras.is_jagged"]], "metadata (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.metadata"]], "metadata (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.metadata"]], "mode (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.mode"]], "module": [[58, "module-nerfstudio.cameras.camera_optimizers"], [58, "module-nerfstudio.cameras.camera_paths"], [58, "module-nerfstudio.cameras.camera_utils"], [58, "module-nerfstudio.cameras.cameras"], [58, "module-nerfstudio.cameras.lie_groups"], [58, "module-nerfstudio.cameras.rays"], [59, "module-nerfstudio.configs.base_config"], [60, "module-nerfstudio.data.datamanagers.base_datamanager"], [61, "module-nerfstudio.data.dataparsers.arkitscenes_dataparser"], [61, "module-nerfstudio.data.dataparsers.base_dataparser"], [61, "module-nerfstudio.data.dataparsers.blender_dataparser"], [61, "module-nerfstudio.data.dataparsers.dnerf_dataparser"], [61, "module-nerfstudio.data.dataparsers.dycheck_dataparser"], [61, "module-nerfstudio.data.dataparsers.instant_ngp_dataparser"], [61, "module-nerfstudio.data.dataparsers.minimal_dataparser"], [61, "module-nerfstudio.data.dataparsers.nerfosr_dataparser"], [61, "module-nerfstudio.data.dataparsers.nerfstudio_dataparser"], [61, "module-nerfstudio.data.dataparsers.nuscenes_dataparser"], [61, "module-nerfstudio.data.dataparsers.phototourism_dataparser"], [61, "module-nerfstudio.data.dataparsers.scannet_dataparser"], [61, "module-nerfstudio.data.dataparsers.sdfstudio_dataparser"], [61, "module-nerfstudio.data.dataparsers.sitcoms3d_dataparser"], [62, "module-nerfstudio.data.datasets.base_dataset"], [62, "module-nerfstudio.data.datasets.sdf_dataset"], [62, "module-nerfstudio.data.datasets.semantic_dataset"], [63, "module-nerfstudio.data.pixel_samplers"], [63, "module-nerfstudio.data.scene_box"], [64, "module-nerfstudio.data.utils.colmap_parsing_utils"], [64, "module-nerfstudio.data.utils.data_utils"], [64, "module-nerfstudio.data.utils.dataloaders"], [64, "module-nerfstudio.data.utils.nerfstudio_collate"], [65, "module-nerfstudio.field_components.embedding"], [66, "module-nerfstudio.field_components.encodings"], [67, "module-nerfstudio.field_components.field_heads"], [69, "module-nerfstudio.field_components.mlp"], [70, "module-nerfstudio.field_components.spatial_distortions"], [71, "module-nerfstudio.fields.base_field"], [71, "module-nerfstudio.fields.density_fields"], [71, "module-nerfstudio.fields.nerfacto_field"], [71, "module-nerfstudio.fields.nerfw_field"], [71, "module-nerfstudio.fields.sdf_field"], [71, "module-nerfstudio.fields.semantic_nerf_field"], [71, "module-nerfstudio.fields.tensorf_field"], [71, "module-nerfstudio.fields.vanilla_nerf_field"], [74, "module-nerfstudio.model_components.losses"], [75, "module-nerfstudio.model_components.ray_samplers"], [76, "module-nerfstudio.model_components.renderers"], [77, "module-nerfstudio.models.base_model"], [77, "module-nerfstudio.models.instant_ngp"], [77, "module-nerfstudio.models.semantic_nerfw"], [77, "module-nerfstudio.models.vanilla_nerf"], [78, "module-nerfstudio.engine.callbacks"], [78, "module-nerfstudio.engine.optimizers"], [78, "module-nerfstudio.engine.schedulers"], [78, "module-nerfstudio.engine.trainer"], [79, "module-nerfstudio.plugins.registry"], [79, "module-nerfstudio.plugins.registry_dataparser"], [79, "module-nerfstudio.plugins.types"], [80, "module-nerfstudio.utils.colormaps"], [81, "module-nerfstudio.utils.colors"], [83, "module-nerfstudio.utils.math"], [84, "module-nerfstudio.utils.tensor_dataclass"], [85, "module-nerfstudio.viewer.viewer_elements"]], "nears (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.nears"]], "nerfstudio.cameras.camera_optimizers": [[58, "module-nerfstudio.cameras.camera_optimizers"]], "nerfstudio.cameras.camera_paths": [[58, "module-nerfstudio.cameras.camera_paths"]], "nerfstudio.cameras.camera_utils": [[58, "module-nerfstudio.cameras.camera_utils"]], "nerfstudio.cameras.cameras": [[58, "module-nerfstudio.cameras.cameras"]], "nerfstudio.cameras.lie_groups": [[58, "module-nerfstudio.cameras.lie_groups"]], "nerfstudio.cameras.rays": [[58, "module-nerfstudio.cameras.rays"]], "normalize() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.normalize"]], "normalize_with_norm() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.normalize_with_norm"]], "offsets (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.offsets"]], "optimizer (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.optimizer"]], "origins (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.origins"]], "origins (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.origins"]], "pixel_area (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.pixel_area"]], "pixel_area (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.pixel_area"]], "quaternion_from_matrix() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.quaternion_from_matrix"]], "quaternion_matrix() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.quaternion_matrix"]], "quaternion_slerp() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.quaternion_slerp"]], "radial_and_tangential_undistort() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.radial_and_tangential_undistort"]], "rescale_output_resolution() (nerfstudio.cameras.cameras.cameras method)": [[58, "nerfstudio.cameras.cameras.Cameras.rescale_output_resolution"]], "rot_l2_penalty (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.rot_l2_penalty"]], "rotation_matrix_between() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.rotation_matrix_between"]], "sample() (nerfstudio.cameras.rays.raybundle method)": [[58, "nerfstudio.cameras.rays.RayBundle.sample"]], "scheduler (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.scheduler"]], "set_camera_indices() (nerfstudio.cameras.rays.raybundle method)": [[58, "nerfstudio.cameras.rays.RayBundle.set_camera_indices"]], "set_offsets() (nerfstudio.cameras.rays.frustums method)": [[58, "nerfstudio.cameras.rays.Frustums.set_offsets"]], "spacing_ends (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.spacing_ends"]], "spacing_starts (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.spacing_starts"]], "spacing_to_euclidean_fn (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.spacing_to_euclidean_fn"]], "starts (nerfstudio.cameras.rays.frustums attribute)": [[58, "nerfstudio.cameras.rays.Frustums.starts"]], "times (nerfstudio.cameras.rays.raybundle attribute)": [[58, "nerfstudio.cameras.rays.RayBundle.times"]], "times (nerfstudio.cameras.rays.raysamples attribute)": [[58, "nerfstudio.cameras.rays.RaySamples.times"]], "to_json() (nerfstudio.cameras.cameras.cameras method)": [[58, "nerfstudio.cameras.cameras.Cameras.to_json"]], "trans_l2_penalty (nerfstudio.cameras.camera_optimizers.cameraoptimizerconfig attribute)": [[58, "nerfstudio.cameras.camera_optimizers.CameraOptimizerConfig.trans_l2_penalty"]], "unit_vector() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.unit_vector"]], "viewmatrix() (in module nerfstudio.cameras.camera_utils)": [[58, "nerfstudio.cameras.camera_utils.viewmatrix"]], "instantiateconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.InstantiateConfig"]], "localwriterconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.LocalWriterConfig"]], "loggingconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.LoggingConfig"]], "machineconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.MachineConfig"]], "printableconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.PrintableConfig"]], "viewerconfig (class in nerfstudio.configs.base_config)": [[59, "nerfstudio.configs.base_config.ViewerConfig"]], "camera_frustum_scale (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.camera_frustum_scale"]], "default_composite_depth (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.default_composite_depth"]], "device_type (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.device_type"]], "dist_url (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.dist_url"]], "enable (nerfstudio.configs.base_config.localwriterconfig attribute)": [[59, "nerfstudio.configs.base_config.LocalWriterConfig.enable"]], "image_format (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.image_format"]], "jpeg_quality (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.jpeg_quality"]], "local_writer (nerfstudio.configs.base_config.loggingconfig attribute)": [[59, "nerfstudio.configs.base_config.LoggingConfig.local_writer"]], "machine_rank (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.machine_rank"]], "make_share_url (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.make_share_url"]], "max_buffer_size (nerfstudio.configs.base_config.loggingconfig attribute)": [[59, "nerfstudio.configs.base_config.LoggingConfig.max_buffer_size"]], "max_log_size (nerfstudio.configs.base_config.localwriterconfig attribute)": [[59, "nerfstudio.configs.base_config.LocalWriterConfig.max_log_size"]], "max_num_display_images (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.max_num_display_images"]], "nerfstudio.configs.base_config": [[59, "module-nerfstudio.configs.base_config"]], "num_devices (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.num_devices"]], "num_machines (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.num_machines"]], "num_rays_per_chunk (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.num_rays_per_chunk"]], "profiler (nerfstudio.configs.base_config.loggingconfig attribute)": [[59, "nerfstudio.configs.base_config.LoggingConfig.profiler"]], "quit_on_train_completion (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.quit_on_train_completion"]], "relative_log_dir (nerfstudio.configs.base_config.loggingconfig attribute)": [[59, "nerfstudio.configs.base_config.LoggingConfig.relative_log_dir"]], "relative_log_filename (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.relative_log_filename"]], "seed (nerfstudio.configs.base_config.machineconfig attribute)": [[59, "nerfstudio.configs.base_config.MachineConfig.seed"]], "setup() (nerfstudio.configs.base_config.instantiateconfig method)": [[59, "nerfstudio.configs.base_config.InstantiateConfig.setup"]], "setup() (nerfstudio.configs.base_config.localwriterconfig method)": [[59, "nerfstudio.configs.base_config.LocalWriterConfig.setup"]], "stats_to_track (nerfstudio.configs.base_config.localwriterconfig attribute)": [[59, "nerfstudio.configs.base_config.LocalWriterConfig.stats_to_track"]], "steps_per_log (nerfstudio.configs.base_config.loggingconfig attribute)": [[59, "nerfstudio.configs.base_config.LoggingConfig.steps_per_log"]], "websocket_host (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.websocket_host"]], "websocket_port (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.websocket_port"]], "websocket_port_default (nerfstudio.configs.base_config.viewerconfig attribute)": [[59, "nerfstudio.configs.base_config.ViewerConfig.websocket_port_default"]], "datamanager (class in nerfstudio.data.datamanagers.base_datamanager)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager"]], "datamanagerconfig (class in nerfstudio.data.datamanagers.base_datamanager)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig"]], "vanilladatamanager (class in nerfstudio.data.datamanagers.base_datamanager)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager"]], "vanilladatamanagerconfig (class in nerfstudio.data.datamanagers.base_datamanager)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig"]], "__post_init__() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.__post_init__"]], "cache_images_type (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.cache_images_type"]], "camera_optimizer (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.camera_optimizer"]], "camera_res_scale_factor (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.camera_res_scale_factor"]], "collate_fn() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig static method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.collate_fn"]], "create_eval_dataset() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.create_eval_dataset"]], "create_train_dataset() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.create_train_dataset"]], "data (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.data"]], "dataparser (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.dataparser"]], "dataset_type (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager property)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.dataset_type"]], "eval_count (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.eval_count"]], "eval_dataset (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.eval_dataset"]], "eval_image_indices (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_image_indices"]], "eval_num_images_to_sample_from (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_images_to_sample_from"]], "eval_num_rays_per_batch (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_rays_per_batch"]], "eval_num_times_to_repeat_images (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.eval_num_times_to_repeat_images"]], "forward() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.forward"]], "get_datapath() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_datapath"]], "get_datapath() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_datapath"]], "get_eval_iterable() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_eval_iterable"]], "get_eval_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_eval_rays_per_batch"]], "get_eval_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_eval_rays_per_batch"]], "get_param_groups() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_param_groups"]], "get_param_groups() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_param_groups"]], "get_train_iterable() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_train_iterable"]], "get_train_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_train_rays_per_batch"]], "get_train_rays_per_batch() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.get_train_rays_per_batch"]], "get_training_callbacks() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.get_training_callbacks"]], "images_on_gpu (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.images_on_gpu"]], "includes_time (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.includes_time"]], "iter_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.iter_eval"]], "iter_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.iter_train"]], "masks_on_gpu (nerfstudio.data.datamanagers.base_datamanager.datamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManagerConfig.masks_on_gpu"]], "nerfstudio.data.datamanagers.base_datamanager": [[60, "module-nerfstudio.data.datamanagers.base_datamanager"]], "next_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_eval"]], "next_eval() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_eval"]], "next_eval_image() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_eval_image"]], "next_eval_image() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_eval_image"]], "next_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.next_train"]], "next_train() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.next_train"]], "patch_size (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.patch_size"]], "pixel_sampler (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.pixel_sampler"]], "setup_eval() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.setup_eval"]], "setup_eval() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.setup_eval"]], "setup_train() (nerfstudio.data.datamanagers.base_datamanager.datamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.setup_train"]], "setup_train() (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanager method)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManager.setup_train"]], "train_count (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.train_count"]], "train_dataset (nerfstudio.data.datamanagers.base_datamanager.datamanager attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.DataManager.train_dataset"]], "train_num_images_to_sample_from (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_images_to_sample_from"]], "train_num_rays_per_batch (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_rays_per_batch"]], "train_num_times_to_repeat_images (nerfstudio.data.datamanagers.base_datamanager.vanilladatamanagerconfig attribute)": [[60, "nerfstudio.data.datamanagers.base_datamanager.VanillaDataManagerConfig.train_num_times_to_repeat_images"]], "arkitscenes (class in nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenes"]], "arkitscenesdataparserconfig (class in nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig"]], "blender (class in nerfstudio.data.dataparsers.blender_dataparser)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.Blender"]], "blenderdataparserconfig (class in nerfstudio.data.dataparsers.blender_dataparser)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig"]], "dnerf (class in nerfstudio.data.dataparsers.dnerf_dataparser)": [[61, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRF"]], "dnerfdataparserconfig (class in nerfstudio.data.dataparsers.dnerf_dataparser)": [[61, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig"]], "dataparser (class in nerfstudio.data.dataparsers.base_dataparser)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParser"]], "dataparserconfig (class in nerfstudio.data.dataparsers.base_dataparser)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig"]], "dataparseroutputs (class in nerfstudio.data.dataparsers.base_dataparser)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs"]], "dycheck (class in nerfstudio.data.dataparsers.dycheck_dataparser)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck"]], "dycheckdataparserconfig (class in nerfstudio.data.dataparsers.dycheck_dataparser)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig"]], "instantngp (class in nerfstudio.data.dataparsers.instant_ngp_dataparser)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP"]], "instantngpdataparserconfig (class in nerfstudio.data.dataparsers.instant_ngp_dataparser)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig"]], "minimaldataparser (class in nerfstudio.data.dataparsers.minimal_dataparser)": [[61, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParser"]], "minimaldataparserconfig (class in nerfstudio.data.dataparsers.minimal_dataparser)": [[61, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig"]], "nerfosr (class in nerfstudio.data.dataparsers.nerfosr_dataparser)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSR"]], "nerfosrdataparserconfig (class in nerfstudio.data.dataparsers.nerfosr_dataparser)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig"]], "nerfstudio (class in nerfstudio.data.dataparsers.nerfstudio_dataparser)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.Nerfstudio"]], "nerfstudiodataparserconfig (class in nerfstudio.data.dataparsers.nerfstudio_dataparser)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig"]], "nuscenes (class in nerfstudio.data.dataparsers.nuscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenes"]], "nuscenesdataparserconfig (class in nerfstudio.data.dataparsers.nuscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig"]], "phototourism (class in nerfstudio.data.dataparsers.phototourism_dataparser)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.Phototourism"]], "phototourismdataparserconfig (class in nerfstudio.data.dataparsers.phototourism_dataparser)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig"]], "sdfstudio (class in nerfstudio.data.dataparsers.sdfstudio_dataparser)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudio"]], "sdfstudiodataparserconfig (class in nerfstudio.data.dataparsers.sdfstudio_dataparser)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig"]], "scannet (class in nerfstudio.data.dataparsers.scannet_dataparser)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNet"]], "scannetdataparserconfig (class in nerfstudio.data.dataparsers.scannet_dataparser)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig"]], "semantics (class in nerfstudio.data.dataparsers.base_dataparser)": [[61, "nerfstudio.data.dataparsers.base_dataparser.Semantics"]], "sitcoms3d (class in nerfstudio.data.dataparsers.sitcoms3d_dataparser)": [[61, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3D"]], "sitcoms3ddataparserconfig (class in nerfstudio.data.dataparsers.sitcoms3d_dataparser)": [[61, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig"]], "alpha_color (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.alpha_color"]], "alpha_color (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.alpha_color"]], "as_dict() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.as_dict"]], "auto_scale_poses (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.auto_scale_poses"]], "auto_scale_poses (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.auto_scale_poses"]], "cameras (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.cameras"]], "cameras (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.cameras"]], "center_method (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.center_method"]], "center_method (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.center_method"]], "classes (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.Semantics.classes"]], "colors (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.Semantics.colors"]], "config (nerfstudio.data.dataparsers.base_dataparser.dataparser attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParser.config"]], "data (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.base_dataparser.dataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParserConfig.data"]], "data (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.minimal_dataparser.minimaldataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.minimal_dataparser.MinimalDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.data"]], "data (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.data"]], "data_dir (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.data_dir"]], "dataparser_scale (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.dataparser_scale"]], "dataparser_transform (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.dataparser_transform"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.depth_unit_scale_factor"]], "depth_unit_scale_factor (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.depth_unit_scale_factor"]], "downscale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.downscale"]], "downscale_factor (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.downscale_factor"]], "downscale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.downscale_factor"]], "eval_interval (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.eval_interval"]], "eval_interval (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.eval_interval"]], "eval_mode (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.eval_mode"]], "eval_mode (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.eval_mode"]], "filenames (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.Semantics.filenames"]], "get_camera_params() (in module nerfstudio.data.dataparsers.nerfosr_dataparser)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.get_camera_params"]], "get_dataparser_outputs() (nerfstudio.data.dataparsers.base_dataparser.dataparser method)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParser.get_dataparser_outputs"]], "get_focal_lengths() (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngp class method)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGP.get_focal_lengths"]], "image_filenames (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.image_filenames"]], "include_foreground_mask (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.include_foreground_mask"]], "include_mono_prior (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.include_mono_prior"]], "include_semantics (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.include_semantics"]], "includes_time (nerfstudio.data.dataparsers.base_dataparser.dataparser attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataParser.includes_time"]], "load_3d_points (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.load_3D_points"]], "load_3d_points (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.load_3D_points"]], "mask_classes (nerfstudio.data.dataparsers.base_dataparser.semantics attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.Semantics.mask_classes"]], "mask_color (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.mask_color"]], "mask_dir (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.mask_dir"]], "mask_filenames (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.mask_filenames"]], "metadata (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.metadata"]], "nerfstudio.data.dataparsers.arkitscenes_dataparser": [[61, "module-nerfstudio.data.dataparsers.arkitscenes_dataparser"]], "nerfstudio.data.dataparsers.base_dataparser": [[61, "module-nerfstudio.data.dataparsers.base_dataparser"]], "nerfstudio.data.dataparsers.blender_dataparser": [[61, "module-nerfstudio.data.dataparsers.blender_dataparser"]], "nerfstudio.data.dataparsers.dnerf_dataparser": [[61, "module-nerfstudio.data.dataparsers.dnerf_dataparser"]], "nerfstudio.data.dataparsers.dycheck_dataparser": [[61, "module-nerfstudio.data.dataparsers.dycheck_dataparser"]], "nerfstudio.data.dataparsers.instant_ngp_dataparser": [[61, "module-nerfstudio.data.dataparsers.instant_ngp_dataparser"]], "nerfstudio.data.dataparsers.minimal_dataparser": [[61, "module-nerfstudio.data.dataparsers.minimal_dataparser"]], "nerfstudio.data.dataparsers.nerfosr_dataparser": [[61, "module-nerfstudio.data.dataparsers.nerfosr_dataparser"]], "nerfstudio.data.dataparsers.nerfstudio_dataparser": [[61, "module-nerfstudio.data.dataparsers.nerfstudio_dataparser"]], "nerfstudio.data.dataparsers.nuscenes_dataparser": [[61, "module-nerfstudio.data.dataparsers.nuscenes_dataparser"]], "nerfstudio.data.dataparsers.phototourism_dataparser": [[61, "module-nerfstudio.data.dataparsers.phototourism_dataparser"]], "nerfstudio.data.dataparsers.scannet_dataparser": [[61, "module-nerfstudio.data.dataparsers.scannet_dataparser"]], "nerfstudio.data.dataparsers.sdfstudio_dataparser": [[61, "module-nerfstudio.data.dataparsers.sdfstudio_dataparser"]], "nerfstudio.data.dataparsers.sitcoms3d_dataparser": [[61, "module-nerfstudio.data.dataparsers.sitcoms3d_dataparser"]], "orientation_method (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.orientation_method"]], "orientation_method (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.orientation_method"]], "orientation_method (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.orientation_method"]], "ply_file_path (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.ply_file_path"]], "ply_path (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.ply_path"]], "point_cloud_color (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.point_cloud_color"]], "process_frames() (nerfstudio.data.dataparsers.dycheck_dataparser.dycheck method)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.Dycheck.process_frames"]], "rescale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.rescale"]], "rotation_translation_to_pose() (in module nerfstudio.data.dataparsers.nuscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.rotation_translation_to_pose"]], "save_dataparser_transform() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.save_dataparser_transform"]], "scale_factor (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.blender_dataparser.blenderdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.blender_dataparser.BlenderDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.dnerf_dataparser.dnerfdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dnerf_dataparser.DNeRFDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.scale_factor"]], "scale_factor (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.scale_factor"]], "scene (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scene"]], "scene_box (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs attribute)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.scene_box"]], "scene_box_bound (nerfstudio.data.dataparsers.dycheck_dataparser.dycheckdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.DycheckDataParserConfig.scene_box_bound"]], "scene_scale (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.scene_scale"]], "scene_scale (nerfstudio.data.dataparsers.sitcoms3d_dataparser.sitcoms3ddataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sitcoms3d_dataparser.Sitcoms3DDataParserConfig.scene_scale"]], "skip_every_for_val_split (nerfstudio.data.dataparsers.sdfstudio_dataparser.sdfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.sdfstudio_dataparser.SDFStudioDataParserConfig.skip_every_for_val_split"]], "train_split_fraction (nerfstudio.data.dataparsers.arkitscenes_dataparser.arkitscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.ARKitScenesDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.instant_ngp_dataparser.instantngpdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.instant_ngp_dataparser.InstantNGPDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.nerfstudio_dataparser.nerfstudiodataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfstudio_dataparser.NerfstudioDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.phototourism_dataparser.phototourismdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.phototourism_dataparser.PhototourismDataParserConfig.train_split_fraction"]], "train_split_fraction (nerfstudio.data.dataparsers.scannet_dataparser.scannetdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.scannet_dataparser.ScanNetDataParserConfig.train_split_fraction"]], "traj_string_to_matrix() (in module nerfstudio.data.dataparsers.arkitscenes_dataparser)": [[61, "nerfstudio.data.dataparsers.arkitscenes_dataparser.traj_string_to_matrix"]], "transform_poses_to_original_space() (in module nerfstudio.data.dataparsers.base_dataparser)": [[61, "nerfstudio.data.dataparsers.base_dataparser.transform_poses_to_original_space"]], "transform_poses_to_original_space() (nerfstudio.data.dataparsers.base_dataparser.dataparseroutputs method)": [[61, "nerfstudio.data.dataparsers.base_dataparser.DataparserOutputs.transform_poses_to_original_space"]], "upscale() (in module nerfstudio.data.dataparsers.dycheck_dataparser)": [[61, "nerfstudio.data.dataparsers.dycheck_dataparser.upscale"]], "use_masks (nerfstudio.data.dataparsers.nerfosr_dataparser.nerfosrdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nerfosr_dataparser.NeRFOSRDataParserConfig.use_masks"]], "verbose (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.verbose"]], "version (nerfstudio.data.dataparsers.nuscenes_dataparser.nuscenesdataparserconfig attribute)": [[61, "nerfstudio.data.dataparsers.nuscenes_dataparser.NuScenesDataParserConfig.version"]], "inputdataset (class in nerfstudio.data.datasets.base_dataset)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset"]], "sdfdataset (class in nerfstudio.data.datasets.sdf_dataset)": [[62, "nerfstudio.data.datasets.sdf_dataset.SDFDataset"]], "semanticdataset (class in nerfstudio.data.datasets.semantic_dataset)": [[62, "nerfstudio.data.datasets.semantic_dataset.SemanticDataset"]], "cache_compressed_images (nerfstudio.data.datasets.base_dataset.inputdataset attribute)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.cache_compressed_images"]], "get_data() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.get_data"]], "get_depths_and_normals() (nerfstudio.data.datasets.sdf_dataset.sdfdataset method)": [[62, "nerfstudio.data.datasets.sdf_dataset.SDFDataset.get_depths_and_normals"]], "get_image_float32() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.get_image_float32"]], "get_image_uint8() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.get_image_uint8"]], "get_metadata() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.get_metadata"]], "get_metadata() (nerfstudio.data.datasets.sdf_dataset.sdfdataset method)": [[62, "nerfstudio.data.datasets.sdf_dataset.SDFDataset.get_metadata"]], "get_metadata() (nerfstudio.data.datasets.semantic_dataset.semanticdataset method)": [[62, "nerfstudio.data.datasets.semantic_dataset.SemanticDataset.get_metadata"]], "get_numpy_image() (nerfstudio.data.datasets.base_dataset.inputdataset method)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.get_numpy_image"]], "image_filenames (nerfstudio.data.datasets.base_dataset.inputdataset property)": [[62, "nerfstudio.data.datasets.base_dataset.InputDataset.image_filenames"]], "nerfstudio.data.datasets.base_dataset": [[62, "module-nerfstudio.data.datasets.base_dataset"]], "nerfstudio.data.datasets.sdf_dataset": [[62, "module-nerfstudio.data.datasets.sdf_dataset"]], "nerfstudio.data.datasets.semantic_dataset": [[62, "module-nerfstudio.data.datasets.semantic_dataset"]], "orientedbox (class in nerfstudio.data.scene_box)": [[63, "nerfstudio.data.scene_box.OrientedBox"]], "pairpixelsampler (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSampler"]], "pairpixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig"]], "patchpixelsampler (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSampler"]], "patchpixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig"]], "pixelsampler (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler"]], "pixelsamplerconfig (class in nerfstudio.data.pixel_samplers)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig"]], "r (nerfstudio.data.scene_box.orientedbox attribute)": [[63, "nerfstudio.data.scene_box.OrientedBox.R"]], "s (nerfstudio.data.scene_box.orientedbox attribute)": [[63, "nerfstudio.data.scene_box.OrientedBox.S"]], "scenebox (class in nerfstudio.data.scene_box)": [[63, "nerfstudio.data.scene_box.SceneBox"]], "t (nerfstudio.data.scene_box.orientedbox attribute)": [[63, "nerfstudio.data.scene_box.OrientedBox.T"]], "aabb (nerfstudio.data.scene_box.scenebox attribute)": [[63, "nerfstudio.data.scene_box.SceneBox.aabb"]], "collate_image_dataset_batch() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.collate_image_dataset_batch"]], "collate_image_dataset_batch_list() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.collate_image_dataset_batch_list"]], "fisheye_crop_radius (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.fisheye_crop_radius"]], "from_camera_poses() (nerfstudio.data.scene_box.scenebox static method)": [[63, "nerfstudio.data.scene_box.SceneBox.from_camera_poses"]], "from_params() (nerfstudio.data.scene_box.orientedbox static method)": [[63, "nerfstudio.data.scene_box.OrientedBox.from_params"]], "get_center() (nerfstudio.data.scene_box.scenebox method)": [[63, "nerfstudio.data.scene_box.SceneBox.get_center"]], "get_centered_and_scaled_scene_box() (nerfstudio.data.scene_box.scenebox method)": [[63, "nerfstudio.data.scene_box.SceneBox.get_centered_and_scaled_scene_box"]], "get_diagonal_length() (nerfstudio.data.scene_box.scenebox method)": [[63, "nerfstudio.data.scene_box.SceneBox.get_diagonal_length"]], "get_normalized_positions() (nerfstudio.data.scene_box.scenebox static method)": [[63, "nerfstudio.data.scene_box.SceneBox.get_normalized_positions"]], "ignore_mask (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.ignore_mask"]], "is_equirectangular (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.is_equirectangular"]], "keep_full_image (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.keep_full_image"]], "max_num_iterations (nerfstudio.data.pixel_samplers.pairpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig.max_num_iterations"]], "max_num_iterations (nerfstudio.data.pixel_samplers.patchpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig.max_num_iterations"]], "max_num_iterations (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.max_num_iterations"]], "nerfstudio.data.pixel_samplers": [[63, "module-nerfstudio.data.pixel_samplers"]], "nerfstudio.data.scene_box": [[63, "module-nerfstudio.data.scene_box"]], "num_rays_per_batch (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.num_rays_per_batch"]], "patch_size (nerfstudio.data.pixel_samplers.patchpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig.patch_size"]], "radius (nerfstudio.data.pixel_samplers.pairpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig.radius"]], "rejection_sample_mask (nerfstudio.data.pixel_samplers.pairpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSamplerConfig.rejection_sample_mask"]], "rejection_sample_mask (nerfstudio.data.pixel_samplers.patchpixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSamplerConfig.rejection_sample_mask"]], "rejection_sample_mask (nerfstudio.data.pixel_samplers.pixelsamplerconfig attribute)": [[63, "nerfstudio.data.pixel_samplers.PixelSamplerConfig.rejection_sample_mask"]], "rejection_sample_mask() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.rejection_sample_mask"]], "sample() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.sample"]], "sample_method() (nerfstudio.data.pixel_samplers.pairpixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PairPixelSampler.sample_method"]], "sample_method() (nerfstudio.data.pixel_samplers.patchpixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSampler.sample_method"]], "sample_method() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.sample_method"]], "set_num_rays_per_batch() (nerfstudio.data.pixel_samplers.patchpixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PatchPixelSampler.set_num_rays_per_batch"]], "set_num_rays_per_batch() (nerfstudio.data.pixel_samplers.pixelsampler method)": [[63, "nerfstudio.data.pixel_samplers.PixelSampler.set_num_rays_per_batch"]], "within() (nerfstudio.data.scene_box.orientedbox method)": [[63, "nerfstudio.data.scene_box.OrientedBox.within"]], "within() (nerfstudio.data.scene_box.scenebox method)": [[63, "nerfstudio.data.scene_box.SceneBox.within"]], "baseimage (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.BaseImage"]], "cachedataloader (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.CacheDataloader"]], "camera (class in nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera"]], "cameramodel (class in nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel"]], "evaldataloader (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.EvalDataloader"]], "fixedindicesevaldataloader (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.FixedIndicesEvalDataloader"]], "image (class in nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Image"]], "imagebatchstream (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.ImageBatchStream"]], "point3d (class in nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D"]], "randindicesevaldataloader (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.RandIndicesEvalDataloader"]], "raybatchstream (class in nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream"]], "__iter__() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[64, "nerfstudio.data.utils.dataloaders.EvalDataloader.__iter__"]], "__iter__() (nerfstudio.data.utils.dataloaders.raybatchstream method)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.__iter__"]], "__next__() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[64, "nerfstudio.data.utils.dataloaders.EvalDataloader.__next__"]], "collate_fn (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.collate_fn"]], "device (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.device"]], "error (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.error"]], "exclude_batch_keys_from_device (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.exclude_batch_keys_from_device"]], "get_camera() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[64, "nerfstudio.data.utils.dataloaders.EvalDataloader.get_camera"]], "get_data_from_image_idx() (nerfstudio.data.utils.dataloaders.evaldataloader method)": [[64, "nerfstudio.data.utils.dataloaders.EvalDataloader.get_data_from_image_idx"]], "get_depth_image_from_path() (in module nerfstudio.data.utils.data_utils)": [[64, "nerfstudio.data.utils.data_utils.get_depth_image_from_path"]], "get_image_mask_tensor_from_path() (in module nerfstudio.data.utils.data_utils)": [[64, "nerfstudio.data.utils.data_utils.get_image_mask_tensor_from_path"]], "get_semantics_and_mask_tensors_from_path() (in module nerfstudio.data.utils.data_utils)": [[64, "nerfstudio.data.utils.data_utils.get_semantics_and_mask_tensors_from_path"]], "height (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera.height"]], "id (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera.id"]], "id (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.id"]], "identity_collate() (in module nerfstudio.data.utils.data_utils)": [[64, "nerfstudio.data.utils.data_utils.identity_collate"]], "image_ids (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.image_ids"]], "load_from_disk (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.load_from_disk"]], "model (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera.model"]], "model_id (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.model_id"]], "model_name (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.model_name"]], "nerfstudio.data.utils.colmap_parsing_utils": [[64, "module-nerfstudio.data.utils.colmap_parsing_utils"]], "nerfstudio.data.utils.data_utils": [[64, "module-nerfstudio.data.utils.data_utils"]], "nerfstudio.data.utils.dataloaders": [[64, "module-nerfstudio.data.utils.dataloaders"]], "nerfstudio.data.utils.nerfstudio_collate": [[64, "module-nerfstudio.data.utils.nerfstudio_collate"]], "nerfstudio_collate() (in module nerfstudio.data.utils.nerfstudio_collate)": [[64, "nerfstudio.data.utils.nerfstudio_collate.nerfstudio_collate"]], "num_image_load_threads (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.num_image_load_threads"]], "num_images_to_sample_from (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.num_images_to_sample_from"]], "num_params (nerfstudio.data.utils.colmap_parsing_utils.cameramodel attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.CameraModel.num_params"]], "num_rays_per_batch (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.num_rays_per_batch"]], "num_times_to_repeat_images (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.num_times_to_repeat_images"]], "params (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera.params"]], "patch_size (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.patch_size"]], "pil_to_numpy() (in module nerfstudio.data.utils.data_utils)": [[64, "nerfstudio.data.utils.data_utils.pil_to_numpy"]], "pixel_sampler_config (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.pixel_sampler_config"]], "point2d_idxs (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.point2D_idxs"]], "ray_generator (nerfstudio.data.utils.dataloaders.raybatchstream attribute)": [[64, "nerfstudio.data.utils.dataloaders.RayBatchStream.ray_generator"]], "read_cameras_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_cameras_binary"]], "read_cameras_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_cameras_text"]], "read_images_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_images_binary"]], "read_images_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_images_text"]], "read_next_bytes() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_next_bytes"]], "read_points3d_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_points3D_binary"]], "read_points3d_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.read_points3D_text"]], "rgb (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.rgb"]], "undistort_view() (in module nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.undistort_view"]], "variable_res_collate() (in module nerfstudio.data.utils.dataloaders)": [[64, "nerfstudio.data.utils.dataloaders.variable_res_collate"]], "width (nerfstudio.data.utils.colmap_parsing_utils.camera attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Camera.width"]], "write_cameras_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_cameras_binary"]], "write_cameras_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_cameras_text"]], "write_images_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_images_binary"]], "write_images_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_images_text"]], "write_next_bytes() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_next_bytes"]], "write_points3d_binary() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_points3D_binary"]], "write_points3d_text() (in module nerfstudio.data.utils.colmap_parsing_utils)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.write_points3D_text"]], "xyz (nerfstudio.data.utils.colmap_parsing_utils.point3d attribute)": [[64, "nerfstudio.data.utils.colmap_parsing_utils.Point3D.xyz"]], "embedding (class in nerfstudio.field_components.embedding)": [[65, "nerfstudio.field_components.embedding.Embedding"]], "build_nn_modules() (nerfstudio.field_components.embedding.embedding method)": [[65, "nerfstudio.field_components.embedding.Embedding.build_nn_modules"]], "forward() (nerfstudio.field_components.embedding.embedding method)": [[65, "nerfstudio.field_components.embedding.Embedding.forward"]], "mean() (nerfstudio.field_components.embedding.embedding method)": [[65, "nerfstudio.field_components.embedding.Embedding.mean"]], "nerfstudio.field_components.embedding": [[65, "module-nerfstudio.field_components.embedding"]], "encoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.Encoding"]], "ffencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.FFEncoding"]], "hashencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.HashEncoding"]], "identity (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.Identity"]], "kplanesencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.KPlanesEncoding"]], "nerfencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.NeRFEncoding"]], "polyhedronffencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.PolyhedronFFEncoding"]], "rffencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.RFFEncoding"]], "shencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.SHEncoding"]], "scalingandoffset (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.ScalingAndOffset"]], "tensorcpencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.TensorCPEncoding"]], "tensorvmencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.TensorVMEncoding"]], "triplaneencoding (class in nerfstudio.field_components.encodings)": [[66, "nerfstudio.field_components.encodings.TriplaneEncoding"]], "build_nn_modules() (nerfstudio.field_components.encodings.hashencoding method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.build_nn_modules"]], "forward() (nerfstudio.field_components.encodings.encoding method)": [[66, "nerfstudio.field_components.encodings.Encoding.forward"]], "forward() (nerfstudio.field_components.encodings.ffencoding method)": [[66, "nerfstudio.field_components.encodings.FFEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.hashencoding method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.identity method)": [[66, "nerfstudio.field_components.encodings.Identity.forward"]], "forward() (nerfstudio.field_components.encodings.kplanesencoding method)": [[66, "nerfstudio.field_components.encodings.KPlanesEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.nerfencoding method)": [[66, "nerfstudio.field_components.encodings.NeRFEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.shencoding method)": [[66, "nerfstudio.field_components.encodings.SHEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.scalingandoffset method)": [[66, "nerfstudio.field_components.encodings.ScalingAndOffset.forward"]], "forward() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[66, "nerfstudio.field_components.encodings.TensorCPEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[66, "nerfstudio.field_components.encodings.TensorVMEncoding.forward"]], "forward() (nerfstudio.field_components.encodings.triplaneencoding method)": [[66, "nerfstudio.field_components.encodings.TriplaneEncoding.forward"]], "get_out_dim() (nerfstudio.field_components.encodings.ffencoding method)": [[66, "nerfstudio.field_components.encodings.FFEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.hashencoding method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.identity method)": [[66, "nerfstudio.field_components.encodings.Identity.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.kplanesencoding method)": [[66, "nerfstudio.field_components.encodings.KPlanesEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.nerfencoding method)": [[66, "nerfstudio.field_components.encodings.NeRFEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.shencoding method)": [[66, "nerfstudio.field_components.encodings.SHEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.scalingandoffset method)": [[66, "nerfstudio.field_components.encodings.ScalingAndOffset.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[66, "nerfstudio.field_components.encodings.TensorCPEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[66, "nerfstudio.field_components.encodings.TensorVMEncoding.get_out_dim"]], "get_out_dim() (nerfstudio.field_components.encodings.triplaneencoding method)": [[66, "nerfstudio.field_components.encodings.TriplaneEncoding.get_out_dim"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.encoding class method)": [[66, "nerfstudio.field_components.encodings.Encoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.hashencoding class method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.nerfencoding class method)": [[66, "nerfstudio.field_components.encodings.NeRFEncoding.get_tcnn_encoding_config"]], "get_tcnn_encoding_config() (nerfstudio.field_components.encodings.shencoding class method)": [[66, "nerfstudio.field_components.encodings.SHEncoding.get_tcnn_encoding_config"]], "hash_fn() (nerfstudio.field_components.encodings.hashencoding method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.hash_fn"]], "nerfstudio.field_components.encodings": [[66, "module-nerfstudio.field_components.encodings"]], "pytorch_fwd() (nerfstudio.field_components.encodings.hashencoding method)": [[66, "nerfstudio.field_components.encodings.HashEncoding.pytorch_fwd"]], "pytorch_fwd() (nerfstudio.field_components.encodings.nerfencoding method)": [[66, "nerfstudio.field_components.encodings.NeRFEncoding.pytorch_fwd"]], "pytorch_fwd() (nerfstudio.field_components.encodings.shencoding method)": [[66, "nerfstudio.field_components.encodings.SHEncoding.pytorch_fwd"]], "upsample_grid() (nerfstudio.field_components.encodings.tensorcpencoding method)": [[66, "nerfstudio.field_components.encodings.TensorCPEncoding.upsample_grid"]], "upsample_grid() (nerfstudio.field_components.encodings.tensorvmencoding method)": [[66, "nerfstudio.field_components.encodings.TensorVMEncoding.upsample_grid"]], "upsample_grid() (nerfstudio.field_components.encodings.triplaneencoding method)": [[66, "nerfstudio.field_components.encodings.TriplaneEncoding.upsample_grid"]], "densityfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.DensityFieldHead"]], "fieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.FieldHead"]], "fieldheadnames (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.FieldHeadNames"]], "prednormalsfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.PredNormalsFieldHead"]], "rgbfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.RGBFieldHead"]], "shfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.SHFieldHead"]], "semanticfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.SemanticFieldHead"]], "transientdensityfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.TransientDensityFieldHead"]], "transientrgbfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.TransientRGBFieldHead"]], "uncertaintyfieldhead (class in nerfstudio.field_components.field_heads)": [[67, "nerfstudio.field_components.field_heads.UncertaintyFieldHead"]], "forward() (nerfstudio.field_components.field_heads.fieldhead method)": [[67, "nerfstudio.field_components.field_heads.FieldHead.forward"]], "forward() (nerfstudio.field_components.field_heads.prednormalsfieldhead method)": [[67, "nerfstudio.field_components.field_heads.PredNormalsFieldHead.forward"]], "nerfstudio.field_components.field_heads": [[67, "module-nerfstudio.field_components.field_heads"]], "set_in_dim() (nerfstudio.field_components.field_heads.fieldhead method)": [[67, "nerfstudio.field_components.field_heads.FieldHead.set_in_dim"]], "mlp (class in nerfstudio.field_components.mlp)": [[69, "nerfstudio.field_components.mlp.MLP"]], "mlpwithhashencoding (class in nerfstudio.field_components.mlp)": [[69, "nerfstudio.field_components.mlp.MLPWithHashEncoding"]], "activation_to_tcnn_string() (in module nerfstudio.field_components.mlp)": [[69, "nerfstudio.field_components.mlp.activation_to_tcnn_string"]], "build_nn_modules() (nerfstudio.field_components.mlp.mlp method)": [[69, "nerfstudio.field_components.mlp.MLP.build_nn_modules"]], "build_nn_modules() (nerfstudio.field_components.mlp.mlpwithhashencoding method)": [[69, "nerfstudio.field_components.mlp.MLPWithHashEncoding.build_nn_modules"]], "forward() (nerfstudio.field_components.mlp.mlp method)": [[69, "nerfstudio.field_components.mlp.MLP.forward"]], "forward() (nerfstudio.field_components.mlp.mlpwithhashencoding method)": [[69, "nerfstudio.field_components.mlp.MLPWithHashEncoding.forward"]], "get_tcnn_network_config() (nerfstudio.field_components.mlp.mlp class method)": [[69, "nerfstudio.field_components.mlp.MLP.get_tcnn_network_config"]], "nerfstudio.field_components.mlp": [[69, "module-nerfstudio.field_components.mlp"]], "pytorch_fwd() (nerfstudio.field_components.mlp.mlp method)": [[69, "nerfstudio.field_components.mlp.MLP.pytorch_fwd"]], "scenecontraction (class in nerfstudio.field_components.spatial_distortions)": [[70, "nerfstudio.field_components.spatial_distortions.SceneContraction"]], "spatialdistortion (class in nerfstudio.field_components.spatial_distortions)": [[70, "nerfstudio.field_components.spatial_distortions.SpatialDistortion"]], "forward() (nerfstudio.field_components.spatial_distortions.scenecontraction method)": [[70, "nerfstudio.field_components.spatial_distortions.SceneContraction.forward"]], "forward() (nerfstudio.field_components.spatial_distortions.spatialdistortion method)": [[70, "nerfstudio.field_components.spatial_distortions.SpatialDistortion.forward"]], "nerfstudio.field_components.spatial_distortions": [[70, "module-nerfstudio.field_components.spatial_distortions"]], "field (class in nerfstudio.fields.base_field)": [[71, "nerfstudio.fields.base_field.Field"]], "fieldconfig (class in nerfstudio.fields.base_field)": [[71, "nerfstudio.fields.base_field.FieldConfig"]], "hashmlpdensityfield (class in nerfstudio.fields.density_fields)": [[71, "nerfstudio.fields.density_fields.HashMLPDensityField"]], "learnedvariance (class in nerfstudio.fields.sdf_field)": [[71, "nerfstudio.fields.sdf_field.LearnedVariance"]], "nerffield (class in nerfstudio.fields.vanilla_nerf_field)": [[71, "nerfstudio.fields.vanilla_nerf_field.NeRFField"]], "nerfactofield (class in nerfstudio.fields.nerfacto_field)": [[71, "nerfstudio.fields.nerfacto_field.NerfactoField"]], "sdffield (class in nerfstudio.fields.sdf_field)": [[71, "nerfstudio.fields.sdf_field.SDFField"]], "sdffieldconfig (class in nerfstudio.fields.sdf_field)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig"]], "semanticnerffield (class in nerfstudio.fields.semantic_nerf_field)": [[71, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField"]], "tensorffield (class in nerfstudio.fields.tensorf_field)": [[71, "nerfstudio.fields.tensorf_field.TensoRFField"]], "vanillanerfwfield (class in nerfstudio.fields.nerfw_field)": [[71, "nerfstudio.fields.nerfw_field.VanillaNerfWField"]], "appearance_embedding_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.appearance_embedding_dim"]], "base_res (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.base_res"]], "beta_init (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.beta_init"]], "bias (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.bias"]], "density_fn() (nerfstudio.fields.base_field.field method)": [[71, "nerfstudio.fields.base_field.Field.density_fn"]], "divide_factor (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.divide_factor"]], "features_per_level (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.features_per_level"]], "forward() (nerfstudio.fields.base_field.field method)": [[71, "nerfstudio.fields.base_field.Field.forward"]], "forward() (nerfstudio.fields.sdf_field.learnedvariance method)": [[71, "nerfstudio.fields.sdf_field.LearnedVariance.forward"]], "forward() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.forward"]], "forward() (nerfstudio.fields.tensorf_field.tensorffield method)": [[71, "nerfstudio.fields.tensorf_field.TensoRFField.forward"]], "forward_geonetwork() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.forward_geonetwork"]], "geo_feat_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.geo_feat_dim"]], "geometric_init (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.geometric_init"]], "get_alpha() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.get_alpha"]], "get_colors() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.get_colors"]], "get_density() (nerfstudio.fields.base_field.field method)": [[71, "nerfstudio.fields.base_field.Field.get_density"]], "get_density() (nerfstudio.fields.density_fields.hashmlpdensityfield method)": [[71, "nerfstudio.fields.density_fields.HashMLPDensityField.get_density"]], "get_density() (nerfstudio.fields.nerfacto_field.nerfactofield method)": [[71, "nerfstudio.fields.nerfacto_field.NerfactoField.get_density"]], "get_density() (nerfstudio.fields.nerfw_field.vanillanerfwfield method)": [[71, "nerfstudio.fields.nerfw_field.VanillaNerfWField.get_density"]], "get_density() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.get_density"]], "get_density() (nerfstudio.fields.semantic_nerf_field.semanticnerffield method)": [[71, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField.get_density"]], "get_density() (nerfstudio.fields.tensorf_field.tensorffield method)": [[71, "nerfstudio.fields.tensorf_field.TensoRFField.get_density"]], "get_density() (nerfstudio.fields.vanilla_nerf_field.nerffield method)": [[71, "nerfstudio.fields.vanilla_nerf_field.NeRFField.get_density"]], "get_normalized_directions() (in module nerfstudio.fields.base_field)": [[71, "nerfstudio.fields.base_field.get_normalized_directions"]], "get_normals() (nerfstudio.fields.base_field.field method)": [[71, "nerfstudio.fields.base_field.Field.get_normals"]], "get_outputs() (nerfstudio.fields.base_field.field method)": [[71, "nerfstudio.fields.base_field.Field.get_outputs"]], "get_outputs() (nerfstudio.fields.density_fields.hashmlpdensityfield method)": [[71, "nerfstudio.fields.density_fields.HashMLPDensityField.get_outputs"]], "get_outputs() (nerfstudio.fields.nerfacto_field.nerfactofield method)": [[71, "nerfstudio.fields.nerfacto_field.NerfactoField.get_outputs"]], "get_outputs() (nerfstudio.fields.nerfw_field.vanillanerfwfield method)": [[71, "nerfstudio.fields.nerfw_field.VanillaNerfWField.get_outputs"]], "get_outputs() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.get_outputs"]], "get_outputs() (nerfstudio.fields.semantic_nerf_field.semanticnerffield method)": [[71, "nerfstudio.fields.semantic_nerf_field.SemanticNerfField.get_outputs"]], "get_outputs() (nerfstudio.fields.tensorf_field.tensorffield method)": [[71, "nerfstudio.fields.tensorf_field.TensoRFField.get_outputs"]], "get_outputs() (nerfstudio.fields.vanilla_nerf_field.nerffield method)": [[71, "nerfstudio.fields.vanilla_nerf_field.NeRFField.get_outputs"]], "get_sdf() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.get_sdf"]], "get_variance() (nerfstudio.fields.sdf_field.learnedvariance method)": [[71, "nerfstudio.fields.sdf_field.LearnedVariance.get_variance"]], "hidden_dim (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.hidden_dim"]], "hidden_dim_color (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.hidden_dim_color"]], "initialize_geo_layers() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.initialize_geo_layers"]], "inside_outside (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.inside_outside"]], "log2_hashmap_size (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.log2_hashmap_size"]], "max_res (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.max_res"]], "nerfstudio.fields.base_field": [[71, "module-nerfstudio.fields.base_field"]], "nerfstudio.fields.density_fields": [[71, "module-nerfstudio.fields.density_fields"]], "nerfstudio.fields.nerfacto_field": [[71, "module-nerfstudio.fields.nerfacto_field"]], "nerfstudio.fields.nerfw_field": [[71, "module-nerfstudio.fields.nerfw_field"]], "nerfstudio.fields.sdf_field": [[71, "module-nerfstudio.fields.sdf_field"]], "nerfstudio.fields.semantic_nerf_field": [[71, "module-nerfstudio.fields.semantic_nerf_field"]], "nerfstudio.fields.tensorf_field": [[71, "module-nerfstudio.fields.tensorf_field"]], "nerfstudio.fields.vanilla_nerf_field": [[71, "module-nerfstudio.fields.vanilla_nerf_field"]], "num_layers (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_layers"]], "num_layers_color (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_layers_color"]], "num_levels (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.num_levels"]], "set_cos_anneal_ratio() (nerfstudio.fields.sdf_field.sdffield method)": [[71, "nerfstudio.fields.sdf_field.SDFField.set_cos_anneal_ratio"]], "smoothstep (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.smoothstep"]], "use_appearance_embedding (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_appearance_embedding"]], "use_grid_feature (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_grid_feature"]], "use_hash (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.use_hash"]], "weight_norm (nerfstudio.fields.sdf_field.sdffieldconfig attribute)": [[71, "nerfstudio.fields.sdf_field.SDFFieldConfig.weight_norm"]], "depthlosstype (class in nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.DepthLossType"]], "gradientloss (class in nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.GradientLoss"]], "midasmseloss (class in nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.MiDaSMSELoss"]], "scaleandshiftinvariantloss (class in nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss"]], "depth_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.depth_loss"]], "depth_ranking_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.depth_ranking_loss"]], "distortion_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.distortion_loss"]], "ds_nerf_depth_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.ds_nerf_depth_loss"]], "forward() (nerfstudio.model_components.losses.gradientloss method)": [[74, "nerfstudio.model_components.losses.GradientLoss.forward"]], "forward() (nerfstudio.model_components.losses.midasmseloss method)": [[74, "nerfstudio.model_components.losses.MiDaSMSELoss.forward"]], "forward() (nerfstudio.model_components.losses.scaleandshiftinvariantloss method)": [[74, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss.forward"]], "gradient_loss() (nerfstudio.model_components.losses.gradientloss method)": [[74, "nerfstudio.model_components.losses.GradientLoss.gradient_loss"]], "interlevel_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.interlevel_loss"]], "lossfun_distortion() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.lossfun_distortion"]], "lossfun_outer() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.lossfun_outer"]], "monosdf_normal_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.monosdf_normal_loss"]], "nerfstudio.model_components.losses": [[74, "module-nerfstudio.model_components.losses"]], "nerfstudio_distortion_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.nerfstudio_distortion_loss"]], "orientation_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.orientation_loss"]], "outer() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.outer"]], "pred_normal_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.pred_normal_loss"]], "prediction_ssi (nerfstudio.model_components.losses.scaleandshiftinvariantloss property)": [[74, "nerfstudio.model_components.losses.ScaleAndShiftInvariantLoss.prediction_ssi"]], "ray_samples_to_sdist() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.ray_samples_to_sdist"]], "scale_gradients_by_distance_squared() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.scale_gradients_by_distance_squared"]], "tv_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.tv_loss"]], "urban_radiance_field_depth_loss() (in module nerfstudio.model_components.losses)": [[74, "nerfstudio.model_components.losses.urban_radiance_field_depth_loss"]], "densityfn (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.DensityFn"]], "lineardisparitysampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.LinearDisparitySampler"]], "logsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.LogSampler"]], "neussampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.NeuSSampler"]], "pdfsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.PDFSampler"]], "proposalnetworksampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler"]], "sampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.Sampler"]], "spacedsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.SpacedSampler"]], "sqrtsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.SqrtSampler"]], "uniformlindisppiecewisesampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.UniformLinDispPiecewiseSampler"]], "uniformsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.UniformSampler"]], "volumetricsampler (class in nerfstudio.model_components.ray_samplers)": [[75, "nerfstudio.model_components.ray_samplers.VolumetricSampler"]], "forward() (nerfstudio.model_components.ray_samplers.sampler method)": [[75, "nerfstudio.model_components.ray_samplers.Sampler.forward"]], "forward() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[75, "nerfstudio.model_components.ray_samplers.VolumetricSampler.forward"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.neussampler method)": [[75, "nerfstudio.model_components.ray_samplers.NeuSSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.pdfsampler method)": [[75, "nerfstudio.model_components.ray_samplers.PDFSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[75, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.sampler method)": [[75, "nerfstudio.model_components.ray_samplers.Sampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.spacedsampler method)": [[75, "nerfstudio.model_components.ray_samplers.SpacedSampler.generate_ray_samples"]], "generate_ray_samples() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[75, "nerfstudio.model_components.ray_samplers.VolumetricSampler.generate_ray_samples"]], "get_sigma_fn() (nerfstudio.model_components.ray_samplers.volumetricsampler method)": [[75, "nerfstudio.model_components.ray_samplers.VolumetricSampler.get_sigma_fn"]], "merge_ray_samples() (nerfstudio.model_components.ray_samplers.neussampler static method)": [[75, "nerfstudio.model_components.ray_samplers.NeuSSampler.merge_ray_samples"]], "nerfstudio.model_components.ray_samplers": [[75, "module-nerfstudio.model_components.ray_samplers"]], "rendering_sdf_with_fixed_inv_s() (nerfstudio.model_components.ray_samplers.neussampler static method)": [[75, "nerfstudio.model_components.ray_samplers.NeuSSampler.rendering_sdf_with_fixed_inv_s"]], "set_anneal() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[75, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.set_anneal"]], "step_cb() (nerfstudio.model_components.ray_samplers.proposalnetworksampler method)": [[75, "nerfstudio.model_components.ray_samplers.ProposalNetworkSampler.step_cb"]], "accumulationrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.AccumulationRenderer"]], "depthrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.DepthRenderer"]], "normalsrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.NormalsRenderer"]], "rgbrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.RGBRenderer"]], "shrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.SHRenderer"]], "semanticrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.SemanticRenderer"]], "uncertaintyrenderer (class in nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.UncertaintyRenderer"]], "background_color_override_context() (in module nerfstudio.model_components.renderers)": [[76, "nerfstudio.model_components.renderers.background_color_override_context"]], "blend_background() (nerfstudio.model_components.renderers.rgbrenderer method)": [[76, "nerfstudio.model_components.renderers.RGBRenderer.blend_background"]], "blend_background_for_loss_computation() (nerfstudio.model_components.renderers.rgbrenderer method)": [[76, "nerfstudio.model_components.renderers.RGBRenderer.blend_background_for_loss_computation"]], "combine_rgb() (nerfstudio.model_components.renderers.rgbrenderer class method)": [[76, "nerfstudio.model_components.renderers.RGBRenderer.combine_rgb"]], "forward() (nerfstudio.model_components.renderers.accumulationrenderer class method)": [[76, "nerfstudio.model_components.renderers.AccumulationRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.depthrenderer method)": [[76, "nerfstudio.model_components.renderers.DepthRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.normalsrenderer class method)": [[76, "nerfstudio.model_components.renderers.NormalsRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.rgbrenderer method)": [[76, "nerfstudio.model_components.renderers.RGBRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.shrenderer method)": [[76, "nerfstudio.model_components.renderers.SHRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.semanticrenderer class method)": [[76, "nerfstudio.model_components.renderers.SemanticRenderer.forward"]], "forward() (nerfstudio.model_components.renderers.uncertaintyrenderer class method)": [[76, "nerfstudio.model_components.renderers.UncertaintyRenderer.forward"]], "get_background_color() (nerfstudio.model_components.renderers.rgbrenderer class method)": [[76, "nerfstudio.model_components.renderers.RGBRenderer.get_background_color"]], "nerfstudio.model_components.renderers": [[76, "module-nerfstudio.model_components.renderers"]], "instantngpmodelconfig (class in nerfstudio.models.instant_ngp)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig"]], "model (class in nerfstudio.models.base_model)": [[77, "nerfstudio.models.base_model.Model"]], "modelconfig (class in nerfstudio.models.base_model)": [[77, "nerfstudio.models.base_model.ModelConfig"]], "ngpmodel (class in nerfstudio.models.instant_ngp)": [[77, "nerfstudio.models.instant_ngp.NGPModel"]], "nerfmodel (class in nerfstudio.models.vanilla_nerf)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel"]], "semanticnerfwmodel (class in nerfstudio.models.semantic_nerfw)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel"]], "semanticnerfwmodelconfig (class in nerfstudio.models.semantic_nerfw)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig"]], "vanillamodelconfig (class in nerfstudio.models.vanilla_nerf)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig"]], "alpha_thre (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.alpha_thre"]], "background_color (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.background_color"]], "background_color (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.background_color"]], "collider_params (nerfstudio.models.base_model.modelconfig attribute)": [[77, "nerfstudio.models.base_model.ModelConfig.collider_params"]], "collider_params (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.collider_params"]], "cone_angle (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.cone_angle"]], "device (nerfstudio.models.base_model.model property)": [[77, "nerfstudio.models.base_model.Model.device"]], "disable_scene_contraction (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.disable_scene_contraction"]], "enable_collider (nerfstudio.models.base_model.modelconfig attribute)": [[77, "nerfstudio.models.base_model.ModelConfig.enable_collider"]], "enable_collider (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.enable_collider"]], "enable_temporal_distortion (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.enable_temporal_distortion"]], "eval_num_rays_per_chunk (nerfstudio.models.base_model.modelconfig attribute)": [[77, "nerfstudio.models.base_model.ModelConfig.eval_num_rays_per_chunk"]], "far_plane (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.far_plane"]], "forward() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.forward"]], "get_image_metrics_and_images() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_image_metrics_and_images"]], "get_image_metrics_and_images() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel.get_image_metrics_and_images"]], "get_loss_dict() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_loss_dict"]], "get_loss_dict() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel.get_loss_dict"]], "get_metrics_dict() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_metrics_dict"]], "get_metrics_dict() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_metrics_dict"]], "get_metrics_dict() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_metrics_dict"]], "get_outputs() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_outputs"]], "get_outputs() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_outputs"]], "get_outputs() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_outputs"]], "get_outputs() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel.get_outputs"]], "get_outputs_for_camera() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_outputs_for_camera"]], "get_outputs_for_camera_ray_bundle() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_outputs_for_camera_ray_bundle"]], "get_param_groups() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_param_groups"]], "get_param_groups() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_param_groups"]], "get_param_groups() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_param_groups"]], "get_param_groups() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel.get_param_groups"]], "get_rgba_image() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_rgba_image"]], "get_training_callbacks() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.get_training_callbacks"]], "get_training_callbacks() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.get_training_callbacks"]], "get_training_callbacks() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.get_training_callbacks"]], "grid_levels (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.grid_levels"]], "grid_resolution (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.grid_resolution"]], "load_model() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.load_model"]], "log2_hashmap_size (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.log2_hashmap_size"]], "loss_coefficients (nerfstudio.models.base_model.modelconfig attribute)": [[77, "nerfstudio.models.base_model.ModelConfig.loss_coefficients"]], "max_res (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.max_res"]], "near_plane (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.near_plane"]], "nerfstudio.models.base_model": [[77, "module-nerfstudio.models.base_model"]], "nerfstudio.models.instant_ngp": [[77, "module-nerfstudio.models.instant_ngp"]], "nerfstudio.models.semantic_nerfw": [[77, "module-nerfstudio.models.semantic_nerfw"]], "nerfstudio.models.vanilla_nerf": [[77, "module-nerfstudio.models.vanilla_nerf"]], "num_coarse_samples (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.num_coarse_samples"]], "num_importance_samples (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.num_importance_samples"]], "populate_modules() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.populate_modules"]], "populate_modules() (nerfstudio.models.instant_ngp.ngpmodel method)": [[77, "nerfstudio.models.instant_ngp.NGPModel.populate_modules"]], "populate_modules() (nerfstudio.models.semantic_nerfw.semanticnerfwmodel method)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModel.populate_modules"]], "populate_modules() (nerfstudio.models.vanilla_nerf.nerfmodel method)": [[77, "nerfstudio.models.vanilla_nerf.NeRFModel.populate_modules"]], "prompt (nerfstudio.models.base_model.modelconfig attribute)": [[77, "nerfstudio.models.base_model.ModelConfig.prompt"]], "render_step_size (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.render_step_size"]], "temporal_distortion_params (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.temporal_distortion_params"]], "update_to_step() (nerfstudio.models.base_model.model method)": [[77, "nerfstudio.models.base_model.Model.update_to_step"]], "use_appearance_embedding (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.use_appearance_embedding"]], "use_gradient_scaling (nerfstudio.models.instant_ngp.instantngpmodelconfig attribute)": [[77, "nerfstudio.models.instant_ngp.InstantNGPModelConfig.use_gradient_scaling"]], "use_gradient_scaling (nerfstudio.models.vanilla_nerf.vanillamodelconfig attribute)": [[77, "nerfstudio.models.vanilla_nerf.VanillaModelConfig.use_gradient_scaling"]], "use_transient_embedding (nerfstudio.models.semantic_nerfw.semanticnerfwmodelconfig attribute)": [[77, "nerfstudio.models.semantic_nerfw.SemanticNerfWModelConfig.use_transient_embedding"]], "adamoptimizerconfig (class in nerfstudio.engine.optimizers)": [[78, "nerfstudio.engine.optimizers.AdamOptimizerConfig"]], "cosinedecayscheduler (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.CosineDecayScheduler"]], "cosinedecayschedulerconfig (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig"]], "exponentialdecayscheduler (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.ExponentialDecayScheduler"]], "exponentialdecayschedulerconfig (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig"]], "multistepscheduler (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.MultiStepScheduler"]], "multistepschedulerconfig (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig"]], "optimizerconfig (class in nerfstudio.engine.optimizers)": [[78, "nerfstudio.engine.optimizers.OptimizerConfig"]], "optimizers (class in nerfstudio.engine.optimizers)": [[78, "nerfstudio.engine.optimizers.Optimizers"]], "radamoptimizerconfig (class in nerfstudio.engine.optimizers)": [[78, "nerfstudio.engine.optimizers.RAdamOptimizerConfig"]], "scheduler (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.Scheduler"]], "schedulerconfig (class in nerfstudio.engine.schedulers)": [[78, "nerfstudio.engine.schedulers.SchedulerConfig"]], "trainer (class in nerfstudio.engine.trainer)": [[78, "nerfstudio.engine.trainer.Trainer"]], "trainerconfig (class in nerfstudio.engine.trainer)": [[78, "nerfstudio.engine.trainer.TrainerConfig"]], "trainingcallback (class in nerfstudio.engine.callbacks)": [[78, "nerfstudio.engine.callbacks.TrainingCallback"]], "trainingcallbackattributes (class in nerfstudio.engine.callbacks)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackAttributes"]], "trainingcallbacklocation (class in nerfstudio.engine.callbacks)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackLocation"]], "callbacks (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.callbacks"]], "config (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.config"]], "device (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.device"]], "eps (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[78, "nerfstudio.engine.optimizers.OptimizerConfig.eps"]], "gamma (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.gamma"]], "get_scheduler() (nerfstudio.engine.schedulers.cosinedecayscheduler method)": [[78, "nerfstudio.engine.schedulers.CosineDecayScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.exponentialdecayscheduler method)": [[78, "nerfstudio.engine.schedulers.ExponentialDecayScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.multistepscheduler method)": [[78, "nerfstudio.engine.schedulers.MultiStepScheduler.get_scheduler"]], "get_scheduler() (nerfstudio.engine.schedulers.scheduler method)": [[78, "nerfstudio.engine.schedulers.Scheduler.get_scheduler"]], "grad_scaler (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.grad_scaler"]], "gradient_accumulation_steps (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.gradient_accumulation_steps"]], "learning_rate_alpha (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.learning_rate_alpha"]], "load_checkpoint (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.load_checkpoint"]], "load_config (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.load_config"]], "load_dir (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.load_dir"]], "load_optimizers() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.load_optimizers"]], "load_schedulers() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.load_schedulers"]], "load_step (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.load_step"]], "local_rank (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.local_rank"]], "log_gradients (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.log_gradients"]], "lr (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[78, "nerfstudio.engine.optimizers.OptimizerConfig.lr"]], "lr_final (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.lr_final"]], "lr_pre_warmup (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.lr_pre_warmup"]], "max_norm (nerfstudio.engine.optimizers.optimizerconfig attribute)": [[78, "nerfstudio.engine.optimizers.OptimizerConfig.max_norm"]], "max_num_iterations (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.max_num_iterations"]], "max_steps (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.max_steps"]], "max_steps (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.max_steps"]], "max_steps (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.max_steps"]], "milestones (nerfstudio.engine.schedulers.multistepschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.MultiStepSchedulerConfig.milestones"]], "mixed_precision (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.mixed_precision"]], "nerfstudio.engine.callbacks": [[78, "module-nerfstudio.engine.callbacks"]], "nerfstudio.engine.optimizers": [[78, "module-nerfstudio.engine.optimizers"]], "nerfstudio.engine.schedulers": [[78, "module-nerfstudio.engine.schedulers"]], "nerfstudio.engine.trainer": [[78, "module-nerfstudio.engine.trainer"]], "optimizer_scaler_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.optimizer_scaler_step_all"]], "optimizer_scaler_step_some() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.optimizer_scaler_step_some"]], "optimizer_step() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.optimizer_step"]], "optimizer_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.optimizer_step_all"]], "optimizers (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.optimizers"]], "optimizers (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.optimizers"]], "pipeline (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.pipeline"]], "pipeline (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.pipeline"]], "ramp (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.ramp"]], "run_callback() (nerfstudio.engine.callbacks.trainingcallback method)": [[78, "nerfstudio.engine.callbacks.TrainingCallback.run_callback"]], "run_callback_at_location() (nerfstudio.engine.callbacks.trainingcallback method)": [[78, "nerfstudio.engine.callbacks.TrainingCallback.run_callback_at_location"]], "save_only_latest_checkpoint (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.save_only_latest_checkpoint"]], "scheduler_step() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.scheduler_step"]], "scheduler_step_all() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.scheduler_step_all"]], "setup() (nerfstudio.engine.optimizers.optimizerconfig method)": [[78, "nerfstudio.engine.optimizers.OptimizerConfig.setup"]], "setup() (nerfstudio.engine.trainer.trainer method)": [[78, "nerfstudio.engine.trainer.Trainer.setup"]], "setup_optimizers() (nerfstudio.engine.trainer.trainer method)": [[78, "nerfstudio.engine.trainer.Trainer.setup_optimizers"]], "shutdown() (nerfstudio.engine.trainer.trainer method)": [[78, "nerfstudio.engine.trainer.Trainer.shutdown"]], "start_paused (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.start_paused"]], "steps_per_eval_all_images (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_all_images"]], "steps_per_eval_batch (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_batch"]], "steps_per_eval_image (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.steps_per_eval_image"]], "steps_per_save (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.steps_per_save"]], "train() (nerfstudio.engine.trainer.trainer method)": [[78, "nerfstudio.engine.trainer.Trainer.train"]], "train_iteration() (nerfstudio.engine.trainer.trainer method)": [[78, "nerfstudio.engine.trainer.Trainer.train_iteration"]], "trainer (nerfstudio.engine.callbacks.trainingcallbackattributes attribute)": [[78, "nerfstudio.engine.callbacks.TrainingCallbackAttributes.trainer"]], "training_state (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.training_state"]], "use_grad_scaler (nerfstudio.engine.trainer.trainerconfig attribute)": [[78, "nerfstudio.engine.trainer.TrainerConfig.use_grad_scaler"]], "warm_up_end (nerfstudio.engine.schedulers.cosinedecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.CosineDecaySchedulerConfig.warm_up_end"]], "warmup_steps (nerfstudio.engine.schedulers.exponentialdecayschedulerconfig attribute)": [[78, "nerfstudio.engine.schedulers.ExponentialDecaySchedulerConfig.warmup_steps"]], "weight_decay (nerfstudio.engine.optimizers.adamoptimizerconfig attribute)": [[78, "nerfstudio.engine.optimizers.AdamOptimizerConfig.weight_decay"]], "weight_decay (nerfstudio.engine.optimizers.radamoptimizerconfig attribute)": [[78, "nerfstudio.engine.optimizers.RAdamOptimizerConfig.weight_decay"]], "world_size (nerfstudio.engine.trainer.trainer attribute)": [[78, "nerfstudio.engine.trainer.Trainer.world_size"]], "zero_grad_all() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.zero_grad_all"]], "zero_grad_some() (nerfstudio.engine.optimizers.optimizers method)": [[78, "nerfstudio.engine.optimizers.Optimizers.zero_grad_some"]], "dataparserspecification (class in nerfstudio.plugins.registry_dataparser)": [[79, "nerfstudio.plugins.registry_dataparser.DataParserSpecification"]], "methodspecification (class in nerfstudio.plugins.types)": [[79, "nerfstudio.plugins.types.MethodSpecification"]], "config (nerfstudio.plugins.registry_dataparser.dataparserspecification attribute)": [[79, "nerfstudio.plugins.registry_dataparser.DataParserSpecification.config"]], "config (nerfstudio.plugins.types.methodspecification attribute)": [[79, "nerfstudio.plugins.types.MethodSpecification.config"]], "description (nerfstudio.plugins.registry_dataparser.dataparserspecification attribute)": [[79, "nerfstudio.plugins.registry_dataparser.DataParserSpecification.description"]], "description (nerfstudio.plugins.types.methodspecification attribute)": [[79, "nerfstudio.plugins.types.MethodSpecification.description"]], "discover_dataparsers() (in module nerfstudio.plugins.registry_dataparser)": [[79, "nerfstudio.plugins.registry_dataparser.discover_dataparsers"]], "discover_methods() (in module nerfstudio.plugins.registry)": [[79, "nerfstudio.plugins.registry.discover_methods"]], "nerfstudio.plugins.registry": [[79, "module-nerfstudio.plugins.registry"]], "nerfstudio.plugins.registry_dataparser": [[79, "module-nerfstudio.plugins.registry_dataparser"]], "nerfstudio.plugins.types": [[79, "module-nerfstudio.plugins.types"]], "colormapoptions (class in nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.ColormapOptions"]], "apply_boolean_colormap() (in module nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.apply_boolean_colormap"]], "apply_colormap() (in module nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.apply_colormap"]], "apply_depth_colormap() (in module nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.apply_depth_colormap"]], "apply_float_colormap() (in module nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.apply_float_colormap"]], "apply_pca_colormap() (in module nerfstudio.utils.colormaps)": [[80, "nerfstudio.utils.colormaps.apply_pca_colormap"]], "colormap (nerfstudio.utils.colormaps.colormapoptions attribute)": [[80, "nerfstudio.utils.colormaps.ColormapOptions.colormap"]], "colormap_max (nerfstudio.utils.colormaps.colormapoptions attribute)": [[80, "nerfstudio.utils.colormaps.ColormapOptions.colormap_max"]], "colormap_min (nerfstudio.utils.colormaps.colormapoptions attribute)": [[80, "nerfstudio.utils.colormaps.ColormapOptions.colormap_min"]], "invert (nerfstudio.utils.colormaps.colormapoptions attribute)": [[80, "nerfstudio.utils.colormaps.ColormapOptions.invert"]], "nerfstudio.utils.colormaps": [[80, "module-nerfstudio.utils.colormaps"]], "normalize (nerfstudio.utils.colormaps.colormapoptions attribute)": [[80, "nerfstudio.utils.colormaps.ColormapOptions.normalize"]], "get_color() (in module nerfstudio.utils.colors)": [[81, "nerfstudio.utils.colors.get_color"]], "nerfstudio.utils.colors": [[81, "module-nerfstudio.utils.colors"]], "gaussians (class in nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.Gaussians"]], "columnwise_squared_l2_distance() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.columnwise_squared_l2_distance"]], "compute_3d_gaussian() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.compute_3d_gaussian"]], "conical_frustum_to_gaussian() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.conical_frustum_to_gaussian"]], "cylinder_to_gaussian() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.cylinder_to_gaussian"]], "expected_sin() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.expected_sin"]], "generate_polyhedron_basis() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.generate_polyhedron_basis"]], "intersect_aabb() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.intersect_aabb"]], "intersect_obb() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.intersect_obb"]], "k_nearest_sklearn() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.k_nearest_sklearn"]], "masked_reduction() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.masked_reduction"]], "nerfstudio.utils.math": [[83, "module-nerfstudio.utils.math"]], "normalized_depth_scale_and_shift() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.normalized_depth_scale_and_shift"]], "random_quat_tensor() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.random_quat_tensor"]], "safe_normalize() (in module nerfstudio.utils.math)": [[83, "nerfstudio.utils.math.safe_normalize"]], "tensordataclass (class in nerfstudio.utils.tensor_dataclass)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass"]], "__post_init__() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.__post_init__"]], "broadcast_to() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.broadcast_to"]], "flatten() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.flatten"]], "ndim (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.ndim"]], "nerfstudio.utils.tensor_dataclass": [[84, "module-nerfstudio.utils.tensor_dataclass"]], "pin_memory() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.pin_memory"]], "reshape() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.reshape"]], "shape (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.shape"]], "size (nerfstudio.utils.tensor_dataclass.tensordataclass property)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.size"]], "to() (nerfstudio.utils.tensor_dataclass.tensordataclass method)": [[84, "nerfstudio.utils.tensor_dataclass.TensorDataclass.to"]], "viewerbutton (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerButton"]], "viewerbuttongroup (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerButtonGroup"]], "viewercheckbox (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerCheckbox"]], "viewerclick (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerClick"]], "viewercontrol (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl"]], "viewerdropdown (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerDropdown"]], "viewerelement (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement"]], "viewernumber (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerNumber"]], "viewerparameter (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerParameter"]], "viewerrgb (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerRGB"]], "viewerrectselect (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerRectSelect"]], "viewerslider (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerSlider"]], "viewertext (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerText"]], "viewervec3 (class in nerfstudio.viewer.viewer_elements)": [[85, "nerfstudio.viewer.viewer_elements.ViewerVec3"]], "direction (nerfstudio.viewer.viewer_elements.viewerclick attribute)": [[85, "nerfstudio.viewer.viewer_elements.ViewerClick.direction"]], "get_camera() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.get_camera"]], "install() (nerfstudio.viewer.viewer_elements.viewerbutton method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerButton.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerbuttongroup method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerButtonGroup.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement.install"]], "install() (nerfstudio.viewer.viewer_elements.viewerparameter method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerParameter.install"]], "max_bounds (nerfstudio.viewer.viewer_elements.viewerrectselect attribute)": [[85, "nerfstudio.viewer.viewer_elements.ViewerRectSelect.max_bounds"]], "min_bounds (nerfstudio.viewer.viewer_elements.viewerrectselect attribute)": [[85, "nerfstudio.viewer.viewer_elements.ViewerRectSelect.min_bounds"]], "nerfstudio.viewer.viewer_elements": [[85, "module-nerfstudio.viewer.viewer_elements"]], "origin (nerfstudio.viewer.viewer_elements.viewerclick attribute)": [[85, "nerfstudio.viewer.viewer_elements.ViewerClick.origin"]], "register_click_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.register_click_cb"]], "register_pointer_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.register_pointer_cb"]], "remove() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement.remove"]], "screen_pos (nerfstudio.viewer.viewer_elements.viewerclick attribute)": [[85, "nerfstudio.viewer.viewer_elements.ViewerClick.screen_pos"]], "set_crop() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.set_crop"]], "set_disabled() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement.set_disabled"]], "set_fov() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.set_fov"]], "set_hidden() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement.set_hidden"]], "set_options() (nerfstudio.viewer.viewer_elements.viewerdropdown method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerDropdown.set_options"]], "set_pose() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.set_pose"]], "set_visible() (nerfstudio.viewer.viewer_elements.viewerelement method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerElement.set_visible"]], "unregister_click_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.unregister_click_cb"]], "unregister_pointer_cb() (nerfstudio.viewer.viewer_elements.viewercontrol method)": [[85, "nerfstudio.viewer.viewer_elements.ViewerControl.unregister_pointer_cb"]], "value (nerfstudio.viewer.viewer_elements.viewerparameter property)": [[85, "nerfstudio.viewer.viewer_elements.ViewerParameter.value"]]}})